/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/room"],{

/***/ "./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js":
/*!********************************************************************************!*\
  !*** ./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MathJaxBaseContext: function() { return /* binding */ MathJaxBaseContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = undefined && undefined.__assign || function () {\n  return (__assign = Object.assign || function (e) {\n    for (var t, o = 1, n = arguments.length; o < n; o++) for (var a in t = arguments[o]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);\n    return e;\n  }).apply(this, arguments);\n};\n\nvar v2Promise,\n  v3Promise,\n  MathJaxBaseContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0),\n  DEFAULT_V2_SRC = \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-MML-AM_CHTML\",\n  DEFAULT_V3_SRC = \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js\",\n  MathJaxContext = function (e) {\n    var n = e.config,\n      t = e.version,\n      t = void 0 === t ? 3 : t,\n      o = e.src,\n      o = void 0 === o ? 2 === t ? DEFAULT_V2_SRC : DEFAULT_V3_SRC : o,\n      a = e.onStartup,\n      r = e.onLoad,\n      i = e.asyncLoad,\n      s = void 0 !== i && i,\n      h = e.onError,\n      i = e.typesettingOptions,\n      d = e.renderMode,\n      d = void 0 === d ? \"post\" : d,\n      c = e.hideUntilTypeset,\n      e = e.children,\n      u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MathJaxBaseContext);\n    if (void 0 !== (null == u ? void 0 : u.version) && (null == u ? void 0 : u.version) !== t) throw Error(\"Cannot nest MathJaxContexts with different versions. MathJaxContexts should not be nested at all but if they are, they cannot have different versions. Stick with one version of MathJax in your app and avoid using more than one MathJaxContext.\");\n    if (2 === t && void 0 !== v3Promise || 3 === t && void 0 !== v2Promise) throw Error(\"Cannot use MathJax versions 2 and 3 simultaneously in the same app due to how MathJax is set up in the browser; either you have multiple MathJaxContexts with different versions or you have mounted and unmounted MathJaxContexts with different versions. Please stick with one version of MathJax in your app. File an issue in the project Github page if you need this feature.\");\n    var v = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(u),\n      u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)((null == u ? void 0 : u.version) || null);\n    if (null === u.current) u.current = t;else if (u.current !== t) throw Error(\"Cannot change version of MathJax in a MathJaxContext after it has mounted. Reload the page with a new version when this must happen.\");\n    var f = o || (2 === t ? DEFAULT_V2_SRC : DEFAULT_V3_SRC);\n    function l(t, o) {\n      n && (window.MathJax = n);\n      var e = document.createElement(\"script\");\n      e.type = \"text/javascript\", e.src = f, e.async = s, e.addEventListener(\"load\", function () {\n        var e = window.MathJax;\n        a && a(e), t(e), r && r();\n      }), e.addEventListener(\"error\", function (e) {\n        return o(e);\n      }), document.getElementsByTagName(\"head\")[0].appendChild(e);\n    }\n    return void 0 === v.current && (u = {\n      typesettingOptions: i,\n      renderMode: d,\n      hideUntilTypeset: c\n    }, 2 === t ? void 0 === v2Promise && (\"undefined\" != typeof window ? (v2Promise = new Promise(l)).catch(function (e) {\n      if (!h) throw Error(\"Failed to download MathJax version 2 from '\".concat(f, \"' due to: \").concat(JSON.stringify(e)));\n      h(e);\n    }) : (v2Promise = Promise.reject()).catch(function (e) {})) : void 0 === v3Promise && (\"undefined\" != typeof window ? (v3Promise = new Promise(l)).catch(function (e) {\n      if (!h) throw Error(\"Failed to download MathJax version 3 from '\".concat(f, \"' due to: \").concat(e));\n      h(e);\n    }) : (v3Promise = Promise.reject()).catch(function (e) {})), v.current = __assign(__assign({}, u), 2 === t ? {\n      version: 2,\n      promise: v2Promise\n    } : {\n      version: 3,\n      promise: v3Promise\n    })), react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MathJaxBaseContext.Provider, {\n      value: v.current\n    }, e);\n  };\n/* harmony default export */ __webpack_exports__[\"default\"] = (MathJaxContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js\n"));

/***/ }),

/***/ "./node_modules/better-react-mathjax/esm/MathJaxContext/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/better-react-mathjax/esm/MathJaxContext/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MathJaxBaseContext: function() { return /* reexport safe */ _MathJaxContext__WEBPACK_IMPORTED_MODULE_0__.MathJaxBaseContext; },
/* harmony export */   MathJaxContext: function() { return /* reexport safe */ _MathJaxContext__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   "default": function() { return /* reexport safe */ _MathJaxContext__WEBPACK_IMPORTED_MODULE_0__["default"]; }
/* harmony export */ });
/* harmony import */ var _MathJaxContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MathJaxContext */ "./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js");


/***/ }),

/***/ "./node_modules/better-react-mathjax/esm/MathJax/MathJax.js":
/*!******************************************************************!*\
  !*** ./node_modules/better-react-mathjax/esm/MathJax/MathJax.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MathJaxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MathJaxContext */ \"./node_modules/better-react-mathjax/esm/MathJaxContext/index.js\");\nvar __assign = undefined && undefined.__assign || function () {\n    return (__assign = Object.assign || function (t) {\n      for (var e, n = 1, r = arguments.length; n < r; n++) for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);\n      return t;\n    }).apply(this, arguments);\n  },\n  __rest = undefined && undefined.__rest || function (t, e) {\n    var n = {};\n    for (i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (n[i] = t[i]);\n    if (null != t && \"function\" == typeof Object.getOwnPropertySymbols) for (var r = 0, i = Object.getOwnPropertySymbols(t); r < i.length; r++) e.indexOf(i[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[r]) && (n[i[r]] = t[i[r]]);\n    return n;\n  };\n\n\nvar typesettingFailed = function (t) {\n    return \"Typesetting failed: \".concat(void 0 !== t.message ? t.message : JSON.stringify(t));\n  },\n  MathJax = function (t) {\n    function r() {\n      var t;\n      \"every\" === h && m && \"post\" === v && null !== f.current && (f.current.style.visibility = null != (t = null == (t = p.style) ? void 0 : t.visibility) ? t : \"visible\"), _.current || (\"first\" === h && null !== f.current && (f.current.style.visibility = \"visible\"), n && n(), _.current = !0), o && o(), b.current = !1;\n    }\n    var e = t.inline,\n      i = void 0 !== e && e,\n      e = t.hideUntilTypeset,\n      n = t.onInitTypeset,\n      o = t.onTypeset,\n      s = t.text,\n      u = t.dynamic,\n      a = t.typesettingOptions,\n      l = t.renderMode,\n      c = t.children,\n      p = __rest(t, [\"inline\", \"hideUntilTypeset\", \"onInitTypeset\", \"onTypeset\", \"text\", \"dynamic\", \"typesettingOptions\", \"renderMode\", \"children\"]),\n      y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(\"\"),\n      f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n      d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_MathJaxContext__WEBPACK_IMPORTED_MODULE_1__.MathJaxBaseContext),\n      h = null != e ? e : null == d ? void 0 : d.hideUntilTypeset,\n      v = null != l ? l : null == d ? void 0 : d.renderMode,\n      g = null != a ? a : null == d ? void 0 : d.typesettingOptions,\n      m = !1 !== u && (u || \"production\" !== \"development\"),\n      _ = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),\n      b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1);\n    return !b.current && null !== f.current && m && \"every\" === h && \"post\" === v && (f.current.style.visibility = \"hidden\"), (\"undefined\" != typeof window ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n      if ((m || !_.current) && null !== f.current) {\n        if (!d) throw Error(\"MathJax was not loaded, did you use the MathJax component outside of a MathJaxContext?\");\n        if (\"pre\" === v) {\n          if (!(\"string\" == typeof (t = s) && 0 < t.length)) throw Error(\"Render mode 'pre' requires text prop to be set and non-empty, which was currently \\\"\".concat(s, '\"'));\n          if (!a || !a.fn) throw Error(\"Render mode 'pre' requires 'typesettingOptions' prop with 'fn' property to be set on MathJax element or in the MathJaxContext\");\n          if (2 === d.version) throw Error(\"Render mode 'pre' only available with MathJax 3, and version 2 is currently in use\");\n        }\n        \"post\" !== v && s === y.current || b.current || (b.current = !0, 3 === d.version ? d.promise.then(function (e) {\n          var n;\n          \"pre\" === v ? (n = function (t) {\n            y.current = s, e.startup.document.clear(), e.startup.document.updateDocument(), null !== f.current && (f.current.innerHTML = t.outerHTML), r();\n          }, a.fn.endsWith(\"Promise\") ? e.startup.promise.then(function () {\n            return e[g.fn](s, __assign(__assign({}, (null == g ? void 0 : g.options) || {}), {\n              display: !i\n            }));\n          }).then(n).catch(function (t) {\n            throw r(), Error(typesettingFailed(t));\n          }) : e.startup.promise.then(function () {\n            var t = e[g.fn](s, __assign(__assign({}, (null == g ? void 0 : g.options) || {}), {\n              display: !i\n            }));\n            n(t);\n          }).catch(function (t) {\n            throw r(), Error(typesettingFailed(t));\n          })) : e.startup.promise.then(function () {\n            return e.typesetClear([f.current]), e.typesetPromise([f.current]);\n          }).then(r).catch(function (t) {\n            throw r(), Error(typesettingFailed(t));\n          });\n        }).catch(function (t) {\n          throw r(), Error(typesettingFailed(t));\n        }) : d.promise.then(function (t) {\n          t.Hub.Queue([\"Typeset\", t.Hub, f.current]), t.Hub.Queue(r);\n        }).catch(function (t) {\n          throw r(), Error(typesettingFailed(t));\n        }));\n      }\n      var t;\n    }), react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", __assign({}, p, {\n      style: __assign(__assign({\n        display: i ? \"inline\" : \"block\"\n      }, p.style), {\n        visibility: h ? \"hidden\" : null == (t = p.style) ? void 0 : t.visibility\n      }),\n      ref: f\n    }), c);\n  };\n/* harmony default export */ __webpack_exports__[\"default\"] = (MathJax);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/better-react-mathjax/esm/MathJax/MathJax.js\n"));

/***/ }),

/***/ "./node_modules/better-react-mathjax/esm/MathJax/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/better-react-mathjax/esm/MathJax/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MathJax: function() { return /* reexport safe */ _MathJax__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   "default": function() { return /* reexport safe */ _MathJax__WEBPACK_IMPORTED_MODULE_0__["default"]; }
/* harmony export */ });
/* harmony import */ var _MathJax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MathJax */ "./node_modules/better-react-mathjax/esm/MathJax/MathJax.js");


/***/ }),

/***/ "./node_modules/better-react-mathjax/esm/index.js":
/*!********************************************************!*\
  !*** ./node_modules/better-react-mathjax/esm/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MathJax: function() { return /* reexport safe */ _MathJax__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   MathJaxBaseContext: function() { return /* reexport safe */ _MathJaxContext__WEBPACK_IMPORTED_MODULE_1__.MathJaxBaseContext; },\n/* harmony export */   MathJaxContext: function() { return /* reexport safe */ _MathJaxContext__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _MathJax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MathJax */ \"./node_modules/better-react-mathjax/esm/MathJax/index.js\");\n/* harmony import */ var _MathJaxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MathJaxContext */ \"./node_modules/better-react-mathjax/esm/MathJaxContext/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmV0dGVyLXJlYWN0LW1hdGhqYXgvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9iZXR0ZXItcmVhY3QtbWF0aGpheC9lc20vaW5kZXguanM/MThhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnR7ZGVmYXVsdCBhcyBNYXRoSmF4fWZyb21cIi4vTWF0aEpheFwiO2V4cG9ydHtkZWZhdWx0IGFzIE1hdGhKYXhDb250ZXh0LE1hdGhKYXhCYXNlQ29udGV4dH1mcm9tXCIuL01hdGhKYXhDb250ZXh0XCI7Il0sIm5hbWVzIjpbImRlZmF1bHQiLCJNYXRoSmF4IiwiTWF0aEpheENvbnRleHQiLCJNYXRoSmF4QmFzZUNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/better-react-mathjax/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/cookies-next/lib/client/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/cookies-next/lib/client/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useCookiesNext = exports.useDeleteCookie = exports.useGetCookie = exports.useSetCookie = exports.useHasCookie = exports.useGetCookies = exports.hasCookie = exports.deleteCookie = exports.setCookie = exports.getCookie = exports.getCookies = void 0;\nvar cookie_1 = __webpack_require__(/*! cookie */ \"./node_modules/cookies-next/node_modules/cookie/dist/index.js\");\nvar utils_1 = __webpack_require__(/*! ../common/utils */ \"./node_modules/cookies-next/lib/common/utils.js\");\nvar react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ensureClientSide = function (options) {\n  if (!(0, utils_1.isClientSide)(options)) {\n    throw new Error('You are trying to access cookies on the server side. Please, use the server-side import with `cookies-next/server` instead.');\n  }\n};\nvar getCookies = function (_options) {\n  ensureClientSide(_options);\n  if ((0, utils_1.getRenderPhase)() === 'server') {\n    return;\n  }\n  var cookies = {};\n  var documentCookies = document.cookie ? document.cookie.split('; ') : [];\n  for (var i = 0, len = documentCookies.length; i < len; i++) {\n    var cookieParts = documentCookies[i].split('=');\n    var cookie = cookieParts.slice(1).join('=');\n    var name_1 = cookieParts[0];\n    cookies[name_1] = cookie;\n  }\n  return cookies;\n};\nexports.getCookies = getCookies;\nvar getCookie = function (key, options) {\n  ensureClientSide(options);\n  var _cookies = getCookies(options);\n  var value = _cookies === null || _cookies === void 0 ? void 0 : _cookies[key];\n  if (value === undefined) return undefined;\n  return (0, utils_1.decode)(value);\n};\nexports.getCookie = getCookie;\nvar setCookie = function (key, data, options) {\n  ensureClientSide(options);\n  if ((0, utils_1.getRenderPhase)() === 'server') {\n    return;\n  }\n  var _cookieOptions = options || {};\n  var cookieStr = (0, cookie_1.serialize)(key, (0, utils_1.stringify)(data), __assign({\n    path: '/'\n  }, _cookieOptions));\n  document.cookie = cookieStr;\n};\nexports.setCookie = setCookie;\nvar deleteCookie = function (key, options) {\n  ensureClientSide(options);\n  setCookie(key, '', __assign(__assign({}, options), {\n    maxAge: -1\n  }));\n};\nexports.deleteCookie = deleteCookie;\nvar hasCookie = function (key, options) {\n  ensureClientSide(options);\n  if (!key) return false;\n  var cookies = getCookies(options);\n  if (!cookies) {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(cookies, key);\n};\nexports.hasCookie = hasCookie;\nvar useWrappedCookieFn = function (cookieFnCb) {\n  var _a = (0, react_1.useState)(false),\n    isMounted = _a[0],\n    setIsMounted = _a[1];\n  (0, react_1.useEffect)(function () {\n    setIsMounted(true);\n  }, []);\n  return isMounted ? cookieFnCb : function () {};\n};\nvar useGetCookies = function () {\n  return useWrappedCookieFn(getCookies);\n};\nexports.useGetCookies = useGetCookies;\nvar useGetCookie = function () {\n  return useWrappedCookieFn(getCookie);\n};\nexports.useGetCookie = useGetCookie;\nvar useHasCookie = function () {\n  return useWrappedCookieFn(hasCookie);\n};\nexports.useHasCookie = useHasCookie;\nvar useSetCookie = function () {\n  return useWrappedCookieFn(setCookie);\n};\nexports.useSetCookie = useSetCookie;\nvar useDeleteCookie = function () {\n  return useWrappedCookieFn(deleteCookie);\n};\nexports.useDeleteCookie = useDeleteCookie;\nvar useCookiesNext = function () {\n  return {\n    getCookies: useGetCookies(),\n    getCookie: useGetCookie(),\n    hasCookie: useHasCookie(),\n    setCookie: useSetCookie(),\n    deleteCookie: useDeleteCookie()\n  };\n};\nexports.useCookiesNext = useCookiesNext;\n__exportStar(__webpack_require__(/*! ../common/types */ \"./node_modules/cookies-next/lib/common/types.js\"), exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cookies-next/lib/client/index.js\n"));

/***/ }),

/***/ "./node_modules/cookies-next/lib/common/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/cookies-next/lib/common/types.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llcy1uZXh0L2xpYi9jb21tb24vdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nvb2tpZXMtbmV4dC9saWIvY29tbW9uL3R5cGVzLmpzPzdmNjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/cookies-next/lib/common/types.js\n"));

/***/ }),

/***/ "./node_modules/cookies-next/lib/common/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/cookies-next/lib/common/utils.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getRenderPhase = exports.isClientSide = exports.decode = exports.stringify = void 0;\nvar stringify = function (value) {\n  try {\n    if (typeof value === 'string') {\n      return value;\n    }\n    var stringifiedValue = JSON.stringify(value);\n    return stringifiedValue;\n  } catch (e) {\n    return value;\n  }\n};\nexports.stringify = stringify;\nvar decode = function (str) {\n  if (!str) return str;\n  return str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n};\nexports.decode = decode;\nvar isClientSide = function (options) {\n  return !(options === null || options === void 0 ? void 0 : options.req) && !(options === null || options === void 0 ? void 0 : options.res) && !(options && 'cookies' in options && (options === null || options === void 0 ? void 0 : options.cookies));\n};\nexports.isClientSide = isClientSide;\nvar getRenderPhase = function () {\n  return typeof window === 'undefined' ? 'server' : 'client';\n};\nexports.getRenderPhase = getRenderPhase;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29va2llcy1uZXh0L2xpYi9jb21tb24vdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHQSxvQkFBb0IsR0FBR0EsY0FBYyxHQUFHQSxpQkFBaUIsR0FBRyxLQUFLLENBQUM7QUFDM0YsSUFBSUssU0FBUyxHQUFHLFNBQUFBLENBQVVKLEtBQUssRUFBRTtFQUM3QixJQUFJO0lBQ0EsSUFBSSxPQUFPQSxLQUFLLEtBQUssUUFBUSxFQUFFO01BQzNCLE9BQU9BLEtBQUs7SUFDaEI7SUFDQSxJQUFJSyxnQkFBZ0IsR0FBR0MsSUFBSSxDQUFDRixTQUFTLENBQUNKLEtBQUssQ0FBQztJQUM1QyxPQUFPSyxnQkFBZ0I7RUFDM0IsQ0FBQyxDQUNELE9BQU9FLENBQUMsRUFBRTtJQUNOLE9BQU9QLEtBQUs7RUFDaEI7QUFDSixDQUFDO0FBQ0RELGlCQUFpQixHQUFHSyxTQUFTO0FBQzdCLElBQUlELE1BQU0sR0FBRyxTQUFBQSxDQUFVSyxHQUFHLEVBQUU7RUFDeEIsSUFBSSxDQUFDQSxHQUFHLEVBQ0osT0FBT0EsR0FBRztFQUNkLE9BQU9BLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLGtCQUFrQixFQUFFQyxrQkFBa0IsQ0FBQztBQUM5RCxDQUFDO0FBQ0RYLGNBQWMsR0FBR0ksTUFBTTtBQUN2QixJQUFJRCxZQUFZLEdBQUcsU0FBQUEsQ0FBVVMsT0FBTyxFQUFFO0VBQ2xDLE9BQU8sRUFBRUEsT0FBTyxLQUFLLElBQUksSUFBSUEsT0FBTyxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxJQUFJLEVBQUVELE9BQU8sS0FBSyxJQUFJLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDRSxHQUFHLENBQUMsSUFBSSxFQUFFRixPQUFPLElBQUksU0FBUyxJQUFJQSxPQUFPLEtBQUtBLE9BQU8sS0FBSyxJQUFJLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDRyxPQUFPLENBQUMsQ0FBQztBQUM1UCxDQUFDO0FBQ0RmLG9CQUFvQixHQUFHRyxZQUFZO0FBQ25DLElBQUlELGNBQWMsR0FBRyxTQUFBQSxDQUFBLEVBQVk7RUFBRSxPQUFRLE9BQU9jLE1BQU0sS0FBSyxXQUFXLEdBQUcsUUFBUSxHQUFHLFFBQVE7QUFBRyxDQUFDO0FBQ2xHaEIsc0JBQXNCLEdBQUdFLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nvb2tpZXMtbmV4dC9saWIvY29tbW9uL3V0aWxzLmpzP2NiYmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJlbmRlclBoYXNlID0gZXhwb3J0cy5pc0NsaWVudFNpZGUgPSBleHBvcnRzLmRlY29kZSA9IGV4cG9ydHMuc3RyaW5naWZ5ID0gdm9pZCAwO1xudmFyIHN0cmluZ2lmeSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0cmluZ2lmaWVkVmFsdWUgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBzdHJpbmdpZmllZFZhbHVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxufTtcbmV4cG9ydHMuc3RyaW5naWZ5ID0gc3RyaW5naWZ5O1xudmFyIGRlY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICBpZiAoIXN0cilcbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyglWzAtOUEtWl17Mn0pKy9nLCBkZWNvZGVVUklDb21wb25lbnQpO1xufTtcbmV4cG9ydHMuZGVjb2RlID0gZGVjb2RlO1xudmFyIGlzQ2xpZW50U2lkZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgcmV0dXJuICEob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnJlcSkgJiYgIShvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmVzKSAmJiAhKG9wdGlvbnMgJiYgJ2Nvb2tpZXMnIGluIG9wdGlvbnMgJiYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5jb29raWVzKSk7XG59O1xuZXhwb3J0cy5pc0NsaWVudFNpZGUgPSBpc0NsaWVudFNpZGU7XG52YXIgZ2V0UmVuZGVyUGhhc2UgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyAnc2VydmVyJyA6ICdjbGllbnQnKTsgfTtcbmV4cG9ydHMuZ2V0UmVuZGVyUGhhc2UgPSBnZXRSZW5kZXJQaGFzZTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldFJlbmRlclBoYXNlIiwiaXNDbGllbnRTaWRlIiwiZGVjb2RlIiwic3RyaW5naWZ5Iiwic3RyaW5naWZpZWRWYWx1ZSIsIkpTT04iLCJlIiwic3RyIiwicmVwbGFjZSIsImRlY29kZVVSSUNvbXBvbmVudCIsIm9wdGlvbnMiLCJyZXEiLCJyZXMiLCJjb29raWVzIiwid2luZG93Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cookies-next/lib/common/utils.js\n"));

/***/ }),

/***/ "./node_modules/cookies-next/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/cookies-next/lib/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useCookiesNext = exports.useDeleteCookie = exports.useGetCookie = exports.useSetCookie = exports.useHasCookie = exports.useGetCookies = exports.hasCookie = exports.deleteCookie = exports.setCookie = exports.getCookie = exports.getCookies = void 0;\nvar clientCookies = __webpack_require__(/*! ./client */ \"./node_modules/cookies-next/lib/client/index.js\");\nvar serverCookies = __webpack_require__(/*! ./server */ \"./node_modules/cookies-next/lib/server/index.js\");\n__exportStar(__webpack_require__(/*! ./common/types */ \"./node_modules/cookies-next/lib/common/types.js\"), exports);\nvar utils_1 = __webpack_require__(/*! ./common/utils */ \"./node_modules/cookies-next/lib/common/utils.js\");\nvar getCookies = function (options) {\n  return (0, utils_1.isClientSide)(options) ? clientCookies.getCookies(options) : serverCookies.getCookies(options);\n};\nexports.getCookies = getCookies;\nvar getCookie = function (key, options) {\n  return (0, utils_1.isClientSide)(options) ? clientCookies.getCookie(key, options) : serverCookies.getCookie(key, options);\n};\nexports.getCookie = getCookie;\nvar setCookie = function (key, data, options) {\n  return (0, utils_1.isClientSide)(options) ? clientCookies.setCookie(key, data, options) : serverCookies.setCookie(key, data, options);\n};\nexports.setCookie = setCookie;\nvar deleteCookie = function (key, options) {\n  return (0, utils_1.isClientSide)(options) ? clientCookies.deleteCookie(key, options) : serverCookies.deleteCookie(key, options);\n};\nexports.deleteCookie = deleteCookie;\nvar hasCookie = function (key, options) {\n  return (0, utils_1.isClientSide)(options) ? clientCookies.hasCookie(key, options) : serverCookies.hasCookie(key, options);\n};\nexports.hasCookie = hasCookie;\nvar client_1 = __webpack_require__(/*! ./client */ \"./node_modules/cookies-next/lib/client/index.js\");\nObject.defineProperty(exports, \"useGetCookies\", ({\n  enumerable: true,\n  get: function () {\n    return client_1.useGetCookies;\n  }\n}));\nObject.defineProperty(exports, \"useHasCookie\", ({\n  enumerable: true,\n  get: function () {\n    return client_1.useHasCookie;\n  }\n}));\nObject.defineProperty(exports, \"useSetCookie\", ({\n  enumerable: true,\n  get: function () {\n    return client_1.useSetCookie;\n  }\n}));\nObject.defineProperty(exports, \"useGetCookie\", ({\n  enumerable: true,\n  get: function () {\n    return client_1.useGetCookie;\n  }\n}));\nObject.defineProperty(exports, \"useDeleteCookie\", ({\n  enumerable: true,\n  get: function () {\n    return client_1.useDeleteCookie;\n  }\n}));\nObject.defineProperty(exports, \"useCookiesNext\", ({\n  enumerable: true,\n  get: function () {\n    return client_1.useCookiesNext;\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cookies-next/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/cookies-next/lib/server/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/cookies-next/lib/server/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.hasCookie = exports.deleteCookie = exports.setCookie = exports.getCookie = exports.getCookies = void 0;\nvar cookie_1 = __webpack_require__(/*! cookie */ \"./node_modules/cookies-next/node_modules/cookie/dist/index.js\");\nvar utils_1 = __webpack_require__(/*! ../common/utils */ \"./node_modules/cookies-next/lib/common/utils.js\");\nvar ensureServerSide = function (context) {\n  if ((0, utils_1.isClientSide)(context)) {\n    throw new Error('You are trying to access cookies on the client side. Please, use the client-side import with `cookies-next/client` instead.');\n  }\n};\nvar isCookiesFromNext = function (cookieStore) {\n  if (!cookieStore) return false;\n  return 'getAll' in cookieStore && 'set' in cookieStore && typeof cookieStore.getAll === 'function' && typeof cookieStore.set === 'function';\n};\nvar isContextFromNext = function (context) {\n  return !!(context === null || context === void 0 ? void 0 : context.req) && 'cookies' in context.req && isCookiesFromNext(context.req.cookies) || !!(context === null || context === void 0 ? void 0 : context.res) && 'cookies' in context.res && isCookiesFromNext(context.res.cookies) || !!context && 'cookies' in context && typeof context.cookies === 'function';\n};\nvar transformAppRouterCookies = function (cookies) {\n  var _cookies = {};\n  cookies.getAll().forEach(function (_a) {\n    var name = _a.name,\n      value = _a.value;\n    _cookies[name] = value;\n  });\n  return _cookies;\n};\nvar getCookies = function (options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, httpRequest;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          ensureServerSide(options);\n          if (!isContextFromNext(options)) return [3 /*break*/, 2];\n          if (options.req) {\n            return [2 /*return*/, transformAppRouterCookies(options.req.cookies)];\n          }\n          if (options.res) {\n            return [2 /*return*/, transformAppRouterCookies(options.res.cookies)];\n          }\n          if (!options.cookies) return [3 /*break*/, 2];\n          _a = transformAppRouterCookies;\n          return [4 /*yield*/, options.cookies()];\n        case 1:\n          return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n        case 2:\n          if (options === null || options === void 0 ? void 0 : options.req) {\n            httpRequest = options.req;\n          }\n          if (httpRequest === null || httpRequest === void 0 ? void 0 : httpRequest.cookies) {\n            return [2 /*return*/, httpRequest.cookies];\n          }\n          if (httpRequest === null || httpRequest === void 0 ? void 0 : httpRequest.headers.cookie) {\n            return [2 /*return*/, (0, cookie_1.parse)(httpRequest.headers.cookie)];\n          }\n          return [2 /*return*/, {}];\n      }\n    });\n  });\n};\nexports.getCookies = getCookies;\nvar getCookie = function (key, options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var cookies, value;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ensureServerSide(options);\n          return [4 /*yield*/, getCookies(options)];\n        case 1:\n          cookies = _a.sent();\n          value = cookies[key];\n          if (value === undefined) return [2 /*return*/, undefined];\n          return [2 /*return*/, (0, utils_1.decode)(value)];\n      }\n    });\n  });\n};\nexports.getCookie = getCookie;\nvar setCookie = function (key, data, options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var req_1, res_1, cookiesFn, restOptions, payload, cookieOptions, req, res, _a, _req, _res, rest, cookieStore, currentCookies, cookies, cookies;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          ensureServerSide(options);\n          if (!isContextFromNext(options)) return [3 /*break*/, 3];\n          req_1 = options.req, res_1 = options.res, cookiesFn = options.cookies, restOptions = __rest(options, [\"req\", \"res\", \"cookies\"]);\n          payload = __assign({\n            name: key,\n            value: (0, utils_1.stringify)(data)\n          }, restOptions);\n          if (req_1) {\n            req_1.cookies.set(payload);\n          }\n          if (res_1) {\n            res_1.cookies.set(payload);\n          }\n          if (!cookiesFn) return [3 /*break*/, 2];\n          return [4 /*yield*/, cookiesFn()];\n        case 1:\n          _b.sent().set(payload);\n          _b.label = 2;\n        case 2:\n          return [2 /*return*/];\n        case 3:\n          cookieOptions = {};\n          if (options) {\n            _a = options, _req = _a.req, _res = _a.res, rest = __rest(_a, [\"req\", \"res\"]);\n            req = _req;\n            res = _res;\n            cookieOptions = rest;\n          }\n          cookieStore = (0, cookie_1.serialize)(key, (0, utils_1.stringify)(data), __assign({\n            path: '/'\n          }, cookieOptions));\n          if (res && req) {\n            currentCookies = res.getHeader('Set-Cookie');\n            if (!Array.isArray(currentCookies)) {\n              currentCookies = !currentCookies ? [] : [String(currentCookies)];\n            }\n            res.setHeader('Set-Cookie', currentCookies.concat(cookieStore));\n            if (req && req.cookies) {\n              cookies = req.cookies;\n              data === '' ? delete cookies[key] : cookies[key] = (0, utils_1.stringify)(data);\n            }\n            if (req && req.headers && req.headers.cookie) {\n              cookies = (0, cookie_1.parse)(req.headers.cookie);\n              data === '' ? delete cookies[key] : cookies[key] = (0, utils_1.stringify)(data);\n              req.headers.cookie = Object.entries(cookies).reduce(function (accum, item) {\n                return accum.concat(\"\".concat(item[0], \"=\").concat(item[1], \";\"));\n              }, '');\n            }\n          }\n          return [2 /*return*/];\n      }\n    });\n  });\n};\nexports.setCookie = setCookie;\nvar deleteCookie = function (key, options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      ensureServerSide(options);\n      return [2 /*return*/, setCookie(key, '', __assign(__assign({}, options), {\n        maxAge: -1\n      }))];\n    });\n  });\n};\nexports.deleteCookie = deleteCookie;\nvar hasCookie = function (key, options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var cookie;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ensureServerSide(options);\n          if (!key) return [2 /*return*/, false];\n          return [4 /*yield*/, getCookies(options)];\n        case 1:\n          cookie = _a.sent();\n          return [2 /*return*/, cookie.hasOwnProperty(key)];\n      }\n    });\n  });\n};\nexports.hasCookie = hasCookie;\n__exportStar(__webpack_require__(/*! ../common/types */ \"./node_modules/cookies-next/lib/common/types.js\"), exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cookies-next/lib/server/index.js\n"));

/***/ }),

/***/ "./node_modules/cookies-next/node_modules/cookie/dist/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/cookies-next/node_modules/cookie/dist/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */(() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nfunction parse(str, options) {\n  const obj = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n  const dec = options?.decode || decode;\n  let index = 0;\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n    index = endIdx + 1;\n  } while (index < len);\n  return obj;\n}\nfunction startIndex(str, index, max) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\nfunction endIndex(str, index, min) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nfunction serialize(name, val, options) {\n  const enc = options?.encode || encodeURIComponent;\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n  const value = enc(val);\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n  let str = name + \"=\" + value;\n  if (!options) return str;\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n    str += \"; Domain=\" + options.domain;\n  }\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n    str += \"; Path=\" + options.path;\n  }\n  if (options.expires) {\n    if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n  if (options.priority) {\n    const priority = typeof options.priority === \"string\" ? options.priority.toLowerCase() : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n  if (options.sameSite) {\n    const sameSite = typeof options.sameSite === \"string\" ? options.sameSite.toLowerCase() : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n  return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str) {\n  if (str.indexOf(\"%\") === -1) return str;\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val) {\n  return __toString.call(val) === \"[object Date]\";\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cookies-next/node_modules/cookie/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiI7O0lBQ0VBLGVBQUEsRUFBOEJDLGdCQUFBO0FBRGhDQyxNQUFBLENBQU9DLE9BQU8sR0FDWixFQUFBSCxlQUFBLEdBQUFJLHFCQUFBLENBQU9DLE9BQU8sWUFBZCxTQUFBTCxlQUFBLENBQWdCTSxHQUFHLEtBQUksUUFBTyxDQUFBTCxnQkFBQSxHQUFBRyxxQkFBQSxDQUFPQyxPQUFPLFlBQWQsU0FBQUosZ0JBQUEsQ0FBZ0JLLEdBQUcsQ0FBRCxLQUFNLFdBQ2xERixxQkFBQSxDQUFPQyxPQUFPLEdBQ2RFLG1CQUFBLENBQVEscUZBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MudHM/MTZiYiJdLCJuYW1lcyI6WyJfZ2xvYmFsX3Byb2Nlc3MiLCJfZ2xvYmFsX3Byb2Nlc3MxIiwibW9kdWxlIiwiZXhwb3J0cyIsImdsb2JhbCIsInByb2Nlc3MiLCJlbnYiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function () {\n  var e = {\n    675: function (e, r) {\n      \"use strict\";\n\n      r.byteLength = byteLength;\n      r.toByteArray = toByteArray;\n      r.fromByteArray = fromByteArray;\n      var t = [];\n      var f = [];\n      var n = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n      var i = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n      for (var o = 0, u = i.length; o < u; ++o) {\n        t[o] = i[o];\n        f[i.charCodeAt(o)] = o;\n      }\n      f[\"-\".charCodeAt(0)] = 62;\n      f[\"_\".charCodeAt(0)] = 63;\n      function getLens(e) {\n        var r = e.length;\n        if (r % 4 > 0) {\n          throw new Error(\"Invalid string. Length must be a multiple of 4\");\n        }\n        var t = e.indexOf(\"=\");\n        if (t === -1) t = r;\n        var f = t === r ? 0 : 4 - t % 4;\n        return [t, f];\n      }\n      function byteLength(e) {\n        var r = getLens(e);\n        var t = r[0];\n        var f = r[1];\n        return (t + f) * 3 / 4 - f;\n      }\n      function _byteLength(e, r, t) {\n        return (r + t) * 3 / 4 - t;\n      }\n      function toByteArray(e) {\n        var r;\n        var t = getLens(e);\n        var i = t[0];\n        var o = t[1];\n        var u = new n(_byteLength(e, i, o));\n        var a = 0;\n        var s = o > 0 ? i - 4 : i;\n        var h;\n        for (h = 0; h < s; h += 4) {\n          r = f[e.charCodeAt(h)] << 18 | f[e.charCodeAt(h + 1)] << 12 | f[e.charCodeAt(h + 2)] << 6 | f[e.charCodeAt(h + 3)];\n          u[a++] = r >> 16 & 255;\n          u[a++] = r >> 8 & 255;\n          u[a++] = r & 255;\n        }\n        if (o === 2) {\n          r = f[e.charCodeAt(h)] << 2 | f[e.charCodeAt(h + 1)] >> 4;\n          u[a++] = r & 255;\n        }\n        if (o === 1) {\n          r = f[e.charCodeAt(h)] << 10 | f[e.charCodeAt(h + 1)] << 4 | f[e.charCodeAt(h + 2)] >> 2;\n          u[a++] = r >> 8 & 255;\n          u[a++] = r & 255;\n        }\n        return u;\n      }\n      function tripletToBase64(e) {\n        return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];\n      }\n      function encodeChunk(e, r, t) {\n        var f;\n        var n = [];\n        for (var i = r; i < t; i += 3) {\n          f = (e[i] << 16 & 16711680) + (e[i + 1] << 8 & 65280) + (e[i + 2] & 255);\n          n.push(tripletToBase64(f));\n        }\n        return n.join(\"\");\n      }\n      function fromByteArray(e) {\n        var r;\n        var f = e.length;\n        var n = f % 3;\n        var i = [];\n        var o = 16383;\n        for (var u = 0, a = f - n; u < a; u += o) {\n          i.push(encodeChunk(e, u, u + o > a ? a : u + o));\n        }\n        if (n === 1) {\n          r = e[f - 1];\n          i.push(t[r >> 2] + t[r << 4 & 63] + \"==\");\n        } else if (n === 2) {\n          r = (e[f - 2] << 8) + e[f - 1];\n          i.push(t[r >> 10] + t[r >> 4 & 63] + t[r << 2 & 63] + \"=\");\n        }\n        return i.join(\"\");\n      }\n    },\n    72: function (e, r, t) {\n      \"use strict\";\n\n      /*!\n       * The buffer module from node.js, for the browser.\n       *\n       * @author   Feross Aboukhadijeh <https://feross.org>\n       * @license  MIT\n       */\n      var f = t(675);\n      var n = t(783);\n      var i = typeof Symbol === \"function\" && typeof Symbol.for === \"function\" ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\n      r.Buffer = Buffer;\n      r.SlowBuffer = SlowBuffer;\n      r.INSPECT_MAX_BYTES = 50;\n      var o = 2147483647;\n      r.kMaxLength = o;\n      Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n      if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(\"This browser lacks typed array (Uint8Array) support which is required by \" + \"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\n      }\n      function typedArraySupport() {\n        try {\n          var e = new Uint8Array(1);\n          var r = {\n            foo: function () {\n              return 42;\n            }\n          };\n          Object.setPrototypeOf(r, Uint8Array.prototype);\n          Object.setPrototypeOf(e, r);\n          return e.foo() === 42;\n        } catch (e) {\n          return false;\n        }\n      }\n      Object.defineProperty(Buffer.prototype, \"parent\", {\n        enumerable: true,\n        get: function () {\n          if (!Buffer.isBuffer(this)) return undefined;\n          return this.buffer;\n        }\n      });\n      Object.defineProperty(Buffer.prototype, \"offset\", {\n        enumerable: true,\n        get: function () {\n          if (!Buffer.isBuffer(this)) return undefined;\n          return this.byteOffset;\n        }\n      });\n      function createBuffer(e) {\n        if (e > o) {\n          throw new RangeError('The value \"' + e + '\" is invalid for option \"size\"');\n        }\n        var r = new Uint8Array(e);\n        Object.setPrototypeOf(r, Buffer.prototype);\n        return r;\n      }\n      function Buffer(e, r, t) {\n        if (typeof e === \"number\") {\n          if (typeof r === \"string\") {\n            throw new TypeError('The \"string\" argument must be of type string. Received type number');\n          }\n          return allocUnsafe(e);\n        }\n        return from(e, r, t);\n      }\n      Buffer.poolSize = 8192;\n      function from(e, r, t) {\n        if (typeof e === \"string\") {\n          return fromString(e, r);\n        }\n        if (ArrayBuffer.isView(e)) {\n          return fromArrayLike(e);\n        }\n        if (e == null) {\n          throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof e);\n        }\n        if (isInstance(e, ArrayBuffer) || e && isInstance(e.buffer, ArrayBuffer)) {\n          return fromArrayBuffer(e, r, t);\n        }\n        if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(e, SharedArrayBuffer) || e && isInstance(e.buffer, SharedArrayBuffer))) {\n          return fromArrayBuffer(e, r, t);\n        }\n        if (typeof e === \"number\") {\n          throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n        }\n        var f = e.valueOf && e.valueOf();\n        if (f != null && f !== e) {\n          return Buffer.from(f, r, t);\n        }\n        var n = fromObject(e);\n        if (n) return n;\n        if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] === \"function\") {\n          return Buffer.from(e[Symbol.toPrimitive](\"string\"), r, t);\n        }\n        throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof e);\n      }\n      Buffer.from = function (e, r, t) {\n        return from(e, r, t);\n      };\n      Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n      Object.setPrototypeOf(Buffer, Uint8Array);\n      function assertSize(e) {\n        if (typeof e !== \"number\") {\n          throw new TypeError('\"size\" argument must be of type number');\n        } else if (e < 0) {\n          throw new RangeError('The value \"' + e + '\" is invalid for option \"size\"');\n        }\n      }\n      function alloc(e, r, t) {\n        assertSize(e);\n        if (e <= 0) {\n          return createBuffer(e);\n        }\n        if (r !== undefined) {\n          return typeof t === \"string\" ? createBuffer(e).fill(r, t) : createBuffer(e).fill(r);\n        }\n        return createBuffer(e);\n      }\n      Buffer.alloc = function (e, r, t) {\n        return alloc(e, r, t);\n      };\n      function allocUnsafe(e) {\n        assertSize(e);\n        return createBuffer(e < 0 ? 0 : checked(e) | 0);\n      }\n      Buffer.allocUnsafe = function (e) {\n        return allocUnsafe(e);\n      };\n      Buffer.allocUnsafeSlow = function (e) {\n        return allocUnsafe(e);\n      };\n      function fromString(e, r) {\n        if (typeof r !== \"string\" || r === \"\") {\n          r = \"utf8\";\n        }\n        if (!Buffer.isEncoding(r)) {\n          throw new TypeError(\"Unknown encoding: \" + r);\n        }\n        var t = byteLength(e, r) | 0;\n        var f = createBuffer(t);\n        var n = f.write(e, r);\n        if (n !== t) {\n          f = f.slice(0, n);\n        }\n        return f;\n      }\n      function fromArrayLike(e) {\n        var r = e.length < 0 ? 0 : checked(e.length) | 0;\n        var t = createBuffer(r);\n        for (var f = 0; f < r; f += 1) {\n          t[f] = e[f] & 255;\n        }\n        return t;\n      }\n      function fromArrayBuffer(e, r, t) {\n        if (r < 0 || e.byteLength < r) {\n          throw new RangeError('\"offset\" is outside of buffer bounds');\n        }\n        if (e.byteLength < r + (t || 0)) {\n          throw new RangeError('\"length\" is outside of buffer bounds');\n        }\n        var f;\n        if (r === undefined && t === undefined) {\n          f = new Uint8Array(e);\n        } else if (t === undefined) {\n          f = new Uint8Array(e, r);\n        } else {\n          f = new Uint8Array(e, r, t);\n        }\n        Object.setPrototypeOf(f, Buffer.prototype);\n        return f;\n      }\n      function fromObject(e) {\n        if (Buffer.isBuffer(e)) {\n          var r = checked(e.length) | 0;\n          var t = createBuffer(r);\n          if (t.length === 0) {\n            return t;\n          }\n          e.copy(t, 0, 0, r);\n          return t;\n        }\n        if (e.length !== undefined) {\n          if (typeof e.length !== \"number\" || numberIsNaN(e.length)) {\n            return createBuffer(0);\n          }\n          return fromArrayLike(e);\n        }\n        if (e.type === \"Buffer\" && Array.isArray(e.data)) {\n          return fromArrayLike(e.data);\n        }\n      }\n      function checked(e) {\n        if (e >= o) {\n          throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + o.toString(16) + \" bytes\");\n        }\n        return e | 0;\n      }\n      function SlowBuffer(e) {\n        if (+e != e) {\n          e = 0;\n        }\n        return Buffer.alloc(+e);\n      }\n      Buffer.isBuffer = function isBuffer(e) {\n        return e != null && e._isBuffer === true && e !== Buffer.prototype;\n      };\n      Buffer.compare = function compare(e, r) {\n        if (isInstance(e, Uint8Array)) e = Buffer.from(e, e.offset, e.byteLength);\n        if (isInstance(r, Uint8Array)) r = Buffer.from(r, r.offset, r.byteLength);\n        if (!Buffer.isBuffer(e) || !Buffer.isBuffer(r)) {\n          throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n        }\n        if (e === r) return 0;\n        var t = e.length;\n        var f = r.length;\n        for (var n = 0, i = Math.min(t, f); n < i; ++n) {\n          if (e[n] !== r[n]) {\n            t = e[n];\n            f = r[n];\n            break;\n          }\n        }\n        if (t < f) return -1;\n        if (f < t) return 1;\n        return 0;\n      };\n      Buffer.isEncoding = function isEncoding(e) {\n        switch (String(e).toLowerCase()) {\n          case \"hex\":\n          case \"utf8\":\n          case \"utf-8\":\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n          case \"base64\":\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return true;\n          default:\n            return false;\n        }\n      };\n      Buffer.concat = function concat(e, r) {\n        if (!Array.isArray(e)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        if (e.length === 0) {\n          return Buffer.alloc(0);\n        }\n        var t;\n        if (r === undefined) {\n          r = 0;\n          for (t = 0; t < e.length; ++t) {\n            r += e[t].length;\n          }\n        }\n        var f = Buffer.allocUnsafe(r);\n        var n = 0;\n        for (t = 0; t < e.length; ++t) {\n          var i = e[t];\n          if (isInstance(i, Uint8Array)) {\n            i = Buffer.from(i);\n          }\n          if (!Buffer.isBuffer(i)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n          }\n          i.copy(f, n);\n          n += i.length;\n        }\n        return f;\n      };\n      function byteLength(e, r) {\n        if (Buffer.isBuffer(e)) {\n          return e.length;\n        }\n        if (ArrayBuffer.isView(e) || isInstance(e, ArrayBuffer)) {\n          return e.byteLength;\n        }\n        if (typeof e !== \"string\") {\n          throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + \"Received type \" + typeof e);\n        }\n        var t = e.length;\n        var f = arguments.length > 2 && arguments[2] === true;\n        if (!f && t === 0) return 0;\n        var n = false;\n        for (;;) {\n          switch (r) {\n            case \"ascii\":\n            case \"latin1\":\n            case \"binary\":\n              return t;\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8ToBytes(e).length;\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return t * 2;\n            case \"hex\":\n              return t >>> 1;\n            case \"base64\":\n              return base64ToBytes(e).length;\n            default:\n              if (n) {\n                return f ? -1 : utf8ToBytes(e).length;\n              }\n              r = (\"\" + r).toLowerCase();\n              n = true;\n          }\n        }\n      }\n      Buffer.byteLength = byteLength;\n      function slowToString(e, r, t) {\n        var f = false;\n        if (r === undefined || r < 0) {\n          r = 0;\n        }\n        if (r > this.length) {\n          return \"\";\n        }\n        if (t === undefined || t > this.length) {\n          t = this.length;\n        }\n        if (t <= 0) {\n          return \"\";\n        }\n        t >>>= 0;\n        r >>>= 0;\n        if (t <= r) {\n          return \"\";\n        }\n        if (!e) e = \"utf8\";\n        while (true) {\n          switch (e) {\n            case \"hex\":\n              return hexSlice(this, r, t);\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8Slice(this, r, t);\n            case \"ascii\":\n              return asciiSlice(this, r, t);\n            case \"latin1\":\n            case \"binary\":\n              return latin1Slice(this, r, t);\n            case \"base64\":\n              return base64Slice(this, r, t);\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return utf16leSlice(this, r, t);\n            default:\n              if (f) throw new TypeError(\"Unknown encoding: \" + e);\n              e = (e + \"\").toLowerCase();\n              f = true;\n          }\n        }\n      }\n      Buffer.prototype._isBuffer = true;\n      function swap(e, r, t) {\n        var f = e[r];\n        e[r] = e[t];\n        e[t] = f;\n      }\n      Buffer.prototype.swap16 = function swap16() {\n        var e = this.length;\n        if (e % 2 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n        }\n        for (var r = 0; r < e; r += 2) {\n          swap(this, r, r + 1);\n        }\n        return this;\n      };\n      Buffer.prototype.swap32 = function swap32() {\n        var e = this.length;\n        if (e % 4 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n        }\n        for (var r = 0; r < e; r += 4) {\n          swap(this, r, r + 3);\n          swap(this, r + 1, r + 2);\n        }\n        return this;\n      };\n      Buffer.prototype.swap64 = function swap64() {\n        var e = this.length;\n        if (e % 8 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n        }\n        for (var r = 0; r < e; r += 8) {\n          swap(this, r, r + 7);\n          swap(this, r + 1, r + 6);\n          swap(this, r + 2, r + 5);\n          swap(this, r + 3, r + 4);\n        }\n        return this;\n      };\n      Buffer.prototype.toString = function toString() {\n        var e = this.length;\n        if (e === 0) return \"\";\n        if (arguments.length === 0) return utf8Slice(this, 0, e);\n        return slowToString.apply(this, arguments);\n      };\n      Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n      Buffer.prototype.equals = function equals(e) {\n        if (!Buffer.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n        if (this === e) return true;\n        return Buffer.compare(this, e) === 0;\n      };\n      Buffer.prototype.inspect = function inspect() {\n        var e = \"\";\n        var t = r.INSPECT_MAX_BYTES;\n        e = this.toString(\"hex\", 0, t).replace(/(.{2})/g, \"$1 \").trim();\n        if (this.length > t) e += \" ... \";\n        return \"<Buffer \" + e + \">\";\n      };\n      if (i) {\n        Buffer.prototype[i] = Buffer.prototype.inspect;\n      }\n      Buffer.prototype.compare = function compare(e, r, t, f, n) {\n        if (isInstance(e, Uint8Array)) {\n          e = Buffer.from(e, e.offset, e.byteLength);\n        }\n        if (!Buffer.isBuffer(e)) {\n          throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + \"Received type \" + typeof e);\n        }\n        if (r === undefined) {\n          r = 0;\n        }\n        if (t === undefined) {\n          t = e ? e.length : 0;\n        }\n        if (f === undefined) {\n          f = 0;\n        }\n        if (n === undefined) {\n          n = this.length;\n        }\n        if (r < 0 || t > e.length || f < 0 || n > this.length) {\n          throw new RangeError(\"out of range index\");\n        }\n        if (f >= n && r >= t) {\n          return 0;\n        }\n        if (f >= n) {\n          return -1;\n        }\n        if (r >= t) {\n          return 1;\n        }\n        r >>>= 0;\n        t >>>= 0;\n        f >>>= 0;\n        n >>>= 0;\n        if (this === e) return 0;\n        var i = n - f;\n        var o = t - r;\n        var u = Math.min(i, o);\n        var a = this.slice(f, n);\n        var s = e.slice(r, t);\n        for (var h = 0; h < u; ++h) {\n          if (a[h] !== s[h]) {\n            i = a[h];\n            o = s[h];\n            break;\n          }\n        }\n        if (i < o) return -1;\n        if (o < i) return 1;\n        return 0;\n      };\n      function bidirectionalIndexOf(e, r, t, f, n) {\n        if (e.length === 0) return -1;\n        if (typeof t === \"string\") {\n          f = t;\n          t = 0;\n        } else if (t > 2147483647) {\n          t = 2147483647;\n        } else if (t < -2147483648) {\n          t = -2147483648;\n        }\n        t = +t;\n        if (numberIsNaN(t)) {\n          t = n ? 0 : e.length - 1;\n        }\n        if (t < 0) t = e.length + t;\n        if (t >= e.length) {\n          if (n) return -1;else t = e.length - 1;\n        } else if (t < 0) {\n          if (n) t = 0;else return -1;\n        }\n        if (typeof r === \"string\") {\n          r = Buffer.from(r, f);\n        }\n        if (Buffer.isBuffer(r)) {\n          if (r.length === 0) {\n            return -1;\n          }\n          return arrayIndexOf(e, r, t, f, n);\n        } else if (typeof r === \"number\") {\n          r = r & 255;\n          if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (n) {\n              return Uint8Array.prototype.indexOf.call(e, r, t);\n            } else {\n              return Uint8Array.prototype.lastIndexOf.call(e, r, t);\n            }\n          }\n          return arrayIndexOf(e, [r], t, f, n);\n        }\n        throw new TypeError(\"val must be string, number or Buffer\");\n      }\n      function arrayIndexOf(e, r, t, f, n) {\n        var i = 1;\n        var o = e.length;\n        var u = r.length;\n        if (f !== undefined) {\n          f = String(f).toLowerCase();\n          if (f === \"ucs2\" || f === \"ucs-2\" || f === \"utf16le\" || f === \"utf-16le\") {\n            if (e.length < 2 || r.length < 2) {\n              return -1;\n            }\n            i = 2;\n            o /= 2;\n            u /= 2;\n            t /= 2;\n          }\n        }\n        function read(e, r) {\n          if (i === 1) {\n            return e[r];\n          } else {\n            return e.readUInt16BE(r * i);\n          }\n        }\n        var a;\n        if (n) {\n          var s = -1;\n          for (a = t; a < o; a++) {\n            if (read(e, a) === read(r, s === -1 ? 0 : a - s)) {\n              if (s === -1) s = a;\n              if (a - s + 1 === u) return s * i;\n            } else {\n              if (s !== -1) a -= a - s;\n              s = -1;\n            }\n          }\n        } else {\n          if (t + u > o) t = o - u;\n          for (a = t; a >= 0; a--) {\n            var h = true;\n            for (var c = 0; c < u; c++) {\n              if (read(e, a + c) !== read(r, c)) {\n                h = false;\n                break;\n              }\n            }\n            if (h) return a;\n          }\n        }\n        return -1;\n      }\n      Buffer.prototype.includes = function includes(e, r, t) {\n        return this.indexOf(e, r, t) !== -1;\n      };\n      Buffer.prototype.indexOf = function indexOf(e, r, t) {\n        return bidirectionalIndexOf(this, e, r, t, true);\n      };\n      Buffer.prototype.lastIndexOf = function lastIndexOf(e, r, t) {\n        return bidirectionalIndexOf(this, e, r, t, false);\n      };\n      function hexWrite(e, r, t, f) {\n        t = Number(t) || 0;\n        var n = e.length - t;\n        if (!f) {\n          f = n;\n        } else {\n          f = Number(f);\n          if (f > n) {\n            f = n;\n          }\n        }\n        var i = r.length;\n        if (f > i / 2) {\n          f = i / 2;\n        }\n        for (var o = 0; o < f; ++o) {\n          var u = parseInt(r.substr(o * 2, 2), 16);\n          if (numberIsNaN(u)) return o;\n          e[t + o] = u;\n        }\n        return o;\n      }\n      function utf8Write(e, r, t, f) {\n        return blitBuffer(utf8ToBytes(r, e.length - t), e, t, f);\n      }\n      function asciiWrite(e, r, t, f) {\n        return blitBuffer(asciiToBytes(r), e, t, f);\n      }\n      function latin1Write(e, r, t, f) {\n        return asciiWrite(e, r, t, f);\n      }\n      function base64Write(e, r, t, f) {\n        return blitBuffer(base64ToBytes(r), e, t, f);\n      }\n      function ucs2Write(e, r, t, f) {\n        return blitBuffer(utf16leToBytes(r, e.length - t), e, t, f);\n      }\n      Buffer.prototype.write = function write(e, r, t, f) {\n        if (r === undefined) {\n          f = \"utf8\";\n          t = this.length;\n          r = 0;\n        } else if (t === undefined && typeof r === \"string\") {\n          f = r;\n          t = this.length;\n          r = 0;\n        } else if (isFinite(r)) {\n          r = r >>> 0;\n          if (isFinite(t)) {\n            t = t >>> 0;\n            if (f === undefined) f = \"utf8\";\n          } else {\n            f = t;\n            t = undefined;\n          }\n        } else {\n          throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n        }\n        var n = this.length - r;\n        if (t === undefined || t > n) t = n;\n        if (e.length > 0 && (t < 0 || r < 0) || r > this.length) {\n          throw new RangeError(\"Attempt to write outside buffer bounds\");\n        }\n        if (!f) f = \"utf8\";\n        var i = false;\n        for (;;) {\n          switch (f) {\n            case \"hex\":\n              return hexWrite(this, e, r, t);\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8Write(this, e, r, t);\n            case \"ascii\":\n              return asciiWrite(this, e, r, t);\n            case \"latin1\":\n            case \"binary\":\n              return latin1Write(this, e, r, t);\n            case \"base64\":\n              return base64Write(this, e, r, t);\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return ucs2Write(this, e, r, t);\n            default:\n              if (i) throw new TypeError(\"Unknown encoding: \" + f);\n              f = (\"\" + f).toLowerCase();\n              i = true;\n          }\n        }\n      };\n      Buffer.prototype.toJSON = function toJSON() {\n        return {\n          type: \"Buffer\",\n          data: Array.prototype.slice.call(this._arr || this, 0)\n        };\n      };\n      function base64Slice(e, r, t) {\n        if (r === 0 && t === e.length) {\n          return f.fromByteArray(e);\n        } else {\n          return f.fromByteArray(e.slice(r, t));\n        }\n      }\n      function utf8Slice(e, r, t) {\n        t = Math.min(e.length, t);\n        var f = [];\n        var n = r;\n        while (n < t) {\n          var i = e[n];\n          var o = null;\n          var u = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;\n          if (n + u <= t) {\n            var a, s, h, c;\n            switch (u) {\n              case 1:\n                if (i < 128) {\n                  o = i;\n                }\n                break;\n              case 2:\n                a = e[n + 1];\n                if ((a & 192) === 128) {\n                  c = (i & 31) << 6 | a & 63;\n                  if (c > 127) {\n                    o = c;\n                  }\n                }\n                break;\n              case 3:\n                a = e[n + 1];\n                s = e[n + 2];\n                if ((a & 192) === 128 && (s & 192) === 128) {\n                  c = (i & 15) << 12 | (a & 63) << 6 | s & 63;\n                  if (c > 2047 && (c < 55296 || c > 57343)) {\n                    o = c;\n                  }\n                }\n                break;\n              case 4:\n                a = e[n + 1];\n                s = e[n + 2];\n                h = e[n + 3];\n                if ((a & 192) === 128 && (s & 192) === 128 && (h & 192) === 128) {\n                  c = (i & 15) << 18 | (a & 63) << 12 | (s & 63) << 6 | h & 63;\n                  if (c > 65535 && c < 1114112) {\n                    o = c;\n                  }\n                }\n            }\n          }\n          if (o === null) {\n            o = 65533;\n            u = 1;\n          } else if (o > 65535) {\n            o -= 65536;\n            f.push(o >>> 10 & 1023 | 55296);\n            o = 56320 | o & 1023;\n          }\n          f.push(o);\n          n += u;\n        }\n        return decodeCodePointsArray(f);\n      }\n      var u = 4096;\n      function decodeCodePointsArray(e) {\n        var r = e.length;\n        if (r <= u) {\n          return String.fromCharCode.apply(String, e);\n        }\n        var t = \"\";\n        var f = 0;\n        while (f < r) {\n          t += String.fromCharCode.apply(String, e.slice(f, f += u));\n        }\n        return t;\n      }\n      function asciiSlice(e, r, t) {\n        var f = \"\";\n        t = Math.min(e.length, t);\n        for (var n = r; n < t; ++n) {\n          f += String.fromCharCode(e[n] & 127);\n        }\n        return f;\n      }\n      function latin1Slice(e, r, t) {\n        var f = \"\";\n        t = Math.min(e.length, t);\n        for (var n = r; n < t; ++n) {\n          f += String.fromCharCode(e[n]);\n        }\n        return f;\n      }\n      function hexSlice(e, r, t) {\n        var f = e.length;\n        if (!r || r < 0) r = 0;\n        if (!t || t < 0 || t > f) t = f;\n        var n = \"\";\n        for (var i = r; i < t; ++i) {\n          n += s[e[i]];\n        }\n        return n;\n      }\n      function utf16leSlice(e, r, t) {\n        var f = e.slice(r, t);\n        var n = \"\";\n        for (var i = 0; i < f.length; i += 2) {\n          n += String.fromCharCode(f[i] + f[i + 1] * 256);\n        }\n        return n;\n      }\n      Buffer.prototype.slice = function slice(e, r) {\n        var t = this.length;\n        e = ~~e;\n        r = r === undefined ? t : ~~r;\n        if (e < 0) {\n          e += t;\n          if (e < 0) e = 0;\n        } else if (e > t) {\n          e = t;\n        }\n        if (r < 0) {\n          r += t;\n          if (r < 0) r = 0;\n        } else if (r > t) {\n          r = t;\n        }\n        if (r < e) r = e;\n        var f = this.subarray(e, r);\n        Object.setPrototypeOf(f, Buffer.prototype);\n        return f;\n      };\n      function checkOffset(e, r, t) {\n        if (e % 1 !== 0 || e < 0) throw new RangeError(\"offset is not uint\");\n        if (e + r > t) throw new RangeError(\"Trying to access beyond buffer length\");\n      }\n      Buffer.prototype.readUIntLE = function readUIntLE(e, r, t) {\n        e = e >>> 0;\n        r = r >>> 0;\n        if (!t) checkOffset(e, r, this.length);\n        var f = this[e];\n        var n = 1;\n        var i = 0;\n        while (++i < r && (n *= 256)) {\n          f += this[e + i] * n;\n        }\n        return f;\n      };\n      Buffer.prototype.readUIntBE = function readUIntBE(e, r, t) {\n        e = e >>> 0;\n        r = r >>> 0;\n        if (!t) {\n          checkOffset(e, r, this.length);\n        }\n        var f = this[e + --r];\n        var n = 1;\n        while (r > 0 && (n *= 256)) {\n          f += this[e + --r] * n;\n        }\n        return f;\n      };\n      Buffer.prototype.readUInt8 = function readUInt8(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 1, this.length);\n        return this[e];\n      };\n      Buffer.prototype.readUInt16LE = function readUInt16LE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 2, this.length);\n        return this[e] | this[e + 1] << 8;\n      };\n      Buffer.prototype.readUInt16BE = function readUInt16BE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 2, this.length);\n        return this[e] << 8 | this[e + 1];\n      };\n      Buffer.prototype.readUInt32LE = function readUInt32LE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 4, this.length);\n        return (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;\n      };\n      Buffer.prototype.readUInt32BE = function readUInt32BE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 4, this.length);\n        return this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);\n      };\n      Buffer.prototype.readIntLE = function readIntLE(e, r, t) {\n        e = e >>> 0;\n        r = r >>> 0;\n        if (!t) checkOffset(e, r, this.length);\n        var f = this[e];\n        var n = 1;\n        var i = 0;\n        while (++i < r && (n *= 256)) {\n          f += this[e + i] * n;\n        }\n        n *= 128;\n        if (f >= n) f -= Math.pow(2, 8 * r);\n        return f;\n      };\n      Buffer.prototype.readIntBE = function readIntBE(e, r, t) {\n        e = e >>> 0;\n        r = r >>> 0;\n        if (!t) checkOffset(e, r, this.length);\n        var f = r;\n        var n = 1;\n        var i = this[e + --f];\n        while (f > 0 && (n *= 256)) {\n          i += this[e + --f] * n;\n        }\n        n *= 128;\n        if (i >= n) i -= Math.pow(2, 8 * r);\n        return i;\n      };\n      Buffer.prototype.readInt8 = function readInt8(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 1, this.length);\n        if (!(this[e] & 128)) return this[e];\n        return (255 - this[e] + 1) * -1;\n      };\n      Buffer.prototype.readInt16LE = function readInt16LE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 2, this.length);\n        var t = this[e] | this[e + 1] << 8;\n        return t & 32768 ? t | 4294901760 : t;\n      };\n      Buffer.prototype.readInt16BE = function readInt16BE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 2, this.length);\n        var t = this[e + 1] | this[e] << 8;\n        return t & 32768 ? t | 4294901760 : t;\n      };\n      Buffer.prototype.readInt32LE = function readInt32LE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 4, this.length);\n        return this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;\n      };\n      Buffer.prototype.readInt32BE = function readInt32BE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 4, this.length);\n        return this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];\n      };\n      Buffer.prototype.readFloatLE = function readFloatLE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 4, this.length);\n        return n.read(this, e, true, 23, 4);\n      };\n      Buffer.prototype.readFloatBE = function readFloatBE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 4, this.length);\n        return n.read(this, e, false, 23, 4);\n      };\n      Buffer.prototype.readDoubleLE = function readDoubleLE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 8, this.length);\n        return n.read(this, e, true, 52, 8);\n      };\n      Buffer.prototype.readDoubleBE = function readDoubleBE(e, r) {\n        e = e >>> 0;\n        if (!r) checkOffset(e, 8, this.length);\n        return n.read(this, e, false, 52, 8);\n      };\n      function checkInt(e, r, t, f, n, i) {\n        if (!Buffer.isBuffer(e)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n        if (r > n || r < i) throw new RangeError('\"value\" argument is out of bounds');\n        if (t + f > e.length) throw new RangeError(\"Index out of range\");\n      }\n      Buffer.prototype.writeUIntLE = function writeUIntLE(e, r, t, f) {\n        e = +e;\n        r = r >>> 0;\n        t = t >>> 0;\n        if (!f) {\n          var n = Math.pow(2, 8 * t) - 1;\n          checkInt(this, e, r, t, n, 0);\n        }\n        var i = 1;\n        var o = 0;\n        this[r] = e & 255;\n        while (++o < t && (i *= 256)) {\n          this[r + o] = e / i & 255;\n        }\n        return r + t;\n      };\n      Buffer.prototype.writeUIntBE = function writeUIntBE(e, r, t, f) {\n        e = +e;\n        r = r >>> 0;\n        t = t >>> 0;\n        if (!f) {\n          var n = Math.pow(2, 8 * t) - 1;\n          checkInt(this, e, r, t, n, 0);\n        }\n        var i = t - 1;\n        var o = 1;\n        this[r + i] = e & 255;\n        while (--i >= 0 && (o *= 256)) {\n          this[r + i] = e / o & 255;\n        }\n        return r + t;\n      };\n      Buffer.prototype.writeUInt8 = function writeUInt8(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 1, 255, 0);\n        this[r] = e & 255;\n        return r + 1;\n      };\n      Buffer.prototype.writeUInt16LE = function writeUInt16LE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 2, 65535, 0);\n        this[r] = e & 255;\n        this[r + 1] = e >>> 8;\n        return r + 2;\n      };\n      Buffer.prototype.writeUInt16BE = function writeUInt16BE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 2, 65535, 0);\n        this[r] = e >>> 8;\n        this[r + 1] = e & 255;\n        return r + 2;\n      };\n      Buffer.prototype.writeUInt32LE = function writeUInt32LE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 4, 4294967295, 0);\n        this[r + 3] = e >>> 24;\n        this[r + 2] = e >>> 16;\n        this[r + 1] = e >>> 8;\n        this[r] = e & 255;\n        return r + 4;\n      };\n      Buffer.prototype.writeUInt32BE = function writeUInt32BE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 4, 4294967295, 0);\n        this[r] = e >>> 24;\n        this[r + 1] = e >>> 16;\n        this[r + 2] = e >>> 8;\n        this[r + 3] = e & 255;\n        return r + 4;\n      };\n      Buffer.prototype.writeIntLE = function writeIntLE(e, r, t, f) {\n        e = +e;\n        r = r >>> 0;\n        if (!f) {\n          var n = Math.pow(2, 8 * t - 1);\n          checkInt(this, e, r, t, n - 1, -n);\n        }\n        var i = 0;\n        var o = 1;\n        var u = 0;\n        this[r] = e & 255;\n        while (++i < t && (o *= 256)) {\n          if (e < 0 && u === 0 && this[r + i - 1] !== 0) {\n            u = 1;\n          }\n          this[r + i] = (e / o >> 0) - u & 255;\n        }\n        return r + t;\n      };\n      Buffer.prototype.writeIntBE = function writeIntBE(e, r, t, f) {\n        e = +e;\n        r = r >>> 0;\n        if (!f) {\n          var n = Math.pow(2, 8 * t - 1);\n          checkInt(this, e, r, t, n - 1, -n);\n        }\n        var i = t - 1;\n        var o = 1;\n        var u = 0;\n        this[r + i] = e & 255;\n        while (--i >= 0 && (o *= 256)) {\n          if (e < 0 && u === 0 && this[r + i + 1] !== 0) {\n            u = 1;\n          }\n          this[r + i] = (e / o >> 0) - u & 255;\n        }\n        return r + t;\n      };\n      Buffer.prototype.writeInt8 = function writeInt8(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 1, 127, -128);\n        if (e < 0) e = 255 + e + 1;\n        this[r] = e & 255;\n        return r + 1;\n      };\n      Buffer.prototype.writeInt16LE = function writeInt16LE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 2, 32767, -32768);\n        this[r] = e & 255;\n        this[r + 1] = e >>> 8;\n        return r + 2;\n      };\n      Buffer.prototype.writeInt16BE = function writeInt16BE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 2, 32767, -32768);\n        this[r] = e >>> 8;\n        this[r + 1] = e & 255;\n        return r + 2;\n      };\n      Buffer.prototype.writeInt32LE = function writeInt32LE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);\n        this[r] = e & 255;\n        this[r + 1] = e >>> 8;\n        this[r + 2] = e >>> 16;\n        this[r + 3] = e >>> 24;\n        return r + 4;\n      };\n      Buffer.prototype.writeInt32BE = function writeInt32BE(e, r, t) {\n        e = +e;\n        r = r >>> 0;\n        if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);\n        if (e < 0) e = 4294967295 + e + 1;\n        this[r] = e >>> 24;\n        this[r + 1] = e >>> 16;\n        this[r + 2] = e >>> 8;\n        this[r + 3] = e & 255;\n        return r + 4;\n      };\n      function checkIEEE754(e, r, t, f, n, i) {\n        if (t + f > e.length) throw new RangeError(\"Index out of range\");\n        if (t < 0) throw new RangeError(\"Index out of range\");\n      }\n      function writeFloat(e, r, t, f, i) {\n        r = +r;\n        t = t >>> 0;\n        if (!i) {\n          checkIEEE754(e, r, t, 4, 34028234663852886e22, -34028234663852886e22);\n        }\n        n.write(e, r, t, f, 23, 4);\n        return t + 4;\n      }\n      Buffer.prototype.writeFloatLE = function writeFloatLE(e, r, t) {\n        return writeFloat(this, e, r, true, t);\n      };\n      Buffer.prototype.writeFloatBE = function writeFloatBE(e, r, t) {\n        return writeFloat(this, e, r, false, t);\n      };\n      function writeDouble(e, r, t, f, i) {\n        r = +r;\n        t = t >>> 0;\n        if (!i) {\n          checkIEEE754(e, r, t, 8, 17976931348623157e292, -17976931348623157e292);\n        }\n        n.write(e, r, t, f, 52, 8);\n        return t + 8;\n      }\n      Buffer.prototype.writeDoubleLE = function writeDoubleLE(e, r, t) {\n        return writeDouble(this, e, r, true, t);\n      };\n      Buffer.prototype.writeDoubleBE = function writeDoubleBE(e, r, t) {\n        return writeDouble(this, e, r, false, t);\n      };\n      Buffer.prototype.copy = function copy(e, r, t, f) {\n        if (!Buffer.isBuffer(e)) throw new TypeError(\"argument should be a Buffer\");\n        if (!t) t = 0;\n        if (!f && f !== 0) f = this.length;\n        if (r >= e.length) r = e.length;\n        if (!r) r = 0;\n        if (f > 0 && f < t) f = t;\n        if (f === t) return 0;\n        if (e.length === 0 || this.length === 0) return 0;\n        if (r < 0) {\n          throw new RangeError(\"targetStart out of bounds\");\n        }\n        if (t < 0 || t >= this.length) throw new RangeError(\"Index out of range\");\n        if (f < 0) throw new RangeError(\"sourceEnd out of bounds\");\n        if (f > this.length) f = this.length;\n        if (e.length - r < f - t) {\n          f = e.length - r + t;\n        }\n        var n = f - t;\n        if (this === e && typeof Uint8Array.prototype.copyWithin === \"function\") {\n          this.copyWithin(r, t, f);\n        } else if (this === e && t < r && r < f) {\n          for (var i = n - 1; i >= 0; --i) {\n            e[i + r] = this[i + t];\n          }\n        } else {\n          Uint8Array.prototype.set.call(e, this.subarray(t, f), r);\n        }\n        return n;\n      };\n      Buffer.prototype.fill = function fill(e, r, t, f) {\n        if (typeof e === \"string\") {\n          if (typeof r === \"string\") {\n            f = r;\n            r = 0;\n            t = this.length;\n          } else if (typeof t === \"string\") {\n            f = t;\n            t = this.length;\n          }\n          if (f !== undefined && typeof f !== \"string\") {\n            throw new TypeError(\"encoding must be a string\");\n          }\n          if (typeof f === \"string\" && !Buffer.isEncoding(f)) {\n            throw new TypeError(\"Unknown encoding: \" + f);\n          }\n          if (e.length === 1) {\n            var n = e.charCodeAt(0);\n            if (f === \"utf8\" && n < 128 || f === \"latin1\") {\n              e = n;\n            }\n          }\n        } else if (typeof e === \"number\") {\n          e = e & 255;\n        } else if (typeof e === \"boolean\") {\n          e = Number(e);\n        }\n        if (r < 0 || this.length < r || this.length < t) {\n          throw new RangeError(\"Out of range index\");\n        }\n        if (t <= r) {\n          return this;\n        }\n        r = r >>> 0;\n        t = t === undefined ? this.length : t >>> 0;\n        if (!e) e = 0;\n        var i;\n        if (typeof e === \"number\") {\n          for (i = r; i < t; ++i) {\n            this[i] = e;\n          }\n        } else {\n          var o = Buffer.isBuffer(e) ? e : Buffer.from(e, f);\n          var u = o.length;\n          if (u === 0) {\n            throw new TypeError('The value \"' + e + '\" is invalid for argument \"value\"');\n          }\n          for (i = 0; i < t - r; ++i) {\n            this[i + r] = o[i % u];\n          }\n        }\n        return this;\n      };\n      var a = /[^+/0-9A-Za-z-_]/g;\n      function base64clean(e) {\n        e = e.split(\"=\")[0];\n        e = e.trim().replace(a, \"\");\n        if (e.length < 2) return \"\";\n        while (e.length % 4 !== 0) {\n          e = e + \"=\";\n        }\n        return e;\n      }\n      function utf8ToBytes(e, r) {\n        r = r || Infinity;\n        var t;\n        var f = e.length;\n        var n = null;\n        var i = [];\n        for (var o = 0; o < f; ++o) {\n          t = e.charCodeAt(o);\n          if (t > 55295 && t < 57344) {\n            if (!n) {\n              if (t > 56319) {\n                if ((r -= 3) > -1) i.push(239, 191, 189);\n                continue;\n              } else if (o + 1 === f) {\n                if ((r -= 3) > -1) i.push(239, 191, 189);\n                continue;\n              }\n              n = t;\n              continue;\n            }\n            if (t < 56320) {\n              if ((r -= 3) > -1) i.push(239, 191, 189);\n              n = t;\n              continue;\n            }\n            t = (n - 55296 << 10 | t - 56320) + 65536;\n          } else if (n) {\n            if ((r -= 3) > -1) i.push(239, 191, 189);\n          }\n          n = null;\n          if (t < 128) {\n            if ((r -= 1) < 0) break;\n            i.push(t);\n          } else if (t < 2048) {\n            if ((r -= 2) < 0) break;\n            i.push(t >> 6 | 192, t & 63 | 128);\n          } else if (t < 65536) {\n            if ((r -= 3) < 0) break;\n            i.push(t >> 12 | 224, t >> 6 & 63 | 128, t & 63 | 128);\n          } else if (t < 1114112) {\n            if ((r -= 4) < 0) break;\n            i.push(t >> 18 | 240, t >> 12 & 63 | 128, t >> 6 & 63 | 128, t & 63 | 128);\n          } else {\n            throw new Error(\"Invalid code point\");\n          }\n        }\n        return i;\n      }\n      function asciiToBytes(e) {\n        var r = [];\n        for (var t = 0; t < e.length; ++t) {\n          r.push(e.charCodeAt(t) & 255);\n        }\n        return r;\n      }\n      function utf16leToBytes(e, r) {\n        var t, f, n;\n        var i = [];\n        for (var o = 0; o < e.length; ++o) {\n          if ((r -= 2) < 0) break;\n          t = e.charCodeAt(o);\n          f = t >> 8;\n          n = t % 256;\n          i.push(n);\n          i.push(f);\n        }\n        return i;\n      }\n      function base64ToBytes(e) {\n        return f.toByteArray(base64clean(e));\n      }\n      function blitBuffer(e, r, t, f) {\n        for (var n = 0; n < f; ++n) {\n          if (n + t >= r.length || n >= e.length) break;\n          r[n + t] = e[n];\n        }\n        return n;\n      }\n      function isInstance(e, r) {\n        return e instanceof r || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === r.name;\n      }\n      function numberIsNaN(e) {\n        return e !== e;\n      }\n      var s = function () {\n        var e = \"0123456789abcdef\";\n        var r = new Array(256);\n        for (var t = 0; t < 16; ++t) {\n          var f = t * 16;\n          for (var n = 0; n < 16; ++n) {\n            r[f + n] = e[t] + e[n];\n          }\n        }\n        return r;\n      }();\n    },\n    783: function (e, r) {\n      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n      r.read = function (e, r, t, f, n) {\n        var i, o;\n        var u = n * 8 - f - 1;\n        var a = (1 << u) - 1;\n        var s = a >> 1;\n        var h = -7;\n        var c = t ? n - 1 : 0;\n        var l = t ? -1 : 1;\n        var p = e[r + c];\n        c += l;\n        i = p & (1 << -h) - 1;\n        p >>= -h;\n        h += u;\n        for (; h > 0; i = i * 256 + e[r + c], c += l, h -= 8) {}\n        o = i & (1 << -h) - 1;\n        i >>= -h;\n        h += f;\n        for (; h > 0; o = o * 256 + e[r + c], c += l, h -= 8) {}\n        if (i === 0) {\n          i = 1 - s;\n        } else if (i === a) {\n          return o ? NaN : (p ? -1 : 1) * Infinity;\n        } else {\n          o = o + Math.pow(2, f);\n          i = i - s;\n        }\n        return (p ? -1 : 1) * o * Math.pow(2, i - f);\n      };\n      r.write = function (e, r, t, f, n, i) {\n        var o, u, a;\n        var s = i * 8 - n - 1;\n        var h = (1 << s) - 1;\n        var c = h >> 1;\n        var l = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n        var p = f ? 0 : i - 1;\n        var y = f ? 1 : -1;\n        var g = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;\n        r = Math.abs(r);\n        if (isNaN(r) || r === Infinity) {\n          u = isNaN(r) ? 1 : 0;\n          o = h;\n        } else {\n          o = Math.floor(Math.log(r) / Math.LN2);\n          if (r * (a = Math.pow(2, -o)) < 1) {\n            o--;\n            a *= 2;\n          }\n          if (o + c >= 1) {\n            r += l / a;\n          } else {\n            r += l * Math.pow(2, 1 - c);\n          }\n          if (r * a >= 2) {\n            o++;\n            a /= 2;\n          }\n          if (o + c >= h) {\n            u = 0;\n            o = h;\n          } else if (o + c >= 1) {\n            u = (r * a - 1) * Math.pow(2, n);\n            o = o + c;\n          } else {\n            u = r * Math.pow(2, c - 1) * Math.pow(2, n);\n            o = 0;\n          }\n        }\n        for (; n >= 8; e[t + p] = u & 255, p += y, u /= 256, n -= 8) {}\n        o = o << n | u;\n        s += n;\n        for (; s > 0; e[t + p] = o & 255, p += y, o /= 256, s -= 8) {}\n        e[t + p - y] |= g * 128;\n      };\n    }\n  };\n  var r = {};\n  function __nccwpck_require__(t) {\n    var f = r[t];\n    if (f !== undefined) {\n      return f.exports;\n    }\n    var n = r[t] = {\n      exports: {}\n    };\n    var i = true;\n    try {\n      e[t](n, n.exports, __nccwpck_require__);\n      i = false;\n    } finally {\n      if (i) delete r[t];\n    }\n    return n.exports;\n  }\n  if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n  var t = __nccwpck_require__(72);\n  module.exports = t;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function () {\n  var e = {\n    229: function (e) {\n      var t = e.exports = {};\n      var r;\n      var n;\n      function defaultSetTimout() {\n        throw new Error(\"setTimeout has not been defined\");\n      }\n      function defaultClearTimeout() {\n        throw new Error(\"clearTimeout has not been defined\");\n      }\n      (function () {\n        try {\n          if (typeof setTimeout === \"function\") {\n            r = setTimeout;\n          } else {\n            r = defaultSetTimout;\n          }\n        } catch (e) {\n          r = defaultSetTimout;\n        }\n        try {\n          if (typeof clearTimeout === \"function\") {\n            n = clearTimeout;\n          } else {\n            n = defaultClearTimeout;\n          }\n        } catch (e) {\n          n = defaultClearTimeout;\n        }\n      })();\n      function runTimeout(e) {\n        if (r === setTimeout) {\n          return setTimeout(e, 0);\n        }\n        if ((r === defaultSetTimout || !r) && setTimeout) {\n          r = setTimeout;\n          return setTimeout(e, 0);\n        }\n        try {\n          return r(e, 0);\n        } catch (t) {\n          try {\n            return r.call(null, e, 0);\n          } catch (t) {\n            return r.call(this, e, 0);\n          }\n        }\n      }\n      function runClearTimeout(e) {\n        if (n === clearTimeout) {\n          return clearTimeout(e);\n        }\n        if ((n === defaultClearTimeout || !n) && clearTimeout) {\n          n = clearTimeout;\n          return clearTimeout(e);\n        }\n        try {\n          return n(e);\n        } catch (t) {\n          try {\n            return n.call(null, e);\n          } catch (t) {\n            return n.call(this, e);\n          }\n        }\n      }\n      var i = [];\n      var o = false;\n      var u;\n      var a = -1;\n      function cleanUpNextTick() {\n        if (!o || !u) {\n          return;\n        }\n        o = false;\n        if (u.length) {\n          i = u.concat(i);\n        } else {\n          a = -1;\n        }\n        if (i.length) {\n          drainQueue();\n        }\n      }\n      function drainQueue() {\n        if (o) {\n          return;\n        }\n        var e = runTimeout(cleanUpNextTick);\n        o = true;\n        var t = i.length;\n        while (t) {\n          u = i;\n          i = [];\n          while (++a < t) {\n            if (u) {\n              u[a].run();\n            }\n          }\n          a = -1;\n          t = i.length;\n        }\n        u = null;\n        o = false;\n        runClearTimeout(e);\n      }\n      t.nextTick = function (e) {\n        var t = new Array(arguments.length - 1);\n        if (arguments.length > 1) {\n          for (var r = 1; r < arguments.length; r++) {\n            t[r - 1] = arguments[r];\n          }\n        }\n        i.push(new Item(e, t));\n        if (i.length === 1 && !o) {\n          runTimeout(drainQueue);\n        }\n      };\n      function Item(e, t) {\n        this.fun = e;\n        this.array = t;\n      }\n      Item.prototype.run = function () {\n        this.fun.apply(null, this.array);\n      };\n      t.title = \"browser\";\n      t.browser = true;\n      t.env = {};\n      t.argv = [];\n      t.version = \"\";\n      t.versions = {};\n      function noop() {}\n      t.on = noop;\n      t.addListener = noop;\n      t.once = noop;\n      t.off = noop;\n      t.removeListener = noop;\n      t.removeAllListeners = noop;\n      t.emit = noop;\n      t.prependListener = noop;\n      t.prependOnceListener = noop;\n      t.listeners = function (e) {\n        return [];\n      };\n      t.binding = function (e) {\n        throw new Error(\"process.binding is not supported\");\n      };\n      t.cwd = function () {\n        return \"/\";\n      };\n      t.chdir = function (e) {\n        throw new Error(\"process.chdir is not supported\");\n      };\n      t.umask = function () {\n        return 0;\n      };\n    }\n  };\n  var t = {};\n  function __nccwpck_require__(r) {\n    var n = t[r];\n    if (n !== undefined) {\n      return n.exports;\n    }\n    var i = t[r] = {\n      exports: {}\n    };\n    var o = true;\n    try {\n      e[r](i, i.exports, __nccwpck_require__);\n      o = false;\n    } finally {\n      if (o) delete t[r];\n    }\n    return i.exports;\n  }\n  if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n  var r = __nccwpck_require__(229);\n  module.exports = r;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUFBLDZHQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanM/MWJiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvcm91dGVyJylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/NativeSpeechRecognition.js":
/*!******************************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/NativeSpeechRecognition.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.isNative = void 0;\nvar NativeSpeechRecognition = typeof window !== 'undefined' && (window.SpeechRecognition || window.webkitSpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition || window.oSpeechRecognition);\nvar isNative = function isNative(SpeechRecognition) {\n  return SpeechRecognition === NativeSpeechRecognition;\n};\nexports.isNative = isNative;\nvar _default = NativeSpeechRecognition;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9OYXRpdmVTcGVlY2hSZWNvZ25pdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWtCLEdBQUdBLGdCQUFnQixHQUFHLEtBQUssQ0FBQztBQUM5QyxJQUFJRyx1QkFBdUIsR0FBRyxPQUFPQyxNQUFNLEtBQUssV0FBVyxLQUFLQSxNQUFNLENBQUNDLGlCQUFpQixJQUFJRCxNQUFNLENBQUNFLHVCQUF1QixJQUFJRixNQUFNLENBQUNHLG9CQUFvQixJQUFJSCxNQUFNLENBQUNJLG1CQUFtQixJQUFJSixNQUFNLENBQUNLLGtCQUFrQixDQUFDO0FBRXJOLElBQUlQLFFBQVEsR0FBRyxTQUFTQSxRQUFRQSxDQUFDRyxpQkFBaUIsRUFBRTtFQUNsRCxPQUFPQSxpQkFBaUIsS0FBS0YsdUJBQXVCO0FBQ3RELENBQUM7QUFFREgsZ0JBQWdCLEdBQUdFLFFBQVE7QUFDM0IsSUFBSVEsUUFBUSxHQUFHUCx1QkFBdUI7QUFDdENILGtCQUFrQixHQUFHVSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zcGVlY2gtcmVjb2duaXRpb24vbGliL05hdGl2ZVNwZWVjaFJlY29nbml0aW9uLmpzP2IyYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGV4cG9ydHMuaXNOYXRpdmUgPSB2b2lkIDA7XG52YXIgTmF0aXZlU3BlZWNoUmVjb2duaXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAod2luZG93LlNwZWVjaFJlY29nbml0aW9uIHx8IHdpbmRvdy53ZWJraXRTcGVlY2hSZWNvZ25pdGlvbiB8fCB3aW5kb3cubW96U3BlZWNoUmVjb2duaXRpb24gfHwgd2luZG93Lm1zU3BlZWNoUmVjb2duaXRpb24gfHwgd2luZG93Lm9TcGVlY2hSZWNvZ25pdGlvbik7XG5cbnZhciBpc05hdGl2ZSA9IGZ1bmN0aW9uIGlzTmF0aXZlKFNwZWVjaFJlY29nbml0aW9uKSB7XG4gIHJldHVybiBTcGVlY2hSZWNvZ25pdGlvbiA9PT0gTmF0aXZlU3BlZWNoUmVjb2duaXRpb247XG59O1xuXG5leHBvcnRzLmlzTmF0aXZlID0gaXNOYXRpdmU7XG52YXIgX2RlZmF1bHQgPSBOYXRpdmVTcGVlY2hSZWNvZ25pdGlvbjtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNOYXRpdmUiLCJOYXRpdmVTcGVlY2hSZWNvZ25pdGlvbiIsIndpbmRvdyIsIlNwZWVjaFJlY29nbml0aW9uIiwid2Via2l0U3BlZWNoUmVjb2duaXRpb24iLCJtb3pTcGVlY2hSZWNvZ25pdGlvbiIsIm1zU3BlZWNoUmVjb2duaXRpb24iLCJvU3BlZWNoUmVjb2duaXRpb24iLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/NativeSpeechRecognition.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/RecognitionManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/RecognitionManager.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _isAndroid = _interopRequireDefault(__webpack_require__(/*! ./isAndroid */ \"./node_modules/react-speech-recognition/lib/isAndroid.js\"));\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/react-speech-recognition/lib/utils.js\");\nvar _NativeSpeechRecognition = __webpack_require__(/*! ./NativeSpeechRecognition */ \"./node_modules/react-speech-recognition/lib/NativeSpeechRecognition.js\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nvar RecognitionManager = /*#__PURE__*/function () {\n  function RecognitionManager(SpeechRecognition) {\n    _classCallCheck(this, RecognitionManager);\n    this.recognition = null;\n    this.pauseAfterDisconnect = false;\n    this.interimTranscript = '';\n    this.finalTranscript = '';\n    this.listening = false;\n    this.isMicrophoneAvailable = true;\n    this.subscribers = {};\n    this.onStopListening = function () {};\n    this.previousResultWasFinalOnly = false;\n    this.resetTranscript = this.resetTranscript.bind(this);\n    this.startListening = this.startListening.bind(this);\n    this.stopListening = this.stopListening.bind(this);\n    this.abortListening = this.abortListening.bind(this);\n    this.setSpeechRecognition = this.setSpeechRecognition.bind(this);\n    this.disableRecognition = this.disableRecognition.bind(this);\n    this.setSpeechRecognition(SpeechRecognition);\n    if ((0, _isAndroid[\"default\"])()) {\n      this.updateFinalTranscript = (0, _utils.debounce)(this.updateFinalTranscript, 250, true);\n    }\n  }\n  _createClass(RecognitionManager, [{\n    key: \"setSpeechRecognition\",\n    value: function setSpeechRecognition(SpeechRecognition) {\n      var browserSupportsRecogniser = !!SpeechRecognition && ((0, _NativeSpeechRecognition.isNative)(SpeechRecognition) || (0, _utils.browserSupportsPolyfills)());\n      if (browserSupportsRecogniser) {\n        this.disableRecognition();\n        this.recognition = new SpeechRecognition();\n        this.recognition.continuous = false;\n        this.recognition.interimResults = true;\n        this.recognition.onresult = this.updateTranscript.bind(this);\n        this.recognition.onend = this.onRecognitionDisconnect.bind(this);\n        this.recognition.onerror = this.onError.bind(this);\n      }\n      this.emitBrowserSupportsSpeechRecognitionChange(browserSupportsRecogniser);\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(id, callbacks) {\n      this.subscribers[id] = callbacks;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(id) {\n      delete this.subscribers[id];\n    }\n  }, {\n    key: \"emitListeningChange\",\n    value: function emitListeningChange(listening) {\n      var _this = this;\n      this.listening = listening;\n      Object.keys(this.subscribers).forEach(function (id) {\n        var onListeningChange = _this.subscribers[id].onListeningChange;\n        onListeningChange(listening);\n      });\n    }\n  }, {\n    key: \"emitMicrophoneAvailabilityChange\",\n    value: function emitMicrophoneAvailabilityChange(isMicrophoneAvailable) {\n      var _this2 = this;\n      this.isMicrophoneAvailable = isMicrophoneAvailable;\n      Object.keys(this.subscribers).forEach(function (id) {\n        var onMicrophoneAvailabilityChange = _this2.subscribers[id].onMicrophoneAvailabilityChange;\n        onMicrophoneAvailabilityChange(isMicrophoneAvailable);\n      });\n    }\n  }, {\n    key: \"emitTranscriptChange\",\n    value: function emitTranscriptChange(interimTranscript, finalTranscript) {\n      var _this3 = this;\n      Object.keys(this.subscribers).forEach(function (id) {\n        var onTranscriptChange = _this3.subscribers[id].onTranscriptChange;\n        onTranscriptChange(interimTranscript, finalTranscript);\n      });\n    }\n  }, {\n    key: \"emitClearTranscript\",\n    value: function emitClearTranscript() {\n      var _this4 = this;\n      Object.keys(this.subscribers).forEach(function (id) {\n        var onClearTranscript = _this4.subscribers[id].onClearTranscript;\n        onClearTranscript();\n      });\n    }\n  }, {\n    key: \"emitBrowserSupportsSpeechRecognitionChange\",\n    value: function emitBrowserSupportsSpeechRecognitionChange(browserSupportsSpeechRecognitionChange) {\n      var _this5 = this;\n      Object.keys(this.subscribers).forEach(function (id) {\n        var _this5$subscribers$id = _this5.subscribers[id],\n          onBrowserSupportsSpeechRecognitionChange = _this5$subscribers$id.onBrowserSupportsSpeechRecognitionChange,\n          onBrowserSupportsContinuousListeningChange = _this5$subscribers$id.onBrowserSupportsContinuousListeningChange;\n        onBrowserSupportsSpeechRecognitionChange(browserSupportsSpeechRecognitionChange);\n        onBrowserSupportsContinuousListeningChange(browserSupportsSpeechRecognitionChange);\n      });\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(disconnectType) {\n      if (this.recognition && this.listening) {\n        switch (disconnectType) {\n          case 'ABORT':\n            this.pauseAfterDisconnect = true;\n            this.abort();\n            break;\n          case 'RESET':\n            this.pauseAfterDisconnect = false;\n            this.abort();\n            break;\n          case 'STOP':\n          default:\n            this.pauseAfterDisconnect = true;\n            this.stop();\n        }\n      }\n    }\n  }, {\n    key: \"disableRecognition\",\n    value: function disableRecognition() {\n      if (this.recognition) {\n        this.recognition.onresult = function () {};\n        this.recognition.onend = function () {};\n        this.recognition.onerror = function () {};\n        if (this.listening) {\n          this.stopListening();\n        }\n      }\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(event) {\n      if (event && event.error && event.error === 'not-allowed') {\n        this.emitMicrophoneAvailabilityChange(false);\n        this.disableRecognition();\n      }\n    }\n  }, {\n    key: \"onRecognitionDisconnect\",\n    value: function onRecognitionDisconnect() {\n      this.onStopListening();\n      this.listening = false;\n      if (this.pauseAfterDisconnect) {\n        this.emitListeningChange(false);\n      } else if (this.recognition) {\n        if (this.recognition.continuous) {\n          this.startListening({\n            continuous: this.recognition.continuous\n          });\n        } else {\n          this.emitListeningChange(false);\n        }\n      }\n      this.pauseAfterDisconnect = false;\n    }\n  }, {\n    key: \"updateTranscript\",\n    value: function updateTranscript(_ref) {\n      var results = _ref.results,\n        resultIndex = _ref.resultIndex;\n      var currentIndex = resultIndex === undefined ? results.length - 1 : resultIndex;\n      this.interimTranscript = '';\n      this.finalTranscript = '';\n      for (var i = currentIndex; i < results.length; ++i) {\n        if (results[i].isFinal && (!(0, _isAndroid[\"default\"])() || results[i][0].confidence > 0)) {\n          this.updateFinalTranscript(results[i][0].transcript);\n        } else {\n          this.interimTranscript = (0, _utils.concatTranscripts)(this.interimTranscript, results[i][0].transcript);\n        }\n      }\n      var isDuplicateResult = false;\n      if (this.interimTranscript === '' && this.finalTranscript !== '') {\n        if (this.previousResultWasFinalOnly) {\n          isDuplicateResult = true;\n        }\n        this.previousResultWasFinalOnly = true;\n      } else {\n        this.previousResultWasFinalOnly = false;\n      }\n      if (!isDuplicateResult) {\n        this.emitTranscriptChange(this.interimTranscript, this.finalTranscript);\n      }\n    }\n  }, {\n    key: \"updateFinalTranscript\",\n    value: function updateFinalTranscript(newFinalTranscript) {\n      this.finalTranscript = (0, _utils.concatTranscripts)(this.finalTranscript, newFinalTranscript);\n    }\n  }, {\n    key: \"resetTranscript\",\n    value: function resetTranscript() {\n      this.disconnect('RESET');\n    }\n  }, {\n    key: \"startListening\",\n    value: function () {\n      var _startListening = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _ref2,\n          _ref2$continuous,\n          continuous,\n          language,\n          isContinuousChanged,\n          isLanguageChanged,\n          _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$continuous = _ref2.continuous, continuous = _ref2$continuous === void 0 ? false : _ref2$continuous, language = _ref2.language;\n                if (this.recognition) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                isContinuousChanged = continuous !== this.recognition.continuous;\n                isLanguageChanged = language && language !== this.recognition.lang;\n                if (!(isContinuousChanged || isLanguageChanged)) {\n                  _context.next = 11;\n                  break;\n                }\n                if (!this.listening) {\n                  _context.next = 9;\n                  break;\n                }\n                _context.next = 9;\n                return this.stopListening();\n              case 9:\n                this.recognition.continuous = isContinuousChanged ? continuous : this.recognition.continuous;\n                this.recognition.lang = isLanguageChanged ? language : this.recognition.lang;\n              case 11:\n                if (this.listening) {\n                  _context.next = 22;\n                  break;\n                }\n                if (!this.recognition.continuous) {\n                  this.resetTranscript();\n                  this.emitClearTranscript();\n                }\n                _context.prev = 13;\n                _context.next = 16;\n                return this.start();\n              case 16:\n                this.emitListeningChange(true);\n                _context.next = 22;\n                break;\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](13);\n\n                // DOMExceptions indicate a redundant microphone start - safe to swallow\n                if (!(_context.t0 instanceof DOMException)) {\n                  this.emitMicrophoneAvailabilityChange(false);\n                }\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[13, 19]]);\n      }));\n      function startListening() {\n        return _startListening.apply(this, arguments);\n      }\n      return startListening;\n    }()\n  }, {\n    key: \"abortListening\",\n    value: function () {\n      var _abortListening = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this6 = this;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.disconnect('ABORT');\n                this.emitListeningChange(false);\n                _context2.next = 4;\n                return new Promise(function (resolve) {\n                  _this6.onStopListening = resolve;\n                });\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function abortListening() {\n        return _abortListening.apply(this, arguments);\n      }\n      return abortListening;\n    }()\n  }, {\n    key: \"stopListening\",\n    value: function () {\n      var _stopListening = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this7 = this;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.disconnect('STOP');\n                this.emitListeningChange(false);\n                _context3.next = 4;\n                return new Promise(function (resolve) {\n                  _this7.onStopListening = resolve;\n                });\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function stopListening() {\n        return _stopListening.apply(this, arguments);\n      }\n      return stopListening;\n    }()\n  }, {\n    key: \"getRecognition\",\n    value: function getRecognition() {\n      return this.recognition;\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.recognition && !this.listening)) {\n                  _context4.next = 4;\n                  break;\n                }\n                _context4.next = 3;\n                return this.recognition.start();\n              case 3:\n                this.listening = true;\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.recognition && this.listening) {\n        this.recognition.stop();\n        this.listening = false;\n      }\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      if (this.recognition && this.listening) {\n        this.recognition.abort();\n        this.listening = false;\n      }\n    }\n  }]);\n  return RecognitionManager;\n}();\nexports[\"default\"] = RecognitionManager;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9SZWNvZ25pdGlvbk1hbmFnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFrQixHQUFHLEtBQUssQ0FBQztBQUUzQixJQUFJRSxVQUFVLEdBQUdDLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLDZFQUFhLENBQUMsQ0FBQztBQUUvRCxJQUFJQyxNQUFNLEdBQUdELG1CQUFPLENBQUMscUVBQVMsQ0FBQztBQUUvQixJQUFJRSx3QkFBd0IsR0FBR0YsbUJBQU8sQ0FBQyx5R0FBMkIsQ0FBQztBQUVuRSxTQUFTRCxzQkFBc0JBLENBQUNJLEdBQUcsRUFBRTtFQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFVLEdBQUdELEdBQUcsR0FBRztJQUFFLFNBQVMsRUFBRUE7RUFBSSxDQUFDO0FBQUU7QUFFaEcsU0FBU0Usa0JBQWtCQSxDQUFDQyxHQUFHLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUU7RUFBRSxJQUFJO0lBQUUsSUFBSUMsSUFBSSxHQUFHUCxHQUFHLENBQUNLLEdBQUcsQ0FBQyxDQUFDQyxHQUFHLENBQUM7SUFBRSxJQUFJZixLQUFLLEdBQUdnQixJQUFJLENBQUNoQixLQUFLO0VBQUUsQ0FBQyxDQUFDLE9BQU9pQixLQUFLLEVBQUU7SUFBRU4sTUFBTSxDQUFDTSxLQUFLLENBQUM7SUFBRTtFQUFRO0VBQUUsSUFBSUQsSUFBSSxDQUFDRSxJQUFJLEVBQUU7SUFBRVIsT0FBTyxDQUFDVixLQUFLLENBQUM7RUFBRSxDQUFDLE1BQU07SUFBRW1CLE9BQU8sQ0FBQ1QsT0FBTyxDQUFDVixLQUFLLENBQUMsQ0FBQ29CLElBQUksQ0FBQ1IsS0FBSyxFQUFFQyxNQUFNLENBQUM7RUFBRTtBQUFFO0FBRXhRLFNBQVNRLGlCQUFpQkEsQ0FBQ0MsRUFBRSxFQUFFO0VBQUUsT0FBTyxZQUFZO0lBQUUsSUFBSUMsSUFBSSxHQUFHLElBQUk7TUFBRUMsSUFBSSxHQUFHQyxTQUFTO0lBQUUsT0FBTyxJQUFJTixPQUFPLENBQUMsVUFBVVQsT0FBTyxFQUFFQyxNQUFNLEVBQUU7TUFBRSxJQUFJRixHQUFHLEdBQUdhLEVBQUUsQ0FBQ0ksS0FBSyxDQUFDSCxJQUFJLEVBQUVDLElBQUksQ0FBQztNQUFFLFNBQVNaLEtBQUtBLENBQUNaLEtBQUssRUFBRTtRQUFFUSxrQkFBa0IsQ0FBQ0MsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUUsTUFBTSxFQUFFYixLQUFLLENBQUM7TUFBRTtNQUFFLFNBQVNhLE1BQU1BLENBQUNjLEdBQUcsRUFBRTtRQUFFbkIsa0JBQWtCLENBQUNDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFLE9BQU8sRUFBRWMsR0FBRyxDQUFDO01BQUU7TUFBRWYsS0FBSyxDQUFDZ0IsU0FBUyxDQUFDO0lBQUUsQ0FBQyxDQUFDO0VBQUUsQ0FBQztBQUFFO0FBRXBZLFNBQVNDLGVBQWVBLENBQUNDLFFBQVEsRUFBRUMsV0FBVyxFQUFFO0VBQUUsSUFBSSxFQUFFRCxRQUFRLFlBQVlDLFdBQVcsQ0FBQyxFQUFFO0lBQUUsTUFBTSxJQUFJQyxTQUFTLENBQUMsbUNBQW1DLENBQUM7RUFBRTtBQUFFO0FBRXhKLFNBQVNDLGlCQUFpQkEsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUU7RUFBRSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0QsS0FBSyxDQUFDRSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO0lBQUUsSUFBSUUsVUFBVSxHQUFHSCxLQUFLLENBQUNDLENBQUMsQ0FBQztJQUFFRSxVQUFVLENBQUNDLFVBQVUsR0FBR0QsVUFBVSxDQUFDQyxVQUFVLElBQUksS0FBSztJQUFFRCxVQUFVLENBQUNFLFlBQVksR0FBRyxJQUFJO0lBQUUsSUFBSSxPQUFPLElBQUlGLFVBQVUsRUFBRUEsVUFBVSxDQUFDRyxRQUFRLEdBQUcsSUFBSTtJQUFFNUMsTUFBTSxDQUFDQyxjQUFjLENBQUNvQyxNQUFNLEVBQUVJLFVBQVUsQ0FBQ3hCLEdBQUcsRUFBRXdCLFVBQVUsQ0FBQztFQUFFO0FBQUU7QUFFNVQsU0FBU0ksWUFBWUEsQ0FBQ1gsV0FBVyxFQUFFWSxVQUFVLEVBQUVDLFdBQVcsRUFBRTtFQUFFLElBQUlELFVBQVUsRUFBRVYsaUJBQWlCLENBQUNGLFdBQVcsQ0FBQ2MsU0FBUyxFQUFFRixVQUFVLENBQUM7RUFBRSxJQUFJQyxXQUFXLEVBQUVYLGlCQUFpQixDQUFDRixXQUFXLEVBQUVhLFdBQVcsQ0FBQztFQUFFLE9BQU9iLFdBQVc7QUFBRTtBQUV0TixJQUFJZSxrQkFBa0IsR0FBRyxhQUFhLFlBQVk7RUFDaEQsU0FBU0Esa0JBQWtCQSxDQUFDQyxpQkFBaUIsRUFBRTtJQUM3Q2xCLGVBQWUsQ0FBQyxJQUFJLEVBQUVpQixrQkFBa0IsQ0FBQztJQUV6QyxJQUFJLENBQUNFLFdBQVcsR0FBRyxJQUFJO0lBQ3ZCLElBQUksQ0FBQ0Msb0JBQW9CLEdBQUcsS0FBSztJQUNqQyxJQUFJLENBQUNDLGlCQUFpQixHQUFHLEVBQUU7SUFDM0IsSUFBSSxDQUFDQyxlQUFlLEdBQUcsRUFBRTtJQUN6QixJQUFJLENBQUNDLFNBQVMsR0FBRyxLQUFLO0lBQ3RCLElBQUksQ0FBQ0MscUJBQXFCLEdBQUcsSUFBSTtJQUNqQyxJQUFJLENBQUNDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFFckIsSUFBSSxDQUFDQyxlQUFlLEdBQUcsWUFBWSxDQUFDLENBQUM7SUFFckMsSUFBSSxDQUFDQywwQkFBMEIsR0FBRyxLQUFLO0lBQ3ZDLElBQUksQ0FBQ0MsZUFBZSxHQUFHLElBQUksQ0FBQ0EsZUFBZSxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3RELElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUksQ0FBQ0EsY0FBYyxDQUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3BELElBQUksQ0FBQ0UsYUFBYSxHQUFHLElBQUksQ0FBQ0EsYUFBYSxDQUFDRixJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ2xELElBQUksQ0FBQ0csY0FBYyxHQUFHLElBQUksQ0FBQ0EsY0FBYyxDQUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3BELElBQUksQ0FBQ0ksb0JBQW9CLEdBQUcsSUFBSSxDQUFDQSxvQkFBb0IsQ0FBQ0osSUFBSSxDQUFDLElBQUksQ0FBQztJQUNoRSxJQUFJLENBQUNLLGtCQUFrQixHQUFHLElBQUksQ0FBQ0Esa0JBQWtCLENBQUNMLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDNUQsSUFBSSxDQUFDSSxvQkFBb0IsQ0FBQ2YsaUJBQWlCLENBQUM7SUFFNUMsSUFBSSxDQUFDLENBQUMsRUFBRTlDLFVBQVUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUU7TUFDaEMsSUFBSSxDQUFDK0QscUJBQXFCLEdBQUcsQ0FBQyxDQUFDLEVBQUU1RCxNQUFNLENBQUM2RCxRQUFRLEVBQUUsSUFBSSxDQUFDRCxxQkFBcUIsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDO0lBQzFGO0VBQ0Y7RUFFQXRCLFlBQVksQ0FBQ0ksa0JBQWtCLEVBQUUsQ0FBQztJQUNoQ2hDLEdBQUcsRUFBRSxzQkFBc0I7SUFDM0JkLEtBQUssRUFBRSxTQUFTOEQsb0JBQW9CQSxDQUFDZixpQkFBaUIsRUFBRTtNQUN0RCxJQUFJbUIseUJBQXlCLEdBQUcsQ0FBQyxDQUFDbkIsaUJBQWlCLEtBQUssQ0FBQyxDQUFDLEVBQUUxQyx3QkFBd0IsQ0FBQzhELFFBQVEsRUFBRXBCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUzQyxNQUFNLENBQUNnRSx3QkFBd0IsRUFBRSxDQUFDLENBQUM7TUFFNUosSUFBSUYseUJBQXlCLEVBQUU7UUFDN0IsSUFBSSxDQUFDSCxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQ2YsV0FBVyxHQUFHLElBQUlELGlCQUFpQixDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDQyxXQUFXLENBQUNxQixVQUFVLEdBQUcsS0FBSztRQUNuQyxJQUFJLENBQUNyQixXQUFXLENBQUNzQixjQUFjLEdBQUcsSUFBSTtRQUN0QyxJQUFJLENBQUN0QixXQUFXLENBQUN1QixRQUFRLEdBQUcsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQztRQUM1RCxJQUFJLENBQUNWLFdBQVcsQ0FBQ3lCLEtBQUssR0FBRyxJQUFJLENBQUNDLHVCQUF1QixDQUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNoRSxJQUFJLENBQUNWLFdBQVcsQ0FBQzJCLE9BQU8sR0FBRyxJQUFJLENBQUNDLE9BQU8sQ0FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUM7TUFDcEQ7TUFFQSxJQUFJLENBQUNtQiwwQ0FBMEMsQ0FBQ1gseUJBQXlCLENBQUM7SUFDNUU7RUFDRixDQUFDLEVBQUU7SUFDRHBELEdBQUcsRUFBRSxXQUFXO0lBQ2hCZCxLQUFLLEVBQUUsU0FBUzhFLFNBQVNBLENBQUNDLEVBQUUsRUFBRUMsU0FBUyxFQUFFO01BQ3ZDLElBQUksQ0FBQzFCLFdBQVcsQ0FBQ3lCLEVBQUUsQ0FBQyxHQUFHQyxTQUFTO0lBQ2xDO0VBQ0YsQ0FBQyxFQUFFO0lBQ0RsRSxHQUFHLEVBQUUsYUFBYTtJQUNsQmQsS0FBSyxFQUFFLFNBQVNpRixXQUFXQSxDQUFDRixFQUFFLEVBQUU7TUFDOUIsT0FBTyxJQUFJLENBQUN6QixXQUFXLENBQUN5QixFQUFFLENBQUM7SUFDN0I7RUFDRixDQUFDLEVBQUU7SUFDRGpFLEdBQUcsRUFBRSxxQkFBcUI7SUFDMUJkLEtBQUssRUFBRSxTQUFTa0YsbUJBQW1CQSxDQUFDOUIsU0FBUyxFQUFFO01BQzdDLElBQUkrQixLQUFLLEdBQUcsSUFBSTtNQUVoQixJQUFJLENBQUMvQixTQUFTLEdBQUdBLFNBQVM7TUFDMUJ2RCxNQUFNLENBQUN1RixJQUFJLENBQUMsSUFBSSxDQUFDOUIsV0FBVyxDQUFDLENBQUMrQixPQUFPLENBQUMsVUFBVU4sRUFBRSxFQUFFO1FBQ2xELElBQUlPLGlCQUFpQixHQUFHSCxLQUFLLENBQUM3QixXQUFXLENBQUN5QixFQUFFLENBQUMsQ0FBQ08saUJBQWlCO1FBQy9EQSxpQkFBaUIsQ0FBQ2xDLFNBQVMsQ0FBQztNQUM5QixDQUFDLENBQUM7SUFDSjtFQUNGLENBQUMsRUFBRTtJQUNEdEMsR0FBRyxFQUFFLGtDQUFrQztJQUN2Q2QsS0FBSyxFQUFFLFNBQVN1RixnQ0FBZ0NBLENBQUNsQyxxQkFBcUIsRUFBRTtNQUN0RSxJQUFJbUMsTUFBTSxHQUFHLElBQUk7TUFFakIsSUFBSSxDQUFDbkMscUJBQXFCLEdBQUdBLHFCQUFxQjtNQUNsRHhELE1BQU0sQ0FBQ3VGLElBQUksQ0FBQyxJQUFJLENBQUM5QixXQUFXLENBQUMsQ0FBQytCLE9BQU8sQ0FBQyxVQUFVTixFQUFFLEVBQUU7UUFDbEQsSUFBSVUsOEJBQThCLEdBQUdELE1BQU0sQ0FBQ2xDLFdBQVcsQ0FBQ3lCLEVBQUUsQ0FBQyxDQUFDVSw4QkFBOEI7UUFDMUZBLDhCQUE4QixDQUFDcEMscUJBQXFCLENBQUM7TUFDdkQsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDLEVBQUU7SUFDRHZDLEdBQUcsRUFBRSxzQkFBc0I7SUFDM0JkLEtBQUssRUFBRSxTQUFTMEYsb0JBQW9CQSxDQUFDeEMsaUJBQWlCLEVBQUVDLGVBQWUsRUFBRTtNQUN2RSxJQUFJd0MsTUFBTSxHQUFHLElBQUk7TUFFakI5RixNQUFNLENBQUN1RixJQUFJLENBQUMsSUFBSSxDQUFDOUIsV0FBVyxDQUFDLENBQUMrQixPQUFPLENBQUMsVUFBVU4sRUFBRSxFQUFFO1FBQ2xELElBQUlhLGtCQUFrQixHQUFHRCxNQUFNLENBQUNyQyxXQUFXLENBQUN5QixFQUFFLENBQUMsQ0FBQ2Esa0JBQWtCO1FBQ2xFQSxrQkFBa0IsQ0FBQzFDLGlCQUFpQixFQUFFQyxlQUFlLENBQUM7TUFDeEQsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDLEVBQUU7SUFDRHJDLEdBQUcsRUFBRSxxQkFBcUI7SUFDMUJkLEtBQUssRUFBRSxTQUFTNkYsbUJBQW1CQSxDQUFBLEVBQUc7TUFDcEMsSUFBSUMsTUFBTSxHQUFHLElBQUk7TUFFakJqRyxNQUFNLENBQUN1RixJQUFJLENBQUMsSUFBSSxDQUFDOUIsV0FBVyxDQUFDLENBQUMrQixPQUFPLENBQUMsVUFBVU4sRUFBRSxFQUFFO1FBQ2xELElBQUlnQixpQkFBaUIsR0FBR0QsTUFBTSxDQUFDeEMsV0FBVyxDQUFDeUIsRUFBRSxDQUFDLENBQUNnQixpQkFBaUI7UUFDaEVBLGlCQUFpQixDQUFDLENBQUM7TUFDckIsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDLEVBQUU7SUFDRGpGLEdBQUcsRUFBRSw0Q0FBNEM7SUFDakRkLEtBQUssRUFBRSxTQUFTNkUsMENBQTBDQSxDQUFDbUIsc0NBQXNDLEVBQUU7TUFDakcsSUFBSUMsTUFBTSxHQUFHLElBQUk7TUFFakJwRyxNQUFNLENBQUN1RixJQUFJLENBQUMsSUFBSSxDQUFDOUIsV0FBVyxDQUFDLENBQUMrQixPQUFPLENBQUMsVUFBVU4sRUFBRSxFQUFFO1FBQ2xELElBQUltQixxQkFBcUIsR0FBR0QsTUFBTSxDQUFDM0MsV0FBVyxDQUFDeUIsRUFBRSxDQUFDO1VBQzlDb0Isd0NBQXdDLEdBQUdELHFCQUFxQixDQUFDQyx3Q0FBd0M7VUFDekdDLDBDQUEwQyxHQUFHRixxQkFBcUIsQ0FBQ0UsMENBQTBDO1FBQ2pIRCx3Q0FBd0MsQ0FBQ0gsc0NBQXNDLENBQUM7UUFDaEZJLDBDQUEwQyxDQUFDSixzQ0FBc0MsQ0FBQztNQUNwRixDQUFDLENBQUM7SUFDSjtFQUNGLENBQUMsRUFBRTtJQUNEbEYsR0FBRyxFQUFFLFlBQVk7SUFDakJkLEtBQUssRUFBRSxTQUFTcUcsVUFBVUEsQ0FBQ0MsY0FBYyxFQUFFO01BQ3pDLElBQUksSUFBSSxDQUFDdEQsV0FBVyxJQUFJLElBQUksQ0FBQ0ksU0FBUyxFQUFFO1FBQ3RDLFFBQVFrRCxjQUFjO1VBQ3BCLEtBQUssT0FBTztZQUNWLElBQUksQ0FBQ3JELG9CQUFvQixHQUFHLElBQUk7WUFDaEMsSUFBSSxDQUFDc0QsS0FBSyxDQUFDLENBQUM7WUFDWjtVQUVGLEtBQUssT0FBTztZQUNWLElBQUksQ0FBQ3RELG9CQUFvQixHQUFHLEtBQUs7WUFDakMsSUFBSSxDQUFDc0QsS0FBSyxDQUFDLENBQUM7WUFDWjtVQUVGLEtBQUssTUFBTTtVQUNYO1lBQ0UsSUFBSSxDQUFDdEQsb0JBQW9CLEdBQUcsSUFBSTtZQUNoQyxJQUFJLENBQUN1RCxJQUFJLENBQUMsQ0FBQztRQUNmO01BQ0Y7SUFDRjtFQUNGLENBQUMsRUFBRTtJQUNEMUYsR0FBRyxFQUFFLG9CQUFvQjtJQUN6QmQsS0FBSyxFQUFFLFNBQVMrRCxrQkFBa0JBLENBQUEsRUFBRztNQUNuQyxJQUFJLElBQUksQ0FBQ2YsV0FBVyxFQUFFO1FBQ3BCLElBQUksQ0FBQ0EsV0FBVyxDQUFDdUIsUUFBUSxHQUFHLFlBQVksQ0FBQyxDQUFDO1FBRTFDLElBQUksQ0FBQ3ZCLFdBQVcsQ0FBQ3lCLEtBQUssR0FBRyxZQUFZLENBQUMsQ0FBQztRQUV2QyxJQUFJLENBQUN6QixXQUFXLENBQUMyQixPQUFPLEdBQUcsWUFBWSxDQUFDLENBQUM7UUFFekMsSUFBSSxJQUFJLENBQUN2QixTQUFTLEVBQUU7VUFDbEIsSUFBSSxDQUFDUSxhQUFhLENBQUMsQ0FBQztRQUN0QjtNQUNGO0lBQ0Y7RUFDRixDQUFDLEVBQUU7SUFDRDlDLEdBQUcsRUFBRSxTQUFTO0lBQ2RkLEtBQUssRUFBRSxTQUFTNEUsT0FBT0EsQ0FBQzZCLEtBQUssRUFBRTtNQUM3QixJQUFJQSxLQUFLLElBQUlBLEtBQUssQ0FBQ3hGLEtBQUssSUFBSXdGLEtBQUssQ0FBQ3hGLEtBQUssS0FBSyxhQUFhLEVBQUU7UUFDekQsSUFBSSxDQUFDc0UsZ0NBQWdDLENBQUMsS0FBSyxDQUFDO1FBQzVDLElBQUksQ0FBQ3hCLGtCQUFrQixDQUFDLENBQUM7TUFDM0I7SUFDRjtFQUNGLENBQUMsRUFBRTtJQUNEakQsR0FBRyxFQUFFLHlCQUF5QjtJQUM5QmQsS0FBSyxFQUFFLFNBQVMwRSx1QkFBdUJBLENBQUEsRUFBRztNQUN4QyxJQUFJLENBQUNuQixlQUFlLENBQUMsQ0FBQztNQUN0QixJQUFJLENBQUNILFNBQVMsR0FBRyxLQUFLO01BRXRCLElBQUksSUFBSSxDQUFDSCxvQkFBb0IsRUFBRTtRQUM3QixJQUFJLENBQUNpQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7TUFDakMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDbEMsV0FBVyxFQUFFO1FBQzNCLElBQUksSUFBSSxDQUFDQSxXQUFXLENBQUNxQixVQUFVLEVBQUU7VUFDL0IsSUFBSSxDQUFDVixjQUFjLENBQUM7WUFDbEJVLFVBQVUsRUFBRSxJQUFJLENBQUNyQixXQUFXLENBQUNxQjtVQUMvQixDQUFDLENBQUM7UUFDSixDQUFDLE1BQU07VUFDTCxJQUFJLENBQUNhLG1CQUFtQixDQUFDLEtBQUssQ0FBQztRQUNqQztNQUNGO01BRUEsSUFBSSxDQUFDakMsb0JBQW9CLEdBQUcsS0FBSztJQUNuQztFQUNGLENBQUMsRUFBRTtJQUNEbkMsR0FBRyxFQUFFLGtCQUFrQjtJQUN2QmQsS0FBSyxFQUFFLFNBQVN3RSxnQkFBZ0JBLENBQUNrQyxJQUFJLEVBQUU7TUFDckMsSUFBSUMsT0FBTyxHQUFHRCxJQUFJLENBQUNDLE9BQU87UUFDdEJDLFdBQVcsR0FBR0YsSUFBSSxDQUFDRSxXQUFXO01BQ2xDLElBQUlDLFlBQVksR0FBR0QsV0FBVyxLQUFLaEYsU0FBUyxHQUFHK0UsT0FBTyxDQUFDdEUsTUFBTSxHQUFHLENBQUMsR0FBR3VFLFdBQVc7TUFDL0UsSUFBSSxDQUFDMUQsaUJBQWlCLEdBQUcsRUFBRTtNQUMzQixJQUFJLENBQUNDLGVBQWUsR0FBRyxFQUFFO01BRXpCLEtBQUssSUFBSWYsQ0FBQyxHQUFHeUUsWUFBWSxFQUFFekUsQ0FBQyxHQUFHdUUsT0FBTyxDQUFDdEUsTUFBTSxFQUFFLEVBQUVELENBQUMsRUFBRTtRQUNsRCxJQUFJdUUsT0FBTyxDQUFDdkUsQ0FBQyxDQUFDLENBQUMwRSxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRTdHLFVBQVUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLElBQUkwRyxPQUFPLENBQUN2RSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzJFLFVBQVUsR0FBRyxDQUFDLENBQUMsRUFBRTtVQUN6RixJQUFJLENBQUMvQyxxQkFBcUIsQ0FBQzJDLE9BQU8sQ0FBQ3ZFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDNEUsVUFBVSxDQUFDO1FBQ3RELENBQUMsTUFBTTtVQUNMLElBQUksQ0FBQzlELGlCQUFpQixHQUFHLENBQUMsQ0FBQyxFQUFFOUMsTUFBTSxDQUFDNkcsaUJBQWlCLEVBQUUsSUFBSSxDQUFDL0QsaUJBQWlCLEVBQUV5RCxPQUFPLENBQUN2RSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzRFLFVBQVUsQ0FBQztRQUMxRztNQUNGO01BRUEsSUFBSUUsaUJBQWlCLEdBQUcsS0FBSztNQUU3QixJQUFJLElBQUksQ0FBQ2hFLGlCQUFpQixLQUFLLEVBQUUsSUFBSSxJQUFJLENBQUNDLGVBQWUsS0FBSyxFQUFFLEVBQUU7UUFDaEUsSUFBSSxJQUFJLENBQUNLLDBCQUEwQixFQUFFO1VBQ25DMEQsaUJBQWlCLEdBQUcsSUFBSTtRQUMxQjtRQUVBLElBQUksQ0FBQzFELDBCQUEwQixHQUFHLElBQUk7TUFDeEMsQ0FBQyxNQUFNO1FBQ0wsSUFBSSxDQUFDQSwwQkFBMEIsR0FBRyxLQUFLO01BQ3pDO01BRUEsSUFBSSxDQUFDMEQsaUJBQWlCLEVBQUU7UUFDdEIsSUFBSSxDQUFDeEIsb0JBQW9CLENBQUMsSUFBSSxDQUFDeEMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDQyxlQUFlLENBQUM7TUFDekU7SUFDRjtFQUNGLENBQUMsRUFBRTtJQUNEckMsR0FBRyxFQUFFLHVCQUF1QjtJQUM1QmQsS0FBSyxFQUFFLFNBQVNnRSxxQkFBcUJBLENBQUNtRCxrQkFBa0IsRUFBRTtNQUN4RCxJQUFJLENBQUNoRSxlQUFlLEdBQUcsQ0FBQyxDQUFDLEVBQUUvQyxNQUFNLENBQUM2RyxpQkFBaUIsRUFBRSxJQUFJLENBQUM5RCxlQUFlLEVBQUVnRSxrQkFBa0IsQ0FBQztJQUNoRztFQUNGLENBQUMsRUFBRTtJQUNEckcsR0FBRyxFQUFFLGlCQUFpQjtJQUN0QmQsS0FBSyxFQUFFLFNBQVN5RCxlQUFlQSxDQUFBLEVBQUc7TUFDaEMsSUFBSSxDQUFDNEMsVUFBVSxDQUFDLE9BQU8sQ0FBQztJQUMxQjtFQUNGLENBQUMsRUFBRTtJQUNEdkYsR0FBRyxFQUFFLGdCQUFnQjtJQUNyQmQsS0FBSyxFQUFFLFlBQVk7TUFDakIsSUFBSW9ILGVBQWUsR0FBRy9GLGlCQUFpQixDQUFFLGFBQWFnRyxrQkFBa0IsQ0FBQ0MsSUFBSSxDQUFDLFNBQVNDLE9BQU9BLENBQUEsRUFBRztRQUMvRixJQUFJQyxLQUFLO1VBQ0xDLGdCQUFnQjtVQUNoQnBELFVBQVU7VUFDVnFELFFBQVE7VUFDUkMsbUJBQW1CO1VBQ25CQyxpQkFBaUI7VUFDakJDLEtBQUssR0FBR3BHLFNBQVM7UUFFckIsT0FBTzRGLGtCQUFrQixDQUFDUyxJQUFJLENBQUMsU0FBU0MsUUFBUUEsQ0FBQ0MsUUFBUSxFQUFFO1VBQ3pELE9BQU8sQ0FBQyxFQUFFO1lBQ1IsUUFBUUEsUUFBUSxDQUFDQyxJQUFJLEdBQUdELFFBQVEsQ0FBQ0UsSUFBSTtjQUNuQyxLQUFLLENBQUM7Z0JBQ0pWLEtBQUssR0FBR0ssS0FBSyxDQUFDeEYsTUFBTSxHQUFHLENBQUMsSUFBSXdGLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBS2pHLFNBQVMsR0FBR2lHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRUosZ0JBQWdCLEdBQUdELEtBQUssQ0FBQ25ELFVBQVUsRUFBRUEsVUFBVSxHQUFHb0QsZ0JBQWdCLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxHQUFHQSxnQkFBZ0IsRUFBRUMsUUFBUSxHQUFHRixLQUFLLENBQUNFLFFBQVE7Z0JBRXZNLElBQUksSUFBSSxDQUFDMUUsV0FBVyxFQUFFO2tCQUNwQmdGLFFBQVEsQ0FBQ0UsSUFBSSxHQUFHLENBQUM7a0JBQ2pCO2dCQUNGO2dCQUVBLE9BQU9GLFFBQVEsQ0FBQ0csTUFBTSxDQUFDLFFBQVEsQ0FBQztjQUVsQyxLQUFLLENBQUM7Z0JBQ0pSLG1CQUFtQixHQUFHdEQsVUFBVSxLQUFLLElBQUksQ0FBQ3JCLFdBQVcsQ0FBQ3FCLFVBQVU7Z0JBQ2hFdUQsaUJBQWlCLEdBQUdGLFFBQVEsSUFBSUEsUUFBUSxLQUFLLElBQUksQ0FBQzFFLFdBQVcsQ0FBQ29GLElBQUk7Z0JBRWxFLElBQUksRUFBRVQsbUJBQW1CLElBQUlDLGlCQUFpQixDQUFDLEVBQUU7a0JBQy9DSSxRQUFRLENBQUNFLElBQUksR0FBRyxFQUFFO2tCQUNsQjtnQkFDRjtnQkFFQSxJQUFJLENBQUMsSUFBSSxDQUFDOUUsU0FBUyxFQUFFO2tCQUNuQjRFLFFBQVEsQ0FBQ0UsSUFBSSxHQUFHLENBQUM7a0JBQ2pCO2dCQUNGO2dCQUVBRixRQUFRLENBQUNFLElBQUksR0FBRyxDQUFDO2dCQUNqQixPQUFPLElBQUksQ0FBQ3RFLGFBQWEsQ0FBQyxDQUFDO2NBRTdCLEtBQUssQ0FBQztnQkFDSixJQUFJLENBQUNaLFdBQVcsQ0FBQ3FCLFVBQVUsR0FBR3NELG1CQUFtQixHQUFHdEQsVUFBVSxHQUFHLElBQUksQ0FBQ3JCLFdBQVcsQ0FBQ3FCLFVBQVU7Z0JBQzVGLElBQUksQ0FBQ3JCLFdBQVcsQ0FBQ29GLElBQUksR0FBR1IsaUJBQWlCLEdBQUdGLFFBQVEsR0FBRyxJQUFJLENBQUMxRSxXQUFXLENBQUNvRixJQUFJO2NBRTlFLEtBQUssRUFBRTtnQkFDTCxJQUFJLElBQUksQ0FBQ2hGLFNBQVMsRUFBRTtrQkFDbEI0RSxRQUFRLENBQUNFLElBQUksR0FBRyxFQUFFO2tCQUNsQjtnQkFDRjtnQkFFQSxJQUFJLENBQUMsSUFBSSxDQUFDbEYsV0FBVyxDQUFDcUIsVUFBVSxFQUFFO2tCQUNoQyxJQUFJLENBQUNaLGVBQWUsQ0FBQyxDQUFDO2tCQUN0QixJQUFJLENBQUNvQyxtQkFBbUIsQ0FBQyxDQUFDO2dCQUM1QjtnQkFFQW1DLFFBQVEsQ0FBQ0MsSUFBSSxHQUFHLEVBQUU7Z0JBQ2xCRCxRQUFRLENBQUNFLElBQUksR0FBRyxFQUFFO2dCQUNsQixPQUFPLElBQUksQ0FBQ0csS0FBSyxDQUFDLENBQUM7Y0FFckIsS0FBSyxFQUFFO2dCQUNMLElBQUksQ0FBQ25ELG1CQUFtQixDQUFDLElBQUksQ0FBQztnQkFDOUI4QyxRQUFRLENBQUNFLElBQUksR0FBRyxFQUFFO2dCQUNsQjtjQUVGLEtBQUssRUFBRTtnQkFDTEYsUUFBUSxDQUFDQyxJQUFJLEdBQUcsRUFBRTtnQkFDbEJELFFBQVEsQ0FBQ00sRUFBRSxHQUFHTixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDOztnQkFFbkM7Z0JBQ0EsSUFBSSxFQUFFQSxRQUFRLENBQUNNLEVBQUUsWUFBWUMsWUFBWSxDQUFDLEVBQUU7a0JBQzFDLElBQUksQ0FBQ2hELGdDQUFnQyxDQUFDLEtBQUssQ0FBQztnQkFDOUM7Y0FFRixLQUFLLEVBQUU7Y0FDUCxLQUFLLEtBQUs7Z0JBQ1IsT0FBT3lDLFFBQVEsQ0FBQ3hCLElBQUksQ0FBQyxDQUFDO1lBQzFCO1VBQ0Y7UUFDRixDQUFDLEVBQUVlLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO01BQy9CLENBQUMsQ0FBQyxDQUFDO01BRUgsU0FBUzVELGNBQWNBLENBQUEsRUFBRztRQUN4QixPQUFPeUQsZUFBZSxDQUFDMUYsS0FBSyxDQUFDLElBQUksRUFBRUQsU0FBUyxDQUFDO01BQy9DO01BRUEsT0FBT2tDLGNBQWM7SUFDdkIsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxFQUFFO0lBQ0Q3QyxHQUFHLEVBQUUsZ0JBQWdCO0lBQ3JCZCxLQUFLLEVBQUUsWUFBWTtNQUNqQixJQUFJd0ksZUFBZSxHQUFHbkgsaUJBQWlCLENBQUUsYUFBYWdHLGtCQUFrQixDQUFDQyxJQUFJLENBQUMsU0FBU21CLFFBQVFBLENBQUEsRUFBRztRQUNoRyxJQUFJQyxNQUFNLEdBQUcsSUFBSTtRQUVqQixPQUFPckIsa0JBQWtCLENBQUNTLElBQUksQ0FBQyxTQUFTYSxTQUFTQSxDQUFDQyxTQUFTLEVBQUU7VUFDM0QsT0FBTyxDQUFDLEVBQUU7WUFDUixRQUFRQSxTQUFTLENBQUNYLElBQUksR0FBR1csU0FBUyxDQUFDVixJQUFJO2NBQ3JDLEtBQUssQ0FBQztnQkFDSixJQUFJLENBQUM3QixVQUFVLENBQUMsT0FBTyxDQUFDO2dCQUN4QixJQUFJLENBQUNuQixtQkFBbUIsQ0FBQyxLQUFLLENBQUM7Z0JBQy9CMEQsU0FBUyxDQUFDVixJQUFJLEdBQUcsQ0FBQztnQkFDbEIsT0FBTyxJQUFJL0csT0FBTyxDQUFDLFVBQVVULE9BQU8sRUFBRTtrQkFDcENnSSxNQUFNLENBQUNuRixlQUFlLEdBQUc3QyxPQUFPO2dCQUNsQyxDQUFDLENBQUM7Y0FFSixLQUFLLENBQUM7Y0FDTixLQUFLLEtBQUs7Z0JBQ1IsT0FBT2tJLFNBQVMsQ0FBQ3BDLElBQUksQ0FBQyxDQUFDO1lBQzNCO1VBQ0Y7UUFDRixDQUFDLEVBQUVpQyxRQUFRLEVBQUUsSUFBSSxDQUFDO01BQ3BCLENBQUMsQ0FBQyxDQUFDO01BRUgsU0FBUzVFLGNBQWNBLENBQUEsRUFBRztRQUN4QixPQUFPMkUsZUFBZSxDQUFDOUcsS0FBSyxDQUFDLElBQUksRUFBRUQsU0FBUyxDQUFDO01BQy9DO01BRUEsT0FBT29DLGNBQWM7SUFDdkIsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxFQUFFO0lBQ0QvQyxHQUFHLEVBQUUsZUFBZTtJQUNwQmQsS0FBSyxFQUFFLFlBQVk7TUFDakIsSUFBSTZJLGNBQWMsR0FBR3hILGlCQUFpQixDQUFFLGFBQWFnRyxrQkFBa0IsQ0FBQ0MsSUFBSSxDQUFDLFNBQVN3QixRQUFRQSxDQUFBLEVBQUc7UUFDL0YsSUFBSUMsTUFBTSxHQUFHLElBQUk7UUFFakIsT0FBTzFCLGtCQUFrQixDQUFDUyxJQUFJLENBQUMsU0FBU2tCLFNBQVNBLENBQUNDLFNBQVMsRUFBRTtVQUMzRCxPQUFPLENBQUMsRUFBRTtZQUNSLFFBQVFBLFNBQVMsQ0FBQ2hCLElBQUksR0FBR2dCLFNBQVMsQ0FBQ2YsSUFBSTtjQUNyQyxLQUFLLENBQUM7Z0JBQ0osSUFBSSxDQUFDN0IsVUFBVSxDQUFDLE1BQU0sQ0FBQztnQkFDdkIsSUFBSSxDQUFDbkIsbUJBQW1CLENBQUMsS0FBSyxDQUFDO2dCQUMvQitELFNBQVMsQ0FBQ2YsSUFBSSxHQUFHLENBQUM7Z0JBQ2xCLE9BQU8sSUFBSS9HLE9BQU8sQ0FBQyxVQUFVVCxPQUFPLEVBQUU7a0JBQ3BDcUksTUFBTSxDQUFDeEYsZUFBZSxHQUFHN0MsT0FBTztnQkFDbEMsQ0FBQyxDQUFDO2NBRUosS0FBSyxDQUFDO2NBQ04sS0FBSyxLQUFLO2dCQUNSLE9BQU91SSxTQUFTLENBQUN6QyxJQUFJLENBQUMsQ0FBQztZQUMzQjtVQUNGO1FBQ0YsQ0FBQyxFQUFFc0MsUUFBUSxFQUFFLElBQUksQ0FBQztNQUNwQixDQUFDLENBQUMsQ0FBQztNQUVILFNBQVNsRixhQUFhQSxDQUFBLEVBQUc7UUFDdkIsT0FBT2lGLGNBQWMsQ0FBQ25ILEtBQUssQ0FBQyxJQUFJLEVBQUVELFNBQVMsQ0FBQztNQUM5QztNQUVBLE9BQU9tQyxhQUFhO0lBQ3RCLENBQUMsQ0FBQztFQUNKLENBQUMsRUFBRTtJQUNEOUMsR0FBRyxFQUFFLGdCQUFnQjtJQUNyQmQsS0FBSyxFQUFFLFNBQVNrSixjQUFjQSxDQUFBLEVBQUc7TUFDL0IsT0FBTyxJQUFJLENBQUNsRyxXQUFXO0lBQ3pCO0VBQ0YsQ0FBQyxFQUFFO0lBQ0RsQyxHQUFHLEVBQUUsT0FBTztJQUNaZCxLQUFLLEVBQUUsWUFBWTtNQUNqQixJQUFJbUosTUFBTSxHQUFHOUgsaUJBQWlCLENBQUUsYUFBYWdHLGtCQUFrQixDQUFDQyxJQUFJLENBQUMsU0FBUzhCLFFBQVFBLENBQUEsRUFBRztRQUN2RixPQUFPL0Isa0JBQWtCLENBQUNTLElBQUksQ0FBQyxTQUFTdUIsU0FBU0EsQ0FBQ0MsU0FBUyxFQUFFO1VBQzNELE9BQU8sQ0FBQyxFQUFFO1lBQ1IsUUFBUUEsU0FBUyxDQUFDckIsSUFBSSxHQUFHcUIsU0FBUyxDQUFDcEIsSUFBSTtjQUNyQyxLQUFLLENBQUM7Z0JBQ0osSUFBSSxFQUFFLElBQUksQ0FBQ2xGLFdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQ0ksU0FBUyxDQUFDLEVBQUU7a0JBQzFDa0csU0FBUyxDQUFDcEIsSUFBSSxHQUFHLENBQUM7a0JBQ2xCO2dCQUNGO2dCQUVBb0IsU0FBUyxDQUFDcEIsSUFBSSxHQUFHLENBQUM7Z0JBQ2xCLE9BQU8sSUFBSSxDQUFDbEYsV0FBVyxDQUFDcUYsS0FBSyxDQUFDLENBQUM7Y0FFakMsS0FBSyxDQUFDO2dCQUNKLElBQUksQ0FBQ2pGLFNBQVMsR0FBRyxJQUFJO2NBRXZCLEtBQUssQ0FBQztjQUNOLEtBQUssS0FBSztnQkFDUixPQUFPa0csU0FBUyxDQUFDOUMsSUFBSSxDQUFDLENBQUM7WUFDM0I7VUFDRjtRQUNGLENBQUMsRUFBRTRDLFFBQVEsRUFBRSxJQUFJLENBQUM7TUFDcEIsQ0FBQyxDQUFDLENBQUM7TUFFSCxTQUFTZixLQUFLQSxDQUFBLEVBQUc7UUFDZixPQUFPYyxNQUFNLENBQUN6SCxLQUFLLENBQUMsSUFBSSxFQUFFRCxTQUFTLENBQUM7TUFDdEM7TUFFQSxPQUFPNEcsS0FBSztJQUNkLENBQUMsQ0FBQztFQUNKLENBQUMsRUFBRTtJQUNEdkgsR0FBRyxFQUFFLE1BQU07SUFDWGQsS0FBSyxFQUFFLFNBQVN3RyxJQUFJQSxDQUFBLEVBQUc7TUFDckIsSUFBSSxJQUFJLENBQUN4RCxXQUFXLElBQUksSUFBSSxDQUFDSSxTQUFTLEVBQUU7UUFDdEMsSUFBSSxDQUFDSixXQUFXLENBQUN3RCxJQUFJLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUNwRCxTQUFTLEdBQUcsS0FBSztNQUN4QjtJQUNGO0VBQ0YsQ0FBQyxFQUFFO0lBQ0R0QyxHQUFHLEVBQUUsT0FBTztJQUNaZCxLQUFLLEVBQUUsU0FBU3VHLEtBQUtBLENBQUEsRUFBRztNQUN0QixJQUFJLElBQUksQ0FBQ3ZELFdBQVcsSUFBSSxJQUFJLENBQUNJLFNBQVMsRUFBRTtRQUN0QyxJQUFJLENBQUNKLFdBQVcsQ0FBQ3VELEtBQUssQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQ25ELFNBQVMsR0FBRyxLQUFLO01BQ3hCO0lBQ0Y7RUFDRixDQUFDLENBQUMsQ0FBQztFQUVILE9BQU9OLGtCQUFrQjtBQUMzQixDQUFDLENBQUMsQ0FBQztBQUVIL0Msa0JBQWtCLEdBQUcrQyxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXNwZWVjaC1yZWNvZ25pdGlvbi9saWIvUmVjb2duaXRpb25NYW5hZ2VyLmpzP2YwNTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9pc0FuZHJvaWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2lzQW5kcm9pZFwiKSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcblxudmFyIF9OYXRpdmVTcGVlY2hSZWNvZ25pdGlvbiA9IHJlcXVpcmUoXCIuL05hdGl2ZVNwZWVjaFJlY29nbml0aW9uXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsgZnVuY3Rpb24gX25leHQodmFsdWUpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpOyB9IGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG52YXIgUmVjb2duaXRpb25NYW5hZ2VyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUmVjb2duaXRpb25NYW5hZ2VyKFNwZWVjaFJlY29nbml0aW9uKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlY29nbml0aW9uTWFuYWdlcik7XG5cbiAgICB0aGlzLnJlY29nbml0aW9uID0gbnVsbDtcbiAgICB0aGlzLnBhdXNlQWZ0ZXJEaXNjb25uZWN0ID0gZmFsc2U7XG4gICAgdGhpcy5pbnRlcmltVHJhbnNjcmlwdCA9ICcnO1xuICAgIHRoaXMuZmluYWxUcmFuc2NyaXB0ID0gJyc7XG4gICAgdGhpcy5saXN0ZW5pbmcgPSBmYWxzZTtcbiAgICB0aGlzLmlzTWljcm9waG9uZUF2YWlsYWJsZSA9IHRydWU7XG4gICAgdGhpcy5zdWJzY3JpYmVycyA9IHt9O1xuXG4gICAgdGhpcy5vblN0b3BMaXN0ZW5pbmcgPSBmdW5jdGlvbiAoKSB7fTtcblxuICAgIHRoaXMucHJldmlvdXNSZXN1bHRXYXNGaW5hbE9ubHkgPSBmYWxzZTtcbiAgICB0aGlzLnJlc2V0VHJhbnNjcmlwdCA9IHRoaXMucmVzZXRUcmFuc2NyaXB0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGFydExpc3RlbmluZyA9IHRoaXMuc3RhcnRMaXN0ZW5pbmcuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN0b3BMaXN0ZW5pbmcgPSB0aGlzLnN0b3BMaXN0ZW5pbmcuYmluZCh0aGlzKTtcbiAgICB0aGlzLmFib3J0TGlzdGVuaW5nID0gdGhpcy5hYm9ydExpc3RlbmluZy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0U3BlZWNoUmVjb2duaXRpb24gPSB0aGlzLnNldFNwZWVjaFJlY29nbml0aW9uLmJpbmQodGhpcyk7XG4gICAgdGhpcy5kaXNhYmxlUmVjb2duaXRpb24gPSB0aGlzLmRpc2FibGVSZWNvZ25pdGlvbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0U3BlZWNoUmVjb2duaXRpb24oU3BlZWNoUmVjb2duaXRpb24pO1xuXG4gICAgaWYgKCgwLCBfaXNBbmRyb2lkW1wiZGVmYXVsdFwiXSkoKSkge1xuICAgICAgdGhpcy51cGRhdGVGaW5hbFRyYW5zY3JpcHQgPSAoMCwgX3V0aWxzLmRlYm91bmNlKSh0aGlzLnVwZGF0ZUZpbmFsVHJhbnNjcmlwdCwgMjUwLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmVjb2duaXRpb25NYW5hZ2VyLCBbe1xuICAgIGtleTogXCJzZXRTcGVlY2hSZWNvZ25pdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTcGVlY2hSZWNvZ25pdGlvbihTcGVlY2hSZWNvZ25pdGlvbikge1xuICAgICAgdmFyIGJyb3dzZXJTdXBwb3J0c1JlY29nbmlzZXIgPSAhIVNwZWVjaFJlY29nbml0aW9uICYmICgoMCwgX05hdGl2ZVNwZWVjaFJlY29nbml0aW9uLmlzTmF0aXZlKShTcGVlY2hSZWNvZ25pdGlvbikgfHwgKDAsIF91dGlscy5icm93c2VyU3VwcG9ydHNQb2x5ZmlsbHMpKCkpO1xuXG4gICAgICBpZiAoYnJvd3NlclN1cHBvcnRzUmVjb2duaXNlcikge1xuICAgICAgICB0aGlzLmRpc2FibGVSZWNvZ25pdGlvbigpO1xuICAgICAgICB0aGlzLnJlY29nbml0aW9uID0gbmV3IFNwZWVjaFJlY29nbml0aW9uKCk7XG4gICAgICAgIHRoaXMucmVjb2duaXRpb24uY29udGludW91cyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlY29nbml0aW9uLmludGVyaW1SZXN1bHRzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5vbnJlc3VsdCA9IHRoaXMudXBkYXRlVHJhbnNjcmlwdC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnJlY29nbml0aW9uLm9uZW5kID0gdGhpcy5vblJlY29nbml0aW9uRGlzY29ubmVjdC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnJlY29nbml0aW9uLm9uZXJyb3IgPSB0aGlzLm9uRXJyb3IuYmluZCh0aGlzKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5lbWl0QnJvd3NlclN1cHBvcnRzU3BlZWNoUmVjb2duaXRpb25DaGFuZ2UoYnJvd3NlclN1cHBvcnRzUmVjb2duaXNlcik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN1YnNjcmliZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdWJzY3JpYmUoaWQsIGNhbGxiYWNrcykge1xuICAgICAgdGhpcy5zdWJzY3JpYmVyc1tpZF0gPSBjYWxsYmFja3M7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVuc3Vic2NyaWJlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVuc3Vic2NyaWJlKGlkKSB7XG4gICAgICBkZWxldGUgdGhpcy5zdWJzY3JpYmVyc1tpZF07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImVtaXRMaXN0ZW5pbmdDaGFuZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW1pdExpc3RlbmluZ0NoYW5nZShsaXN0ZW5pbmcpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHRoaXMubGlzdGVuaW5nID0gbGlzdGVuaW5nO1xuICAgICAgT2JqZWN0LmtleXModGhpcy5zdWJzY3JpYmVycykuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdmFyIG9uTGlzdGVuaW5nQ2hhbmdlID0gX3RoaXMuc3Vic2NyaWJlcnNbaWRdLm9uTGlzdGVuaW5nQ2hhbmdlO1xuICAgICAgICBvbkxpc3RlbmluZ0NoYW5nZShsaXN0ZW5pbmcpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImVtaXRNaWNyb3Bob25lQXZhaWxhYmlsaXR5Q2hhbmdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVtaXRNaWNyb3Bob25lQXZhaWxhYmlsaXR5Q2hhbmdlKGlzTWljcm9waG9uZUF2YWlsYWJsZSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuaXNNaWNyb3Bob25lQXZhaWxhYmxlID0gaXNNaWNyb3Bob25lQXZhaWxhYmxlO1xuICAgICAgT2JqZWN0LmtleXModGhpcy5zdWJzY3JpYmVycykuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdmFyIG9uTWljcm9waG9uZUF2YWlsYWJpbGl0eUNoYW5nZSA9IF90aGlzMi5zdWJzY3JpYmVyc1tpZF0ub25NaWNyb3Bob25lQXZhaWxhYmlsaXR5Q2hhbmdlO1xuICAgICAgICBvbk1pY3JvcGhvbmVBdmFpbGFiaWxpdHlDaGFuZ2UoaXNNaWNyb3Bob25lQXZhaWxhYmxlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJlbWl0VHJhbnNjcmlwdENoYW5nZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbWl0VHJhbnNjcmlwdENoYW5nZShpbnRlcmltVHJhbnNjcmlwdCwgZmluYWxUcmFuc2NyaXB0KSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgT2JqZWN0LmtleXModGhpcy5zdWJzY3JpYmVycykuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdmFyIG9uVHJhbnNjcmlwdENoYW5nZSA9IF90aGlzMy5zdWJzY3JpYmVyc1tpZF0ub25UcmFuc2NyaXB0Q2hhbmdlO1xuICAgICAgICBvblRyYW5zY3JpcHRDaGFuZ2UoaW50ZXJpbVRyYW5zY3JpcHQsIGZpbmFsVHJhbnNjcmlwdCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZW1pdENsZWFyVHJhbnNjcmlwdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbWl0Q2xlYXJUcmFuc2NyaXB0KCkge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuc3Vic2NyaWJlcnMpLmZvckVhY2goZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIHZhciBvbkNsZWFyVHJhbnNjcmlwdCA9IF90aGlzNC5zdWJzY3JpYmVyc1tpZF0ub25DbGVhclRyYW5zY3JpcHQ7XG4gICAgICAgIG9uQ2xlYXJUcmFuc2NyaXB0KCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZW1pdEJyb3dzZXJTdXBwb3J0c1NwZWVjaFJlY29nbml0aW9uQ2hhbmdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVtaXRCcm93c2VyU3VwcG9ydHNTcGVlY2hSZWNvZ25pdGlvbkNoYW5nZShicm93c2VyU3VwcG9ydHNTcGVlY2hSZWNvZ25pdGlvbkNoYW5nZSkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuc3Vic2NyaWJlcnMpLmZvckVhY2goZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIHZhciBfdGhpczUkc3Vic2NyaWJlcnMkaWQgPSBfdGhpczUuc3Vic2NyaWJlcnNbaWRdLFxuICAgICAgICAgICAgb25Ccm93c2VyU3VwcG9ydHNTcGVlY2hSZWNvZ25pdGlvbkNoYW5nZSA9IF90aGlzNSRzdWJzY3JpYmVycyRpZC5vbkJyb3dzZXJTdXBwb3J0c1NwZWVjaFJlY29nbml0aW9uQ2hhbmdlLFxuICAgICAgICAgICAgb25Ccm93c2VyU3VwcG9ydHNDb250aW51b3VzTGlzdGVuaW5nQ2hhbmdlID0gX3RoaXM1JHN1YnNjcmliZXJzJGlkLm9uQnJvd3NlclN1cHBvcnRzQ29udGludW91c0xpc3RlbmluZ0NoYW5nZTtcbiAgICAgICAgb25Ccm93c2VyU3VwcG9ydHNTcGVlY2hSZWNvZ25pdGlvbkNoYW5nZShicm93c2VyU3VwcG9ydHNTcGVlY2hSZWNvZ25pdGlvbkNoYW5nZSk7XG4gICAgICAgIG9uQnJvd3NlclN1cHBvcnRzQ29udGludW91c0xpc3RlbmluZ0NoYW5nZShicm93c2VyU3VwcG9ydHNTcGVlY2hSZWNvZ25pdGlvbkNoYW5nZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzY29ubmVjdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNjb25uZWN0KGRpc2Nvbm5lY3RUeXBlKSB7XG4gICAgICBpZiAodGhpcy5yZWNvZ25pdGlvbiAmJiB0aGlzLmxpc3RlbmluZykge1xuICAgICAgICBzd2l0Y2ggKGRpc2Nvbm5lY3RUeXBlKSB7XG4gICAgICAgICAgY2FzZSAnQUJPUlQnOlxuICAgICAgICAgICAgdGhpcy5wYXVzZUFmdGVyRGlzY29ubmVjdCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmFib3J0KCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgJ1JFU0VUJzpcbiAgICAgICAgICAgIHRoaXMucGF1c2VBZnRlckRpc2Nvbm5lY3QgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuYWJvcnQoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAnU1RPUCc6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRoaXMucGF1c2VBZnRlckRpc2Nvbm5lY3QgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlzYWJsZVJlY29nbml0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2FibGVSZWNvZ25pdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLnJlY29nbml0aW9uKSB7XG4gICAgICAgIHRoaXMucmVjb2duaXRpb24ub25yZXN1bHQgPSBmdW5jdGlvbiAoKSB7fTtcblxuICAgICAgICB0aGlzLnJlY29nbml0aW9uLm9uZW5kID0gZnVuY3Rpb24gKCkge307XG5cbiAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5vbmVycm9yID0gZnVuY3Rpb24gKCkge307XG5cbiAgICAgICAgaWYgKHRoaXMubGlzdGVuaW5nKSB7XG4gICAgICAgICAgdGhpcy5zdG9wTGlzdGVuaW5nKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib25FcnJvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkVycm9yKGV2ZW50KSB7XG4gICAgICBpZiAoZXZlbnQgJiYgZXZlbnQuZXJyb3IgJiYgZXZlbnQuZXJyb3IgPT09ICdub3QtYWxsb3dlZCcpIHtcbiAgICAgICAgdGhpcy5lbWl0TWljcm9waG9uZUF2YWlsYWJpbGl0eUNoYW5nZShmYWxzZSk7XG4gICAgICAgIHRoaXMuZGlzYWJsZVJlY29nbml0aW9uKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9uUmVjb2duaXRpb25EaXNjb25uZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uUmVjb2duaXRpb25EaXNjb25uZWN0KCkge1xuICAgICAgdGhpcy5vblN0b3BMaXN0ZW5pbmcoKTtcbiAgICAgIHRoaXMubGlzdGVuaW5nID0gZmFsc2U7XG5cbiAgICAgIGlmICh0aGlzLnBhdXNlQWZ0ZXJEaXNjb25uZWN0KSB7XG4gICAgICAgIHRoaXMuZW1pdExpc3RlbmluZ0NoYW5nZShmYWxzZSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucmVjb2duaXRpb24pIHtcbiAgICAgICAgaWYgKHRoaXMucmVjb2duaXRpb24uY29udGludW91cykge1xuICAgICAgICAgIHRoaXMuc3RhcnRMaXN0ZW5pbmcoe1xuICAgICAgICAgICAgY29udGludW91czogdGhpcy5yZWNvZ25pdGlvbi5jb250aW51b3VzXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5lbWl0TGlzdGVuaW5nQ2hhbmdlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnBhdXNlQWZ0ZXJEaXNjb25uZWN0ID0gZmFsc2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVwZGF0ZVRyYW5zY3JpcHRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlVHJhbnNjcmlwdChfcmVmKSB7XG4gICAgICB2YXIgcmVzdWx0cyA9IF9yZWYucmVzdWx0cyxcbiAgICAgICAgICByZXN1bHRJbmRleCA9IF9yZWYucmVzdWx0SW5kZXg7XG4gICAgICB2YXIgY3VycmVudEluZGV4ID0gcmVzdWx0SW5kZXggPT09IHVuZGVmaW5lZCA/IHJlc3VsdHMubGVuZ3RoIC0gMSA6IHJlc3VsdEluZGV4O1xuICAgICAgdGhpcy5pbnRlcmltVHJhbnNjcmlwdCA9ICcnO1xuICAgICAgdGhpcy5maW5hbFRyYW5zY3JpcHQgPSAnJztcblxuICAgICAgZm9yICh2YXIgaSA9IGN1cnJlbnRJbmRleDsgaSA8IHJlc3VsdHMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKHJlc3VsdHNbaV0uaXNGaW5hbCAmJiAoISgwLCBfaXNBbmRyb2lkW1wiZGVmYXVsdFwiXSkoKSB8fCByZXN1bHRzW2ldWzBdLmNvbmZpZGVuY2UgPiAwKSkge1xuICAgICAgICAgIHRoaXMudXBkYXRlRmluYWxUcmFuc2NyaXB0KHJlc3VsdHNbaV1bMF0udHJhbnNjcmlwdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5pbnRlcmltVHJhbnNjcmlwdCA9ICgwLCBfdXRpbHMuY29uY2F0VHJhbnNjcmlwdHMpKHRoaXMuaW50ZXJpbVRyYW5zY3JpcHQsIHJlc3VsdHNbaV1bMF0udHJhbnNjcmlwdCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIGlzRHVwbGljYXRlUmVzdWx0ID0gZmFsc2U7XG5cbiAgICAgIGlmICh0aGlzLmludGVyaW1UcmFuc2NyaXB0ID09PSAnJyAmJiB0aGlzLmZpbmFsVHJhbnNjcmlwdCAhPT0gJycpIHtcbiAgICAgICAgaWYgKHRoaXMucHJldmlvdXNSZXN1bHRXYXNGaW5hbE9ubHkpIHtcbiAgICAgICAgICBpc0R1cGxpY2F0ZVJlc3VsdCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnByZXZpb3VzUmVzdWx0V2FzRmluYWxPbmx5ID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucHJldmlvdXNSZXN1bHRXYXNGaW5hbE9ubHkgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc0R1cGxpY2F0ZVJlc3VsdCkge1xuICAgICAgICB0aGlzLmVtaXRUcmFuc2NyaXB0Q2hhbmdlKHRoaXMuaW50ZXJpbVRyYW5zY3JpcHQsIHRoaXMuZmluYWxUcmFuc2NyaXB0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidXBkYXRlRmluYWxUcmFuc2NyaXB0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZUZpbmFsVHJhbnNjcmlwdChuZXdGaW5hbFRyYW5zY3JpcHQpIHtcbiAgICAgIHRoaXMuZmluYWxUcmFuc2NyaXB0ID0gKDAsIF91dGlscy5jb25jYXRUcmFuc2NyaXB0cykodGhpcy5maW5hbFRyYW5zY3JpcHQsIG5ld0ZpbmFsVHJhbnNjcmlwdCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlc2V0VHJhbnNjcmlwdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldFRyYW5zY3JpcHQoKSB7XG4gICAgICB0aGlzLmRpc2Nvbm5lY3QoJ1JFU0VUJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInN0YXJ0TGlzdGVuaW5nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfc3RhcnRMaXN0ZW5pbmcgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7XG4gICAgICAgIHZhciBfcmVmMixcbiAgICAgICAgICAgIF9yZWYyJGNvbnRpbnVvdXMsXG4gICAgICAgICAgICBjb250aW51b3VzLFxuICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICBpc0NvbnRpbnVvdXNDaGFuZ2VkLFxuICAgICAgICAgICAgaXNMYW5ndWFnZUNoYW5nZWQsXG4gICAgICAgICAgICBfYXJncyA9IGFyZ3VtZW50cztcblxuICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgX3JlZjIgPSBfYXJncy5sZW5ndGggPiAwICYmIF9hcmdzWzBdICE9PSB1bmRlZmluZWQgPyBfYXJnc1swXSA6IHt9LCBfcmVmMiRjb250aW51b3VzID0gX3JlZjIuY29udGludW91cywgY29udGludW91cyA9IF9yZWYyJGNvbnRpbnVvdXMgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkY29udGludW91cywgbGFuZ3VhZ2UgPSBfcmVmMi5sYW5ndWFnZTtcblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlY29nbml0aW9uKSB7XG4gICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIik7XG5cbiAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgIGlzQ29udGludW91c0NoYW5nZWQgPSBjb250aW51b3VzICE9PSB0aGlzLnJlY29nbml0aW9uLmNvbnRpbnVvdXM7XG4gICAgICAgICAgICAgICAgaXNMYW5ndWFnZUNoYW5nZWQgPSBsYW5ndWFnZSAmJiBsYW5ndWFnZSAhPT0gdGhpcy5yZWNvZ25pdGlvbi5sYW5nO1xuXG4gICAgICAgICAgICAgICAgaWYgKCEoaXNDb250aW51b3VzQ2hhbmdlZCB8fCBpc0xhbmd1YWdlQ2hhbmdlZCkpIHtcbiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5saXN0ZW5pbmcpIHtcbiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5O1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcExpc3RlbmluZygpO1xuXG4gICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLmNvbnRpbnVvdXMgPSBpc0NvbnRpbnVvdXNDaGFuZ2VkID8gY29udGludW91cyA6IHRoaXMucmVjb2duaXRpb24uY29udGludW91cztcbiAgICAgICAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLmxhbmcgPSBpc0xhbmd1YWdlQ2hhbmdlZCA/IGxhbmd1YWdlIDogdGhpcy5yZWNvZ25pdGlvbi5sYW5nO1xuXG4gICAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGlzdGVuaW5nKSB7XG4gICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjI7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucmVjb2duaXRpb24uY29udGludW91cykge1xuICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldFRyYW5zY3JpcHQoKTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdENsZWFyVHJhbnNjcmlwdCgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMztcbiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnQoKTtcblxuICAgICAgICAgICAgICBjYXNlIDE2OlxuICAgICAgICAgICAgICAgIHRoaXMuZW1pdExpc3RlbmluZ0NoYW5nZSh0cnVlKTtcbiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgY2FzZSAxOTpcbiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTk7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFtcImNhdGNoXCJdKDEzKTtcblxuICAgICAgICAgICAgICAgIC8vIERPTUV4Y2VwdGlvbnMgaW5kaWNhdGUgYSByZWR1bmRhbnQgbWljcm9waG9uZSBzdGFydCAtIHNhZmUgdG8gc3dhbGxvd1xuICAgICAgICAgICAgICAgIGlmICghKF9jb250ZXh0LnQwIGluc3RhbmNlb2YgRE9NRXhjZXB0aW9uKSkge1xuICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0TWljcm9waG9uZUF2YWlsYWJpbGl0eUNoYW5nZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGNhc2UgMjI6XG4gICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1sxMywgMTldXSk7XG4gICAgICB9KSk7XG5cbiAgICAgIGZ1bmN0aW9uIHN0YXJ0TGlzdGVuaW5nKCkge1xuICAgICAgICByZXR1cm4gX3N0YXJ0TGlzdGVuaW5nLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdGFydExpc3RlbmluZztcbiAgICB9KClcbiAgfSwge1xuICAgIGtleTogXCJhYm9ydExpc3RlbmluZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX2Fib3J0TGlzdGVuaW5nID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHtcbiAgICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoJ0FCT1JUJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0TGlzdGVuaW5nQ2hhbmdlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgICBfdGhpczYub25TdG9wTGlzdGVuaW5nID0gcmVzb2x2ZTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTtcbiAgICAgIH0pKTtcblxuICAgICAgZnVuY3Rpb24gYWJvcnRMaXN0ZW5pbmcoKSB7XG4gICAgICAgIHJldHVybiBfYWJvcnRMaXN0ZW5pbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFib3J0TGlzdGVuaW5nO1xuICAgIH0oKVxuICB9LCB7XG4gICAga2V5OiBcInN0b3BMaXN0ZW5pbmdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9zdG9wTGlzdGVuaW5nID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHtcbiAgICAgICAgdmFyIF90aGlzNyA9IHRoaXM7XG5cbiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoJ1NUT1AnKTtcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXRMaXN0ZW5pbmdDaGFuZ2UoZmFsc2UpO1xuICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgICAgICAgICAgIF90aGlzNy5vblN0b3BMaXN0ZW5pbmcgPSByZXNvbHZlO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBzdG9wTGlzdGVuaW5nKCkge1xuICAgICAgICByZXR1cm4gX3N0b3BMaXN0ZW5pbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0b3BMaXN0ZW5pbmc7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UmVjb2duaXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVjb2duaXRpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZWNvZ25pdGlvbjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic3RhcnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9zdGFydCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7XG4gICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgaWYgKCEodGhpcy5yZWNvZ25pdGlvbiAmJiAhdGhpcy5saXN0ZW5pbmcpKSB7XG4gICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVjb2duaXRpb24uc3RhcnQoKTtcblxuICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5pbmcgPSB0cnVlO1xuXG4gICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTQsIHRoaXMpO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBzdGFydCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdGFydC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3RhcnQ7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwic3RvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgaWYgKHRoaXMucmVjb2duaXRpb24gJiYgdGhpcy5saXN0ZW5pbmcpIHtcbiAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5zdG9wKCk7XG4gICAgICAgIHRoaXMubGlzdGVuaW5nID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImFib3J0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFib3J0KCkge1xuICAgICAgaWYgKHRoaXMucmVjb2duaXRpb24gJiYgdGhpcy5saXN0ZW5pbmcpIHtcbiAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5hYm9ydCgpO1xuICAgICAgICB0aGlzLmxpc3RlbmluZyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZWNvZ25pdGlvbk1hbmFnZXI7XG59KCk7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gUmVjb2duaXRpb25NYW5hZ2VyOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9pc0FuZHJvaWQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl91dGlscyIsIl9OYXRpdmVTcGVlY2hSZWNvZ25pdGlvbiIsIm9iaiIsIl9fZXNNb2R1bGUiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJhcmciLCJpbmZvIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfY3JlYXRlQ2xhc3MiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJSZWNvZ25pdGlvbk1hbmFnZXIiLCJTcGVlY2hSZWNvZ25pdGlvbiIsInJlY29nbml0aW9uIiwicGF1c2VBZnRlckRpc2Nvbm5lY3QiLCJpbnRlcmltVHJhbnNjcmlwdCIsImZpbmFsVHJhbnNjcmlwdCIsImxpc3RlbmluZyIsImlzTWljcm9waG9uZUF2YWlsYWJsZSIsInN1YnNjcmliZXJzIiwib25TdG9wTGlzdGVuaW5nIiwicHJldmlvdXNSZXN1bHRXYXNGaW5hbE9ubHkiLCJyZXNldFRyYW5zY3JpcHQiLCJiaW5kIiwic3RhcnRMaXN0ZW5pbmciLCJzdG9wTGlzdGVuaW5nIiwiYWJvcnRMaXN0ZW5pbmciLCJzZXRTcGVlY2hSZWNvZ25pdGlvbiIsImRpc2FibGVSZWNvZ25pdGlvbiIsInVwZGF0ZUZpbmFsVHJhbnNjcmlwdCIsImRlYm91bmNlIiwiYnJvd3NlclN1cHBvcnRzUmVjb2duaXNlciIsImlzTmF0aXZlIiwiYnJvd3NlclN1cHBvcnRzUG9seWZpbGxzIiwiY29udGludW91cyIsImludGVyaW1SZXN1bHRzIiwib25yZXN1bHQiLCJ1cGRhdGVUcmFuc2NyaXB0Iiwib25lbmQiLCJvblJlY29nbml0aW9uRGlzY29ubmVjdCIsIm9uZXJyb3IiLCJvbkVycm9yIiwiZW1pdEJyb3dzZXJTdXBwb3J0c1NwZWVjaFJlY29nbml0aW9uQ2hhbmdlIiwic3Vic2NyaWJlIiwiaWQiLCJjYWxsYmFja3MiLCJ1bnN1YnNjcmliZSIsImVtaXRMaXN0ZW5pbmdDaGFuZ2UiLCJfdGhpcyIsImtleXMiLCJmb3JFYWNoIiwib25MaXN0ZW5pbmdDaGFuZ2UiLCJlbWl0TWljcm9waG9uZUF2YWlsYWJpbGl0eUNoYW5nZSIsIl90aGlzMiIsIm9uTWljcm9waG9uZUF2YWlsYWJpbGl0eUNoYW5nZSIsImVtaXRUcmFuc2NyaXB0Q2hhbmdlIiwiX3RoaXMzIiwib25UcmFuc2NyaXB0Q2hhbmdlIiwiZW1pdENsZWFyVHJhbnNjcmlwdCIsIl90aGlzNCIsIm9uQ2xlYXJUcmFuc2NyaXB0IiwiYnJvd3NlclN1cHBvcnRzU3BlZWNoUmVjb2duaXRpb25DaGFuZ2UiLCJfdGhpczUiLCJfdGhpczUkc3Vic2NyaWJlcnMkaWQiLCJvbkJyb3dzZXJTdXBwb3J0c1NwZWVjaFJlY29nbml0aW9uQ2hhbmdlIiwib25Ccm93c2VyU3VwcG9ydHNDb250aW51b3VzTGlzdGVuaW5nQ2hhbmdlIiwiZGlzY29ubmVjdCIsImRpc2Nvbm5lY3RUeXBlIiwiYWJvcnQiLCJzdG9wIiwiZXZlbnQiLCJfcmVmIiwicmVzdWx0cyIsInJlc3VsdEluZGV4IiwiY3VycmVudEluZGV4IiwiaXNGaW5hbCIsImNvbmZpZGVuY2UiLCJ0cmFuc2NyaXB0IiwiY29uY2F0VHJhbnNjcmlwdHMiLCJpc0R1cGxpY2F0ZVJlc3VsdCIsIm5ld0ZpbmFsVHJhbnNjcmlwdCIsIl9zdGFydExpc3RlbmluZyIsInJlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiX3JlZjIiLCJfcmVmMiRjb250aW51b3VzIiwibGFuZ3VhZ2UiLCJpc0NvbnRpbnVvdXNDaGFuZ2VkIiwiaXNMYW5ndWFnZUNoYW5nZWQiLCJfYXJncyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJhYnJ1cHQiLCJsYW5nIiwic3RhcnQiLCJ0MCIsIkRPTUV4Y2VwdGlvbiIsIl9hYm9ydExpc3RlbmluZyIsIl9jYWxsZWUyIiwiX3RoaXM2IiwiX2NhbGxlZTIkIiwiX2NvbnRleHQyIiwiX3N0b3BMaXN0ZW5pbmciLCJfY2FsbGVlMyIsIl90aGlzNyIsIl9jYWxsZWUzJCIsIl9jb250ZXh0MyIsImdldFJlY29nbml0aW9uIiwiX3N0YXJ0IiwiX2NhbGxlZTQiLCJfY2FsbGVlNCQiLCJfY29udGV4dDQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/RecognitionManager.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/SpeechRecognition.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/SpeechRecognition.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.useSpeechRecognition = void 0;\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/react-speech-recognition/lib/utils.js\");\nvar _actions = __webpack_require__(/*! ./actions */ \"./node_modules/react-speech-recognition/lib/actions.js\");\nvar _reducers = __webpack_require__(/*! ./reducers */ \"./node_modules/react-speech-recognition/lib/reducers.js\");\nvar _RecognitionManager = _interopRequireDefault(__webpack_require__(/*! ./RecognitionManager */ \"./node_modules/react-speech-recognition/lib/RecognitionManager.js\"));\nvar _isAndroid = _interopRequireDefault(__webpack_require__(/*! ./isAndroid */ \"./node_modules/react-speech-recognition/lib/isAndroid.js\"));\nvar _NativeSpeechRecognition = _interopRequireDefault(__webpack_require__(/*! ./NativeSpeechRecognition */ \"./node_modules/react-speech-recognition/lib/NativeSpeechRecognition.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nvar _browserSupportsSpeechRecognition = !!_NativeSpeechRecognition[\"default\"];\nvar _browserSupportsContinuousListening = _browserSupportsSpeechRecognition && !(0, _isAndroid[\"default\"])();\nvar recognitionManager;\nvar useSpeechRecognition = function useSpeechRecognition() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$transcribing = _ref.transcribing,\n    transcribing = _ref$transcribing === void 0 ? true : _ref$transcribing,\n    _ref$clearTranscriptO = _ref.clearTranscriptOnListen,\n    clearTranscriptOnListen = _ref$clearTranscriptO === void 0 ? true : _ref$clearTranscriptO,\n    _ref$commands = _ref.commands,\n    commands = _ref$commands === void 0 ? [] : _ref$commands;\n  var _useState = (0, _react.useState)(SpeechRecognition.getRecognitionManager()),\n    _useState2 = _slicedToArray(_useState, 1),\n    recognitionManager = _useState2[0];\n  var _useState3 = (0, _react.useState)(_browserSupportsSpeechRecognition),\n    _useState4 = _slicedToArray(_useState3, 2),\n    browserSupportsSpeechRecognition = _useState4[0],\n    setBrowserSupportsSpeechRecognition = _useState4[1];\n  var _useState5 = (0, _react.useState)(_browserSupportsContinuousListening),\n    _useState6 = _slicedToArray(_useState5, 2),\n    browserSupportsContinuousListening = _useState6[0],\n    setBrowserSupportsContinuousListening = _useState6[1];\n  var _useReducer = (0, _react.useReducer)(_reducers.transcriptReducer, {\n      interimTranscript: recognitionManager.interimTranscript,\n      finalTranscript: ''\n    }),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    _useReducer2$ = _useReducer2[0],\n    interimTranscript = _useReducer2$.interimTranscript,\n    finalTranscript = _useReducer2$.finalTranscript,\n    dispatch = _useReducer2[1];\n  var _useState7 = (0, _react.useState)(recognitionManager.listening),\n    _useState8 = _slicedToArray(_useState7, 2),\n    listening = _useState8[0],\n    setListening = _useState8[1];\n  var _useState9 = (0, _react.useState)(recognitionManager.isMicrophoneAvailable),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isMicrophoneAvailable = _useState10[0],\n    setMicrophoneAvailable = _useState10[1];\n  var commandsRef = (0, _react.useRef)(commands);\n  commandsRef.current = commands;\n  var dispatchClearTranscript = function dispatchClearTranscript() {\n    dispatch((0, _actions.clearTranscript)());\n  };\n  var resetTranscript = (0, _react.useCallback)(function () {\n    recognitionManager.resetTranscript();\n    dispatchClearTranscript();\n  }, [recognitionManager]);\n  var testFuzzyMatch = function testFuzzyMatch(command, input, fuzzyMatchingThreshold) {\n    var commandToString = _typeof(command) === 'object' ? command.toString() : command;\n    var commandWithoutSpecials = commandToString.replace(/[&/\\\\#,+()!$~%.'\":*?<>{}]/g, '').replace(/  +/g, ' ').trim();\n    var howSimilar = (0, _utils.compareTwoStringsUsingDiceCoefficient)(commandWithoutSpecials, input);\n    if (howSimilar >= fuzzyMatchingThreshold) {\n      return {\n        command: command,\n        commandWithoutSpecials: commandWithoutSpecials,\n        howSimilar: howSimilar,\n        isFuzzyMatch: true\n      };\n    }\n    return null;\n  };\n  var testMatch = function testMatch(command, input) {\n    var pattern = (0, _utils.commandToRegExp)(command);\n    var result = pattern.exec(input);\n    if (result) {\n      return {\n        command: command,\n        parameters: result.slice(1)\n      };\n    }\n    return null;\n  };\n  var matchCommands = (0, _react.useCallback)(function (newInterimTranscript, newFinalTranscript) {\n    commandsRef.current.forEach(function (_ref2) {\n      var command = _ref2.command,\n        callback = _ref2.callback,\n        _ref2$matchInterim = _ref2.matchInterim,\n        matchInterim = _ref2$matchInterim === void 0 ? false : _ref2$matchInterim,\n        _ref2$isFuzzyMatch = _ref2.isFuzzyMatch,\n        isFuzzyMatch = _ref2$isFuzzyMatch === void 0 ? false : _ref2$isFuzzyMatch,\n        _ref2$fuzzyMatchingTh = _ref2.fuzzyMatchingThreshold,\n        fuzzyMatchingThreshold = _ref2$fuzzyMatchingTh === void 0 ? 0.8 : _ref2$fuzzyMatchingTh,\n        _ref2$bestMatchOnly = _ref2.bestMatchOnly,\n        bestMatchOnly = _ref2$bestMatchOnly === void 0 ? false : _ref2$bestMatchOnly;\n      var input = !newFinalTranscript && matchInterim ? newInterimTranscript.trim() : newFinalTranscript.trim();\n      var subcommands = Array.isArray(command) ? command : [command];\n      var results = subcommands.map(function (subcommand) {\n        if (isFuzzyMatch) {\n          return testFuzzyMatch(subcommand, input, fuzzyMatchingThreshold);\n        }\n        return testMatch(subcommand, input);\n      }).filter(function (x) {\n        return x;\n      });\n      if (isFuzzyMatch && bestMatchOnly && results.length >= 2) {\n        results.sort(function (a, b) {\n          return b.howSimilar - a.howSimilar;\n        });\n        var _results$ = results[0],\n          _command = _results$.command,\n          commandWithoutSpecials = _results$.commandWithoutSpecials,\n          howSimilar = _results$.howSimilar;\n        callback(commandWithoutSpecials, input, howSimilar, {\n          command: _command,\n          resetTranscript: resetTranscript\n        });\n      } else {\n        results.forEach(function (result) {\n          if (result.isFuzzyMatch) {\n            var _command2 = result.command,\n              _commandWithoutSpecials = result.commandWithoutSpecials,\n              _howSimilar = result.howSimilar;\n            callback(_commandWithoutSpecials, input, _howSimilar, {\n              command: _command2,\n              resetTranscript: resetTranscript\n            });\n          } else {\n            var _command3 = result.command,\n              parameters = result.parameters;\n            callback.apply(void 0, _toConsumableArray(parameters).concat([{\n              command: _command3,\n              resetTranscript: resetTranscript\n            }]));\n          }\n        });\n      }\n    });\n  }, [resetTranscript]);\n  var handleTranscriptChange = (0, _react.useCallback)(function (newInterimTranscript, newFinalTranscript) {\n    if (transcribing) {\n      dispatch((0, _actions.appendTranscript)(newInterimTranscript, newFinalTranscript));\n    }\n    matchCommands(newInterimTranscript, newFinalTranscript);\n  }, [matchCommands, transcribing]);\n  var handleClearTranscript = (0, _react.useCallback)(function () {\n    if (clearTranscriptOnListen) {\n      dispatchClearTranscript();\n    }\n  }, [clearTranscriptOnListen]);\n  (0, _react.useEffect)(function () {\n    var id = SpeechRecognition.counter;\n    SpeechRecognition.counter += 1;\n    var callbacks = {\n      onListeningChange: setListening,\n      onMicrophoneAvailabilityChange: setMicrophoneAvailable,\n      onTranscriptChange: handleTranscriptChange,\n      onClearTranscript: handleClearTranscript,\n      onBrowserSupportsSpeechRecognitionChange: setBrowserSupportsSpeechRecognition,\n      onBrowserSupportsContinuousListeningChange: setBrowserSupportsContinuousListening\n    };\n    recognitionManager.subscribe(id, callbacks);\n    return function () {\n      recognitionManager.unsubscribe(id);\n    };\n  }, [transcribing, clearTranscriptOnListen, recognitionManager, handleTranscriptChange, handleClearTranscript]);\n  var transcript = (0, _utils.concatTranscripts)(finalTranscript, interimTranscript);\n  return {\n    transcript: transcript,\n    interimTranscript: interimTranscript,\n    finalTranscript: finalTranscript,\n    listening: listening,\n    isMicrophoneAvailable: isMicrophoneAvailable,\n    resetTranscript: resetTranscript,\n    browserSupportsSpeechRecognition: browserSupportsSpeechRecognition,\n    browserSupportsContinuousListening: browserSupportsContinuousListening\n  };\n};\nexports.useSpeechRecognition = useSpeechRecognition;\nvar SpeechRecognition = {\n  counter: 0,\n  applyPolyfill: function applyPolyfill(PolyfillSpeechRecognition) {\n    if (recognitionManager) {\n      recognitionManager.setSpeechRecognition(PolyfillSpeechRecognition);\n    } else {\n      recognitionManager = new _RecognitionManager[\"default\"](PolyfillSpeechRecognition);\n    }\n    var browserSupportsPolyfill = !!PolyfillSpeechRecognition && (0, _utils.browserSupportsPolyfills)();\n    _browserSupportsSpeechRecognition = browserSupportsPolyfill;\n    _browserSupportsContinuousListening = browserSupportsPolyfill;\n  },\n  removePolyfill: function removePolyfill() {\n    if (recognitionManager) {\n      recognitionManager.setSpeechRecognition(_NativeSpeechRecognition[\"default\"]);\n    } else {\n      recognitionManager = new _RecognitionManager[\"default\"](_NativeSpeechRecognition[\"default\"]);\n    }\n    _browserSupportsSpeechRecognition = !!_NativeSpeechRecognition[\"default\"];\n    _browserSupportsContinuousListening = _browserSupportsSpeechRecognition && !(0, _isAndroid[\"default\"])();\n  },\n  getRecognitionManager: function getRecognitionManager() {\n    if (!recognitionManager) {\n      recognitionManager = new _RecognitionManager[\"default\"](_NativeSpeechRecognition[\"default\"]);\n    }\n    return recognitionManager;\n  },\n  getRecognition: function getRecognition() {\n    var recognitionManager = SpeechRecognition.getRecognitionManager();\n    return recognitionManager.getRecognition();\n  },\n  startListening: function () {\n    var _startListening = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _ref3,\n        continuous,\n        language,\n        recognitionManager,\n        _args = arguments;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref3 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, continuous = _ref3.continuous, language = _ref3.language;\n              recognitionManager = SpeechRecognition.getRecognitionManager();\n              _context.next = 4;\n              return recognitionManager.startListening({\n                continuous: continuous,\n                language: language\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function startListening() {\n      return _startListening.apply(this, arguments);\n    }\n    return startListening;\n  }(),\n  stopListening: function () {\n    var _stopListening = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var recognitionManager;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              recognitionManager = SpeechRecognition.getRecognitionManager();\n              _context2.next = 3;\n              return recognitionManager.stopListening();\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    function stopListening() {\n      return _stopListening.apply(this, arguments);\n    }\n    return stopListening;\n  }(),\n  abortListening: function () {\n    var _abortListening = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var recognitionManager;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              recognitionManager = SpeechRecognition.getRecognitionManager();\n              _context3.next = 3;\n              return recognitionManager.abortListening();\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    function abortListening() {\n      return _abortListening.apply(this, arguments);\n    }\n    return abortListening;\n  }(),\n  browserSupportsSpeechRecognition: function browserSupportsSpeechRecognition() {\n    return _browserSupportsSpeechRecognition;\n  },\n  browserSupportsContinuousListening: function browserSupportsContinuousListening() {\n    return _browserSupportsContinuousListening;\n  }\n};\nvar _default = SpeechRecognition;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/SpeechRecognition.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/actions.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/actions.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.appendTranscript = exports.clearTranscript = void 0;\nvar _constants = __webpack_require__(/*! ./constants */ \"./node_modules/react-speech-recognition/lib/constants.js\");\nvar clearTranscript = function clearTranscript() {\n  return {\n    type: _constants.CLEAR_TRANSCRIPT\n  };\n};\nexports.clearTranscript = clearTranscript;\nvar appendTranscript = function appendTranscript(interimTranscript, finalTranscript) {\n  return {\n    type: _constants.APPEND_TRANSCRIPT,\n    payload: {\n      interimTranscript: interimTranscript,\n      finalTranscript: finalTranscript\n    }\n  };\n};\nexports.appendTranscript = appendTranscript;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9hY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGRCx3QkFBd0IsR0FBR0EsdUJBQXVCLEdBQUcsS0FBSyxDQUFDO0FBRTNELElBQUlJLFVBQVUsR0FBR0MsbUJBQU8sQ0FBQyw2RUFBYSxDQUFDO0FBRXZDLElBQUlGLGVBQWUsR0FBRyxTQUFTQSxlQUFlQSxDQUFBLEVBQUc7RUFDL0MsT0FBTztJQUNMRyxJQUFJLEVBQUVGLFVBQVUsQ0FBQ0c7RUFDbkIsQ0FBQztBQUNILENBQUM7QUFFRFAsdUJBQXVCLEdBQUdHLGVBQWU7QUFFekMsSUFBSUQsZ0JBQWdCLEdBQUcsU0FBU0EsZ0JBQWdCQSxDQUFDTSxpQkFBaUIsRUFBRUMsZUFBZSxFQUFFO0VBQ25GLE9BQU87SUFDTEgsSUFBSSxFQUFFRixVQUFVLENBQUNNLGlCQUFpQjtJQUNsQ0MsT0FBTyxFQUFFO01BQ1BILGlCQUFpQixFQUFFQSxpQkFBaUI7TUFDcENDLGVBQWUsRUFBRUE7SUFDbkI7RUFDRixDQUFDO0FBQ0gsQ0FBQztBQUVEVCx3QkFBd0IsR0FBR0UsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zcGVlY2gtcmVjb2duaXRpb24vbGliL2FjdGlvbnMuanM/YWM3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYXBwZW5kVHJhbnNjcmlwdCA9IGV4cG9ydHMuY2xlYXJUcmFuc2NyaXB0ID0gdm9pZCAwO1xuXG52YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcblxudmFyIGNsZWFyVHJhbnNjcmlwdCA9IGZ1bmN0aW9uIGNsZWFyVHJhbnNjcmlwdCgpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBfY29uc3RhbnRzLkNMRUFSX1RSQU5TQ1JJUFRcbiAgfTtcbn07XG5cbmV4cG9ydHMuY2xlYXJUcmFuc2NyaXB0ID0gY2xlYXJUcmFuc2NyaXB0O1xuXG52YXIgYXBwZW5kVHJhbnNjcmlwdCA9IGZ1bmN0aW9uIGFwcGVuZFRyYW5zY3JpcHQoaW50ZXJpbVRyYW5zY3JpcHQsIGZpbmFsVHJhbnNjcmlwdCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IF9jb25zdGFudHMuQVBQRU5EX1RSQU5TQ1JJUFQsXG4gICAgcGF5bG9hZDoge1xuICAgICAgaW50ZXJpbVRyYW5zY3JpcHQ6IGludGVyaW1UcmFuc2NyaXB0LFxuICAgICAgZmluYWxUcmFuc2NyaXB0OiBmaW5hbFRyYW5zY3JpcHRcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnRzLmFwcGVuZFRyYW5zY3JpcHQgPSBhcHBlbmRUcmFuc2NyaXB0OyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFwcGVuZFRyYW5zY3JpcHQiLCJjbGVhclRyYW5zY3JpcHQiLCJfY29uc3RhbnRzIiwicmVxdWlyZSIsInR5cGUiLCJDTEVBUl9UUkFOU0NSSVBUIiwiaW50ZXJpbVRyYW5zY3JpcHQiLCJmaW5hbFRyYW5zY3JpcHQiLCJBUFBFTkRfVFJBTlNDUklQVCIsInBheWxvYWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/actions.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/constants.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.APPEND_TRANSCRIPT = exports.CLEAR_TRANSCRIPT = void 0;\nvar CLEAR_TRANSCRIPT = 'CLEAR_TRANSCRIPT';\nexports.CLEAR_TRANSCRIPT = CLEAR_TRANSCRIPT;\nvar APPEND_TRANSCRIPT = 'APPEND_TRANSCRIPT';\nexports.APPEND_TRANSCRIPT = APPEND_TRANSCRIPT;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHlCQUF5QixHQUFHQSx3QkFBd0IsR0FBRyxLQUFLLENBQUM7QUFDN0QsSUFBSUcsZ0JBQWdCLEdBQUcsa0JBQWtCO0FBQ3pDSCx3QkFBd0IsR0FBR0csZ0JBQWdCO0FBQzNDLElBQUlELGlCQUFpQixHQUFHLG1CQUFtQjtBQUMzQ0YseUJBQXlCLEdBQUdFLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9jb25zdGFudHMuanM/OWY4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQVBQRU5EX1RSQU5TQ1JJUFQgPSBleHBvcnRzLkNMRUFSX1RSQU5TQ1JJUFQgPSB2b2lkIDA7XG52YXIgQ0xFQVJfVFJBTlNDUklQVCA9ICdDTEVBUl9UUkFOU0NSSVBUJztcbmV4cG9ydHMuQ0xFQVJfVFJBTlNDUklQVCA9IENMRUFSX1RSQU5TQ1JJUFQ7XG52YXIgQVBQRU5EX1RSQU5TQ1JJUFQgPSAnQVBQRU5EX1RSQU5TQ1JJUFQnO1xuZXhwb3J0cy5BUFBFTkRfVFJBTlNDUklQVCA9IEFQUEVORF9UUkFOU0NSSVBUOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFQUEVORF9UUkFOU0NSSVBUIiwiQ0xFQVJfVFJBTlNDUklQVCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"useSpeechRecognition\", ({\n  enumerable: true,\n  get: function get() {\n    return _SpeechRecognition.useSpeechRecognition;\n  }\n}));\nexports[\"default\"] = void 0;\nvar _SpeechRecognition = _interopRequireWildcard(__webpack_require__(/*! ./SpeechRecognition */ \"./node_modules/react-speech-recognition/lib/SpeechRecognition.js\"));\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar _default = _SpeechRecognition[\"default\"];\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixTQUFTQSxPQUFPQSxDQUFDQyxHQUFHLEVBQUU7RUFBRSx5QkFBeUI7O0VBQUUsSUFBSSxPQUFPQyxNQUFNLEtBQUssVUFBVSxJQUFJLE9BQU9BLE1BQU0sQ0FBQ0MsUUFBUSxLQUFLLFFBQVEsRUFBRTtJQUFFSCxPQUFPLEdBQUcsU0FBU0EsT0FBT0EsQ0FBQ0MsR0FBRyxFQUFFO01BQUUsT0FBTyxPQUFPQSxHQUFHO0lBQUUsQ0FBQztFQUFFLENBQUMsTUFBTTtJQUFFRCxPQUFPLEdBQUcsU0FBU0EsT0FBT0EsQ0FBQ0MsR0FBRyxFQUFFO01BQUUsT0FBT0EsR0FBRyxJQUFJLE9BQU9DLE1BQU0sS0FBSyxVQUFVLElBQUlELEdBQUcsQ0FBQ0csV0FBVyxLQUFLRixNQUFNLElBQUlELEdBQUcsS0FBS0MsTUFBTSxDQUFDRyxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU9KLEdBQUc7SUFBRSxDQUFDO0VBQUU7RUFBRSxPQUFPRCxPQUFPLENBQUNDLEdBQUcsQ0FBQztBQUFFO0FBRXpYSyw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGSCx3REFBdUQ7RUFDckRJLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxHQUFHLEVBQUUsU0FBU0EsR0FBR0EsQ0FBQSxFQUFHO0lBQ2xCLE9BQU9DLGtCQUFrQixDQUFDQyxvQkFBb0I7RUFDaEQ7QUFDRixDQUFDLEVBQUM7QUFDRkwsa0JBQWtCLEdBQUcsS0FBSyxDQUFDO0FBRTNCLElBQUlJLGtCQUFrQixHQUFHRSx1QkFBdUIsQ0FBQ0MsbUJBQU8sQ0FBQyw2RkFBcUIsQ0FBQyxDQUFDO0FBRWhGLFNBQVNDLHdCQUF3QkEsQ0FBQSxFQUFHO0VBQUUsSUFBSSxPQUFPQyxPQUFPLEtBQUssVUFBVSxFQUFFLE9BQU8sSUFBSTtFQUFFLElBQUlDLEtBQUssR0FBRyxJQUFJRCxPQUFPLENBQUMsQ0FBQztFQUFFRCx3QkFBd0IsR0FBRyxTQUFTQSx3QkFBd0JBLENBQUEsRUFBRztJQUFFLE9BQU9FLEtBQUs7RUFBRSxDQUFDO0VBQUUsT0FBT0EsS0FBSztBQUFFO0FBRWpOLFNBQVNKLHVCQUF1QkEsQ0FBQ2IsR0FBRyxFQUFFO0VBQUUsSUFBSUEsR0FBRyxJQUFJQSxHQUFHLENBQUNrQixVQUFVLEVBQUU7SUFBRSxPQUFPbEIsR0FBRztFQUFFO0VBQUUsSUFBSUEsR0FBRyxLQUFLLElBQUksSUFBSUQsT0FBTyxDQUFDQyxHQUFHLENBQUMsS0FBSyxRQUFRLElBQUksT0FBT0EsR0FBRyxLQUFLLFVBQVUsRUFBRTtJQUFFLE9BQU87TUFBRSxTQUFTLEVBQUVBO0lBQUksQ0FBQztFQUFFO0VBQUUsSUFBSWlCLEtBQUssR0FBR0Ysd0JBQXdCLENBQUMsQ0FBQztFQUFFLElBQUlFLEtBQUssSUFBSUEsS0FBSyxDQUFDRSxHQUFHLENBQUNuQixHQUFHLENBQUMsRUFBRTtJQUFFLE9BQU9pQixLQUFLLENBQUNQLEdBQUcsQ0FBQ1YsR0FBRyxDQUFDO0VBQUU7RUFBRSxJQUFJb0IsTUFBTSxHQUFHLENBQUMsQ0FBQztFQUFFLElBQUlDLHFCQUFxQixHQUFHaEIsTUFBTSxDQUFDQyxjQUFjLElBQUlELE1BQU0sQ0FBQ2lCLHdCQUF3QjtFQUFFLEtBQUssSUFBSUMsR0FBRyxJQUFJdkIsR0FBRyxFQUFFO0lBQUUsSUFBSUssTUFBTSxDQUFDRCxTQUFTLENBQUNvQixjQUFjLENBQUNDLElBQUksQ0FBQ3pCLEdBQUcsRUFBRXVCLEdBQUcsQ0FBQyxFQUFFO01BQUUsSUFBSUcsSUFBSSxHQUFHTCxxQkFBcUIsR0FBR2hCLE1BQU0sQ0FBQ2lCLHdCQUF3QixDQUFDdEIsR0FBRyxFQUFFdUIsR0FBRyxDQUFDLEdBQUcsSUFBSTtNQUFFLElBQUlHLElBQUksS0FBS0EsSUFBSSxDQUFDaEIsR0FBRyxJQUFJZ0IsSUFBSSxDQUFDQyxHQUFHLENBQUMsRUFBRTtRQUFFdEIsTUFBTSxDQUFDQyxjQUFjLENBQUNjLE1BQU0sRUFBRUcsR0FBRyxFQUFFRyxJQUFJLENBQUM7TUFBRSxDQUFDLE1BQU07UUFBRU4sTUFBTSxDQUFDRyxHQUFHLENBQUMsR0FBR3ZCLEdBQUcsQ0FBQ3VCLEdBQUcsQ0FBQztNQUFFO0lBQUU7RUFBRTtFQUFFSCxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUdwQixHQUFHO0VBQUUsSUFBSWlCLEtBQUssRUFBRTtJQUFFQSxLQUFLLENBQUNVLEdBQUcsQ0FBQzNCLEdBQUcsRUFBRW9CLE1BQU0sQ0FBQztFQUFFO0VBQUUsT0FBT0EsTUFBTTtBQUFFO0FBRTd1QixJQUFJUSxRQUFRLEdBQUdqQixrQkFBa0IsQ0FBQyxTQUFTLENBQUM7QUFDNUNKLGtCQUFrQixHQUFHcUIsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9pbmRleC5qcz9mNWU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ1c2VTcGVlY2hSZWNvZ25pdGlvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfU3BlZWNoUmVjb2duaXRpb24udXNlU3BlZWNoUmVjb2duaXRpb247XG4gIH1cbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfU3BlZWNoUmVjb2duaXRpb24gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9TcGVlY2hSZWNvZ25pdGlvblwiKSk7XG5cbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGUgPSBuZXcgV2Vha01hcCgpOyBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7IHJldHVybiBjYWNoZTsgfTsgcmV0dXJuIGNhY2hlOyB9XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCBfdHlwZW9mKG9iaikgIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmpbXCJkZWZhdWx0XCJdID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9XG5cbnZhciBfZGVmYXVsdCA9IF9TcGVlY2hSZWNvZ25pdGlvbltcImRlZmF1bHRcIl07XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwib2JqIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9TcGVlY2hSZWNvZ25pdGlvbiIsInVzZVNwZWVjaFJlY29nbml0aW9uIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiV2Vha01hcCIsImNhY2hlIiwiX19lc01vZHVsZSIsImhhcyIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/isAndroid.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/isAndroid.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _default = function _default() {\n  return /(android)/i.test(typeof navigator !== 'undefined' ? navigator.userAgent : '');\n};\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9pc0FuZHJvaWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFrQixHQUFHLEtBQUssQ0FBQztBQUUzQixJQUFJRSxRQUFRLEdBQUcsU0FBU0EsUUFBUUEsQ0FBQSxFQUFHO0VBQ2pDLE9BQU8sWUFBWSxDQUFDQyxJQUFJLENBQUMsT0FBT0MsU0FBUyxLQUFLLFdBQVcsR0FBR0EsU0FBUyxDQUFDQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBQ3ZGLENBQUM7QUFFREwsa0JBQWtCLEdBQUdFLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXNwZWVjaC1yZWNvZ25pdGlvbi9saWIvaXNBbmRyb2lkLmpzPzJlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9kZWZhdWx0ID0gZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gIHJldHVybiAvKGFuZHJvaWQpL2kudGVzdCh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyA/IG5hdmlnYXRvci51c2VyQWdlbnQgOiAnJyk7XG59O1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9kZWZhdWx0IiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/isAndroid.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/reducers.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/reducers.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.transcriptReducer = void 0;\nvar _constants = __webpack_require__(/*! ./constants */ \"./node_modules/react-speech-recognition/lib/constants.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/react-speech-recognition/lib/utils.js\");\nvar transcriptReducer = function transcriptReducer(state, action) {\n  switch (action.type) {\n    case _constants.CLEAR_TRANSCRIPT:\n      return {\n        interimTranscript: '',\n        finalTranscript: ''\n      };\n    case _constants.APPEND_TRANSCRIPT:\n      return {\n        interimTranscript: action.payload.interimTranscript,\n        finalTranscript: (0, _utils.concatTranscripts)(state.finalTranscript, action.payload.finalTranscript)\n      };\n    default:\n      throw new Error();\n  }\n};\nexports.transcriptReducer = transcriptReducer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtc3BlZWNoLXJlY29nbml0aW9uL2xpYi9yZWR1Y2Vycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQseUJBQXlCLEdBQUcsS0FBSyxDQUFDO0FBRWxDLElBQUlHLFVBQVUsR0FBR0MsbUJBQU8sQ0FBQyw2RUFBYSxDQUFDO0FBRXZDLElBQUlDLE1BQU0sR0FBR0QsbUJBQU8sQ0FBQyxxRUFBUyxDQUFDO0FBRS9CLElBQUlGLGlCQUFpQixHQUFHLFNBQVNBLGlCQUFpQkEsQ0FBQ0ksS0FBSyxFQUFFQyxNQUFNLEVBQUU7RUFDaEUsUUFBUUEsTUFBTSxDQUFDQyxJQUFJO0lBQ2pCLEtBQUtMLFVBQVUsQ0FBQ00sZ0JBQWdCO01BQzlCLE9BQU87UUFDTEMsaUJBQWlCLEVBQUUsRUFBRTtRQUNyQkMsZUFBZSxFQUFFO01BQ25CLENBQUM7SUFFSCxLQUFLUixVQUFVLENBQUNTLGlCQUFpQjtNQUMvQixPQUFPO1FBQ0xGLGlCQUFpQixFQUFFSCxNQUFNLENBQUNNLE9BQU8sQ0FBQ0gsaUJBQWlCO1FBQ25EQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLEVBQUVOLE1BQU0sQ0FBQ1MsaUJBQWlCLEVBQUVSLEtBQUssQ0FBQ0ssZUFBZSxFQUFFSixNQUFNLENBQUNNLE9BQU8sQ0FBQ0YsZUFBZTtNQUN0RyxDQUFDO0lBRUg7TUFDRSxNQUFNLElBQUlJLEtBQUssQ0FBQyxDQUFDO0VBQ3JCO0FBQ0YsQ0FBQztBQUVEZix5QkFBeUIsR0FBR0UsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zcGVlY2gtcmVjb2duaXRpb24vbGliL3JlZHVjZXJzLmpzPzJlNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnRyYW5zY3JpcHRSZWR1Y2VyID0gdm9pZCAwO1xuXG52YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuXG52YXIgdHJhbnNjcmlwdFJlZHVjZXIgPSBmdW5jdGlvbiB0cmFuc2NyaXB0UmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIF9jb25zdGFudHMuQ0xFQVJfVFJBTlNDUklQVDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGludGVyaW1UcmFuc2NyaXB0OiAnJyxcbiAgICAgICAgZmluYWxUcmFuc2NyaXB0OiAnJ1xuICAgICAgfTtcblxuICAgIGNhc2UgX2NvbnN0YW50cy5BUFBFTkRfVFJBTlNDUklQVDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGludGVyaW1UcmFuc2NyaXB0OiBhY3Rpb24ucGF5bG9hZC5pbnRlcmltVHJhbnNjcmlwdCxcbiAgICAgICAgZmluYWxUcmFuc2NyaXB0OiAoMCwgX3V0aWxzLmNvbmNhdFRyYW5zY3JpcHRzKShzdGF0ZS5maW5hbFRyYW5zY3JpcHQsIGFjdGlvbi5wYXlsb2FkLmZpbmFsVHJhbnNjcmlwdClcbiAgICAgIH07XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gIH1cbn07XG5cbmV4cG9ydHMudHJhbnNjcmlwdFJlZHVjZXIgPSB0cmFuc2NyaXB0UmVkdWNlcjsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0cmFuc2NyaXB0UmVkdWNlciIsIl9jb25zdGFudHMiLCJyZXF1aXJlIiwiX3V0aWxzIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiQ0xFQVJfVFJBTlNDUklQVCIsImludGVyaW1UcmFuc2NyaXB0IiwiZmluYWxUcmFuc2NyaXB0IiwiQVBQRU5EX1RSQU5TQ1JJUFQiLCJwYXlsb2FkIiwiY29uY2F0VHJhbnNjcmlwdHMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/reducers.js\n"));

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/utils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.browserSupportsPolyfills = exports.compareTwoStringsUsingDiceCoefficient = exports.commandToRegExp = exports.concatTranscripts = exports.debounce = void 0;\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\nexports.debounce = debounce;\nvar concatTranscripts = function concatTranscripts() {\n  for (var _len = arguments.length, transcriptParts = new Array(_len), _key = 0; _key < _len; _key++) {\n    transcriptParts[_key] = arguments[_key];\n  }\n  return transcriptParts.map(function (t) {\n    return t.trim();\n  }).join(' ').trim();\n}; // The command matching code is a modified version of Backbone.Router by Jeremy Ashkenas, under the MIT license.\n\nexports.concatTranscripts = concatTranscripts;\nvar optionalParam = /\\s*\\((.*?)\\)\\s*/g;\nvar optionalRegex = /(\\(\\?:[^)]+\\))\\?/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*/g;\nvar escapeRegExp = /[-{}[\\]+?.,\\\\^$|#]/g;\nvar commandToRegExp = function commandToRegExp(command) {\n  if (command instanceof RegExp) {\n    return new RegExp(command.source, 'i');\n  }\n  command = command.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n    return optional ? match : '([^\\\\s]+)';\n  }).replace(splatParam, '(.*?)').replace(optionalRegex, '\\\\s*$1?\\\\s*');\n  return new RegExp('^' + command + '$', 'i');\n}; // this is from https://github.com/aceakash/string-similarity\n\nexports.commandToRegExp = commandToRegExp;\nvar compareTwoStringsUsingDiceCoefficient = function compareTwoStringsUsingDiceCoefficient(first, second) {\n  first = first.replace(/\\s+/g, '').toLowerCase();\n  second = second.replace(/\\s+/g, '').toLowerCase();\n  if (!first.length && !second.length) return 1; // if both are empty strings\n\n  if (!first.length || !second.length) return 0; // if only one is empty string\n\n  if (first === second) return 1; // identical\n\n  if (first.length === 1 && second.length === 1) return 0; // both are 1-letter strings\n\n  if (first.length < 2 || second.length < 2) return 0; // if either is a 1-letter string\n\n  var firstBigrams = new Map();\n  for (var i = 0; i < first.length - 1; i++) {\n    var bigram = first.substring(i, i + 2);\n    var count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) + 1 : 1;\n    firstBigrams.set(bigram, count);\n  }\n  var intersectionSize = 0;\n  for (var _i = 0; _i < second.length - 1; _i++) {\n    var _bigram = second.substring(_i, _i + 2);\n    var _count = firstBigrams.has(_bigram) ? firstBigrams.get(_bigram) : 0;\n    if (_count > 0) {\n      firstBigrams.set(_bigram, _count - 1);\n      intersectionSize++;\n    }\n  }\n  return 2.0 * intersectionSize / (first.length + second.length - 2);\n};\nexports.compareTwoStringsUsingDiceCoefficient = compareTwoStringsUsingDiceCoefficient;\nvar browserSupportsPolyfills = function browserSupportsPolyfills() {\n  return typeof window !== 'undefined' && window.navigator !== undefined && window.navigator.mediaDevices !== undefined && window.navigator.mediaDevices.getUserMedia !== undefined && (window.AudioContext !== undefined || window.webkitAudioContext !== undefined);\n};\nexports.browserSupportsPolyfills = browserSupportsPolyfills;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-speech-recognition/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) {\n    obj[key] = desc.value;\n  };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    });\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: true\n  });\n  defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: true\n  });\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\");\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction ||\n    // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n    var previousPromise;\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise =\n      // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,\n      // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", {\n      value: enqueue\n    });\n  }\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n      context.method = method;\n      context.arg = arg;\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n    var info = record.arg;\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n    this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n  exports.keys = function (val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n            next.value = undefined;\n            next.done = true;\n            return next;\n          };\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return {\n      next: doneResult\n    };\n  }\n  exports.values = values;\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n        return !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n}(\n// If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : 0);\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=E%3A%5CAcademics%5CThird%20Year%5CSemester%202%5CCP192%5CDemo%5Ccollaborative-texteditor%5Cfrontend%5Csrc%5Cpages%5Croom.tsx&page=%2Froom!":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=E%3A%5CAcademics%5CThird%20Year%5CSemester%202%5CCP192%5CDemo%5Ccollaborative-texteditor%5Cfrontend%5Csrc%5Cpages%5Croom.tsx&page=%2Froom! ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/room\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/room.tsx */ \"./src/pages/room.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/room\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1FJTNBJTVDQWNhZGVtaWNzJTVDVGhpcmQlMjBZZWFyJTVDU2VtZXN0ZXIlMjAyJTVDQ1AxOTIlNUNEZW1vJTVDY29sbGFib3JhdGl2ZS10ZXh0ZWRpdG9yJTVDZnJvbnRlbmQlNUNzcmMlNUNwYWdlcyU1Q3Jvb20udHN4JnBhZ2U9JTJGcm9vbSEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxrREFBc0I7QUFDN0M7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzFlMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9yb29tXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9zcmMvcGFnZXMvcm9vbS50c3hcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL3Jvb21cIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=E%3A%5CAcademics%5CThird%20Year%5CSemester%202%5CCP192%5CDemo%5Ccollaborative-texteditor%5Cfrontend%5Csrc%5Cpages%5Croom.tsx&page=%2Froom!\n"));

/***/ }),

/***/ "./src/components/Content.tsx":
/*!************************************!*\
  !*** ./src/components/Content.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Content; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Latex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Latex */ \"./src/components/Latex.tsx\");\n/* harmony import */ var react_speech_recognition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-speech-recognition */ \"./node_modules/react-speech-recognition/lib/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction Content(param) {\n    let { text, setText, socket, router, latex, role } = param;\n    _s();\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [recording, setRecording] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const { transcript, resetTranscript } = (0,react_speech_recognition__WEBPACK_IMPORTED_MODULE_4__.useSpeechRecognition)();\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (transcript) {\n            setText((prev)=>prev + \" \" + transcript);\n            resetTranscript();\n        }\n    }, [\n        transcript\n    ]);\n    const startRecording = ()=>{\n        setRecording(true);\n        react_speech_recognition__WEBPACK_IMPORTED_MODULE_4__[\"default\"].startListening({\n            continuous: true\n        });\n    };\n    const stopRecording = ()=>{\n        setRecording(false);\n        react_speech_recognition__WEBPACK_IMPORTED_MODULE_4__[\"default\"].stopListening();\n        resetTranscript();\n    };\n    // Debounced socket emission\n    const debouncedEmitText = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((()=>{\n        let timeout;\n        return (newText)=>{\n            clearTimeout(timeout);\n            timeout = setTimeout(()=>{\n                socket.emit(\"send-text\", newText, router.asPath.split(\"#\")[1]);\n            }, 1000);\n        };\n    })(), [\n        socket,\n        router\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: \"h-full w-full p-4 bg-white shadow-lg rounded-lg\",\n        children: [\n            role === \"editor\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                        className: \"w-full h-64 border border-gray-300 rounded-lg p-2 text-lg focus:outline-none focus:ring-2 focus:ring-blue-400\",\n                        value: text,\n                        onChange: (e)=>{\n                            setText(e.target.value);\n                            debouncedEmitText(e.target.value);\n                        },\n                        placeholder: \"Start typing here...\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Content.tsx\",\n                        lineNumber: 56,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: recording ? stopRecording : startRecording,\n                        className: \"mt-4 px-4 py-2 rounded text-white \".concat(recording ? \"bg-red-500\" : \"bg-blue-500\", \" hover:opacity-90 transition-all\"),\n                        children: recording ? \"Stop Recording\" : \"Start Recording\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Content.tsx\",\n                        lineNumber: 65,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Latex__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                latex: latex\n            }, void 0, false, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Content.tsx\",\n                lineNumber: 73,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Content.tsx\",\n        lineNumber: 53,\n        columnNumber: 5\n    }, this);\n}\n_s(Content, \"JS8jfWYsNTLdGWQGq4zMLWr5G8o=\", false, function() {\n    return [\n        react_speech_recognition__WEBPACK_IMPORTED_MODULE_4__.useSpeechRecognition\n    ];\n});\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db250ZW50LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNzRDtBQUN0RDtBQUM4QztBQVdwRSxTQUFTTyxRQUFRLEtBQXFEO1FBQXJELEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQVMsR0FBckQ7O0lBQzlCLE1BQU1DLE1BQU1iLDZDQUFNQSxDQUFDO0lBQ25CLE1BQU0sQ0FBQ2MsV0FBV0MsYUFBYSxHQUFHZCwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNLEVBQUVlLFVBQVUsRUFBRUMsZUFBZSxFQUFFLEdBQUdaLDhFQUFvQkE7SUFFNUROLGdEQUFTQSxDQUFDO1FBQ1IsSUFBSWlCLFlBQVk7WUFDZFIsUUFBUSxDQUFDVSxPQUFTQSxPQUFPLE1BQU1GO1lBQy9CQztRQUNGO0lBQ0YsR0FBRztRQUFDRDtLQUFXO0lBRWYsTUFBTUcsaUJBQWlCO1FBQ3JCSixhQUFhO1FBQ2JYLCtFQUFnQyxDQUFDO1lBQUVpQixZQUFZO1FBQUs7SUFDdEQ7SUFFQSxNQUFNQyxnQkFBZ0I7UUFDcEJQLGFBQWE7UUFDYlgsOEVBQStCO1FBQy9CYTtJQUNGO0lBRUEsNEJBQTRCO0lBQzVCLE1BQU1PLG9CQUFvQnRCLGtEQUFXQSxDQUNuQyxDQUFDO1FBQ0MsSUFBSXVCO1FBQ0osT0FBTyxDQUFDQztZQUNOQyxhQUFhRjtZQUNiQSxVQUFVRyxXQUFXO2dCQUNuQm5CLE9BQU9vQixJQUFJLENBQUMsYUFBYUgsU0FBU2hCLE9BQU9vQixNQUFNLENBQUNDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMvRCxHQUFHO1FBQ0w7SUFDRixNQUNBO1FBQUN0QjtRQUFRQztLQUFPO0lBR2xCLHFCQUNFLDhEQUFDc0I7UUFBSW5CLEtBQUtBO1FBQUtvQixXQUFVOztZQUN0QnJCLFNBQVMsMEJBQ1I7O2tDQUNFLDhEQUFDc0I7d0JBQ0NELFdBQVU7d0JBQ1ZFLE9BQU81Qjt3QkFDUDZCLFVBQVUsQ0FBQ0M7NEJBQ1Q3QixRQUFRNkIsRUFBRUMsTUFBTSxDQUFDSCxLQUFLOzRCQUN0Qlgsa0JBQWtCYSxFQUFFQyxNQUFNLENBQUNILEtBQUs7d0JBQ2xDO3dCQUNBSSxhQUFZOzs7Ozs7a0NBRWQsOERBQUNDO3dCQUNDQyxTQUFTM0IsWUFBWVEsZ0JBQWdCSDt3QkFDckNjLFdBQVcscUNBQThFLE9BQXpDbkIsWUFBWSxlQUFlLGVBQWM7a0NBRXhGQSxZQUFZLG1CQUFtQjs7Ozs7Ozs7MEJBSXRDLDhEQUFDWCw4Q0FBY0E7Z0JBQUNRLE9BQU9BOzs7Ozs7Ozs7Ozs7QUFHN0I7R0E3RHdCTDs7UUFHa0JELDBFQUFvQkE7OztLQUh0Q0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQ29udGVudC50c3g/MzkzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSc7XHJcbmltcG9ydCB7IERpc3BhdGNoLCBTZXRTdGF0ZUFjdGlvbiwgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IExhdGV4RGlzcGxheWVyIGZyb20gJy4vTGF0ZXgnO1xyXG5pbXBvcnQgU3BlZWNoUmVjb2duaXRpb24sIHsgdXNlU3BlZWNoUmVjb2duaXRpb24gfSBmcm9tICdyZWFjdC1zcGVlY2gtcmVjb2duaXRpb24nO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIHtcclxuICB0ZXh0OiBzdHJpbmc7XHJcbiAgc2V0VGV4dDogRGlzcGF0Y2g8U2V0U3RhdGVBY3Rpb248c3RyaW5nPj47XHJcbiAgc29ja2V0OiBhbnk7XHJcbiAgcm91dGVyOiBhbnk7XHJcbiAgbGF0ZXg6IHN0cmluZztcclxuICByb2xlOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnRlbnQoeyB0ZXh0LCBzZXRUZXh0LCBzb2NrZXQsIHJvdXRlciwgbGF0ZXgsIHJvbGUgfTogUHJvcHMpIHtcclxuICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XHJcbiAgY29uc3QgW3JlY29yZGluZywgc2V0UmVjb3JkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCB7IHRyYW5zY3JpcHQsIHJlc2V0VHJhbnNjcmlwdCB9ID0gdXNlU3BlZWNoUmVjb2duaXRpb24oKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICh0cmFuc2NyaXB0KSB7XHJcbiAgICAgIHNldFRleHQoKHByZXYpID0+IHByZXYgKyAnICcgKyB0cmFuc2NyaXB0KTtcclxuICAgICAgcmVzZXRUcmFuc2NyaXB0KCk7XHJcbiAgICB9XHJcbiAgfSwgW3RyYW5zY3JpcHRdKTtcclxuXHJcbiAgY29uc3Qgc3RhcnRSZWNvcmRpbmcgPSAoKSA9PiB7XHJcbiAgICBzZXRSZWNvcmRpbmcodHJ1ZSk7XHJcbiAgICBTcGVlY2hSZWNvZ25pdGlvbi5zdGFydExpc3RlbmluZyh7IGNvbnRpbnVvdXM6IHRydWUgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgc3RvcFJlY29yZGluZyA9ICgpID0+IHtcclxuICAgIHNldFJlY29yZGluZyhmYWxzZSk7XHJcbiAgICBTcGVlY2hSZWNvZ25pdGlvbi5zdG9wTGlzdGVuaW5nKCk7XHJcbiAgICByZXNldFRyYW5zY3JpcHQoKTtcclxuICB9O1xyXG5cclxuICAvLyBEZWJvdW5jZWQgc29ja2V0IGVtaXNzaW9uXHJcbiAgY29uc3QgZGVib3VuY2VkRW1pdFRleHQgPSB1c2VDYWxsYmFjayhcclxuICAgICgoKSA9PiB7XHJcbiAgICAgIGxldCB0aW1lb3V0OiBOb2RlSlMuVGltZW91dDtcclxuICAgICAgcmV0dXJuIChuZXdUZXh0OiBzdHJpbmcpID0+IHtcclxuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgc29ja2V0LmVtaXQoJ3NlbmQtdGV4dCcsIG5ld1RleHQsIHJvdXRlci5hc1BhdGguc3BsaXQoJyMnKVsxXSk7XHJcbiAgICAgICAgfSwgMTAwMCk7XHJcbiAgICAgIH07XHJcbiAgICB9KSgpLFxyXG4gICAgW3NvY2tldCwgcm91dGVyXVxyXG4gICk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9XCJoLWZ1bGwgdy1mdWxsIHAtNCBiZy13aGl0ZSBzaGFkb3ctbGcgcm91bmRlZC1sZ1wiPlxyXG4gICAgICB7cm9sZSA9PT0gJ2VkaXRvcicgJiYgKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8dGV4dGFyZWFcclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGgtNjQgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkLWxnIHAtMiB0ZXh0LWxnIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTQwMFwiXHJcbiAgICAgICAgICAgIHZhbHVlPXt0ZXh0fVxyXG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcclxuICAgICAgICAgICAgICBzZXRUZXh0KGUudGFyZ2V0LnZhbHVlKTtcclxuICAgICAgICAgICAgICBkZWJvdW5jZWRFbWl0VGV4dChlLnRhcmdldC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU3RhcnQgdHlwaW5nIGhlcmUuLi5cIlxyXG4gICAgICAgICAgPjwvdGV4dGFyZWE+XHJcbiAgICAgICAgICA8YnV0dG9uIFxyXG4gICAgICAgICAgICBvbkNsaWNrPXtyZWNvcmRpbmcgPyBzdG9wUmVjb3JkaW5nIDogc3RhcnRSZWNvcmRpbmd9IFxyXG4gICAgICAgICAgICBjbGFzc05hbWU9e2BtdC00IHB4LTQgcHktMiByb3VuZGVkIHRleHQtd2hpdGUgJHtyZWNvcmRpbmcgPyAnYmctcmVkLTUwMCcgOiAnYmctYmx1ZS01MDAnfSBob3ZlcjpvcGFjaXR5LTkwIHRyYW5zaXRpb24tYWxsYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge3JlY29yZGluZyA/ICdTdG9wIFJlY29yZGluZycgOiAnU3RhcnQgUmVjb3JkaW5nJ31cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvPlxyXG4gICAgICApfVxyXG4gICAgICA8TGF0ZXhEaXNwbGF5ZXIgbGF0ZXg9e2xhdGV4fSAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsIkxhdGV4RGlzcGxheWVyIiwiU3BlZWNoUmVjb2duaXRpb24iLCJ1c2VTcGVlY2hSZWNvZ25pdGlvbiIsIkNvbnRlbnQiLCJ0ZXh0Iiwic2V0VGV4dCIsInNvY2tldCIsInJvdXRlciIsImxhdGV4Iiwicm9sZSIsInJlZiIsInJlY29yZGluZyIsInNldFJlY29yZGluZyIsInRyYW5zY3JpcHQiLCJyZXNldFRyYW5zY3JpcHQiLCJwcmV2Iiwic3RhcnRSZWNvcmRpbmciLCJzdGFydExpc3RlbmluZyIsImNvbnRpbnVvdXMiLCJzdG9wUmVjb3JkaW5nIiwic3RvcExpc3RlbmluZyIsImRlYm91bmNlZEVtaXRUZXh0IiwidGltZW91dCIsIm5ld1RleHQiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZW1pdCIsImFzUGF0aCIsInNwbGl0IiwiZGl2IiwiY2xhc3NOYW1lIiwidGV4dGFyZWEiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZSIsInRhcmdldCIsInBsYWNlaG9sZGVyIiwiYnV0dG9uIiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Content.tsx\n"));

/***/ }),

/***/ "./src/components/Footer.tsx":
/*!***********************************!*\
  !*** ./src/components/Footer.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Footer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Footer() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"py-1 flex flex-col justify-center bg-gray-100 items-center w-full\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: \"text-sm text-[#363636] font-medium\",\n            children: \"Alaa\"\n        }, void 0, false, {\n            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Footer.tsx\",\n            lineNumber: 4,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Footer.tsx\",\n        lineNumber: 3,\n        columnNumber: 5\n    }, this);\n}\n_c = Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Gb290ZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZSxTQUFTQTtJQUN0QixxQkFDRSw4REFBQ0M7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0M7WUFBRUQsV0FBVTtzQkFBcUM7Ozs7Ozs7Ozs7O0FBS3hEO0tBUndCRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9Gb290ZXIudHN4PzM1MWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRm9vdGVyKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInB5LTEgZmxleCBmbGV4LWNvbCBqdXN0aWZ5LWNlbnRlciBiZy1ncmF5LTEwMCBpdGVtcy1jZW50ZXIgdy1mdWxsXCI+XHJcbiAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1bIzM2MzYzNl0gZm9udC1tZWRpdW1cIj5cclxuICAgICAgICBBbGFhXHJcbiAgICAgIDwvcD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIkZvb3RlciIsImRpdiIsImNsYXNzTmFtZSIsInAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Footer.tsx\n"));

/***/ }),

/***/ "./src/components/Header.tsx":
/*!***********************************!*\
  !*** ./src/components/Header.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Header; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cookies-next */ \"./node_modules/cookies-next/lib/index.js\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cookies_next__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$();\n\n\n\nfunction Header() {\n    _s();\n    const [username, setUsername] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _getCookie;\n        setUsername(((_getCookie = (0,cookies_next__WEBPACK_IMPORTED_MODULE_2__.getCookie)(\"username\")) === null || _getCookie === void 0 ? void 0 : _getCookie.toString()) || null);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-gray-200 py-2 flex flex-col justify-center items-center\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-sm font-semibold text-[#363636]\",\n                children: \"Latex Whiteboarder\"\n            }, void 0, false, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n                lineNumber: 14,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-xs text-[#363636]\",\n                children: [\n                    \"Welcome, \",\n                    username\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed top-2 left-2 flex items-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: \"px-4 py-2 bg-blue-500 text-white rounded flex items-center\",\n                    onClick: ()=>router.push(\"/\"),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-5 w-5 mr-2\",\n                            viewBox: \"0 0 20 20\",\n                            fill: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M10 20V12H6v8H2V10H0L10 0l10 10h-2v10h-4v-8h-4v8z\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n                                lineNumber: 29,\n                                columnNumber: 9\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n                            lineNumber: 23,\n                            columnNumber: 11\n                        }, this),\n                        \"Go to Dashboard\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Header.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, this);\n}\n_s(Header, \"XxCxb2wQQJx5Hy1BuqkJi3eK74k=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9IZWFkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0g7QUFDRDtBQUV6QixTQUFTSTs7SUFDdEIsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdMLCtDQUFRQSxDQUFnQjtJQUN4RCxNQUFNTSxTQUFTSixzREFBU0E7SUFDeEJILGdEQUFTQSxDQUFDO1lBQ0lFO1FBQVpJLFlBQVlKLEVBQUFBLGFBQUFBLHVEQUFTQSxDQUFDLHlCQUFWQSxpQ0FBQUEsV0FBdUJNLFFBQVEsT0FBTTtJQUNuRCxHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ0M7UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNDO2dCQUFFRCxXQUFVOzBCQUF1Qzs7Ozs7OzBCQUdwRCw4REFBQ0M7Z0JBQUVELFdBQVU7O29CQUF5QjtvQkFBVUw7Ozs7Ozs7MEJBQ2hELDhEQUFDSTtnQkFBSUMsV0FBVTswQkFDYiw0RUFBQ0U7b0JBQ0NGLFdBQVU7b0JBQ1ZHLFNBQVMsSUFBTU4sT0FBT08sSUFBSSxDQUFDOztzQ0FFM0IsOERBQUNDOzRCQUNIQyxPQUFNOzRCQUNOTixXQUFVOzRCQUNWTyxTQUFROzRCQUNSQyxNQUFLO3NDQUVMLDRFQUFDQztnQ0FBS0MsR0FBRTs7Ozs7Ozs7Ozs7d0JBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1oQjtHQS9Cd0JoQjs7UUFFUEQsa0RBQVNBOzs7S0FGRkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvSGVhZGVyLnRzeD9hNjk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgZ2V0Q29va2llIH0gZnJvbSBcImNvb2tpZXMtbmV4dFwiO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlcigpIHtcclxuICBjb25zdCBbdXNlcm5hbWUsIHNldFVzZXJuYW1lXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBzZXRVc2VybmFtZShnZXRDb29raWUoXCJ1c2VybmFtZVwiKT8udG9TdHJpbmcoKSB8fCBudWxsKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktMjAwIHB5LTIgZmxleCBmbGV4LWNvbCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXJcIj5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LXNlbWlib2xkIHRleHQtWyMzNjM2MzZdXCI+XHJcbiAgICAgIExhdGV4IFdoaXRlYm9hcmRlclxyXG4gICAgICA8L3A+XHJcbiAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1bIzM2MzYzNl1cIj5XZWxjb21lLCB7dXNlcm5hbWV9PC9wPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpeGVkIHRvcC0yIGxlZnQtMiBmbGV4IGl0ZW1zLWNlbnRlclwiPlxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiBiZy1ibHVlLTUwMCB0ZXh0LXdoaXRlIHJvdW5kZWQgZmxleCBpdGVtcy1jZW50ZXJcIlxyXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gcm91dGVyLnB1c2goJy8nKX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8c3ZnXHJcbiAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwiaC01IHctNSBtci0yXCJcclxuICAgICAgICB2aWV3Qm94PVwiMCAwIDIwIDIwXCJcclxuICAgICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcclxuICAgICAgICAgID5cclxuICAgICAgICA8cGF0aCBkPVwiTTEwIDIwVjEySDZ2OEgyVjEwSDBMMTAgMGwxMCAxMGgtMnYxMGgtNHYtOGgtNHY4elwiIC8+XHJcbiAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgIEdvIHRvIERhc2hib2FyZFxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiZ2V0Q29va2llIiwidXNlUm91dGVyIiwiSGVhZGVyIiwidXNlcm5hbWUiLCJzZXRVc2VybmFtZSIsInJvdXRlciIsInRvU3RyaW5nIiwiZGl2IiwiY2xhc3NOYW1lIiwicCIsImJ1dHRvbiIsIm9uQ2xpY2siLCJwdXNoIiwic3ZnIiwieG1sbnMiLCJ2aWV3Qm94IiwiZmlsbCIsInBhdGgiLCJkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Header.tsx\n"));

/***/ }),

/***/ "./src/components/Latex.tsx":
/*!**********************************!*\
  !*** ./src/components/Latex.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var better_react_mathjax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! better-react-mathjax */ \"./node_modules/better-react-mathjax/esm/index.js\");\n\n\n\nconst LatexDisplayer = (param)=>{\n    let { latex } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(better_react_mathjax__WEBPACK_IMPORTED_MODULE_2__.MathJaxContext, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(better_react_mathjax__WEBPACK_IMPORTED_MODULE_2__.MathJax, {\n            children: \"$$\".concat(latex, \"$$\")\n        }, void 0, false, {\n            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Latex.tsx\",\n            lineNumber: 11,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Latex.tsx\",\n        lineNumber: 10,\n        columnNumber: 7\n    }, undefined);\n};\n_c = LatexDisplayer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LatexDisplayer);\nvar _c;\n$RefreshReg$(_c, \"LatexDisplayer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9MYXRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQjtBQUNxQztBQU03RCxNQUFNRyxpQkFBZ0Q7UUFBQyxFQUFFQyxLQUFLLEVBQUU7SUFDOUQscUJBQ0UsOERBQUNGLGdFQUFjQTtrQkFDYiw0RUFBQ0QseURBQU9BO3NCQUFFLEtBQVcsT0FBTkcsT0FBTTs7Ozs7Ozs7Ozs7QUFHM0I7S0FOTUQ7QUFVUiwrREFBZUEsY0FBY0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9MYXRleC50c3g/YmYwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IE1hdGhKYXgsIE1hdGhKYXhDb250ZXh0IH0gZnJvbSBcImJldHRlci1yZWFjdC1tYXRoamF4XCI7XHJcblxyXG5pbnRlcmZhY2UgTGF0ZXhEaXNwbGF5ZXJQcm9wcyB7XHJcbiAgICBsYXRleDogc3RyaW5nO1xyXG4gIH1cclxuICBcclxuICBjb25zdCBMYXRleERpc3BsYXllcjogUmVhY3QuRkM8TGF0ZXhEaXNwbGF5ZXJQcm9wcz4gPSAoeyBsYXRleCB9KSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8TWF0aEpheENvbnRleHQ+XHJcbiAgICAgICAgPE1hdGhKYXg+e2AkJCR7bGF0ZXh9JCRgfTwvTWF0aEpheD5cclxuICAgICAgPC9NYXRoSmF4Q29udGV4dD5cclxuICAgICk7XHJcbiAgfTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTGF0ZXhEaXNwbGF5ZXI7Il0sIm5hbWVzIjpbIlJlYWN0IiwiTWF0aEpheCIsIk1hdGhKYXhDb250ZXh0IiwiTGF0ZXhEaXNwbGF5ZXIiLCJsYXRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Latex.tsx\n"));

/***/ }),

/***/ "./src/components/Sidebar.tsx":
/*!************************************!*\
  !*** ./src/components/Sidebar.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Sidebar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction Sidebar(param) {\n    let { connected, role } = param;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const [isEditor, setIsEditor] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n    const [username, setUsername] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(\"\");\n    const [accessRole, setAccessRole] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(\"viewer\");\n    const [editors, setEditors] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);\n    const [viewers, setViewers] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (role === \"editor\") {\n            setIsEditor(true);\n        } else {\n            setIsEditor(false);\n        }\n    }, [\n        role\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        const fetchRoomDetails = async ()=>{\n            const sessionId = router.asPath.split(\"#\")[1];\n            try {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(\"\".concat(\"http://localhost:5000\", \"/rooms/\").concat(sessionId), {\n                    withCredentials: true\n                });\n                const room = response.data;\n                setEditors(room.editors);\n                setViewers(room.viewers);\n            } catch (error) {\n                console.error(\"Error fetching room details:\", error);\n            }\n        };\n        fetchRoomDetails();\n    }, [\n        router.asPath\n    ]);\n    const handleAddUser = async (e)=>{\n        e.preventDefault();\n        const sessionId = router.asPath.split(\"#\")[1];\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(\"http://localhost:5000\", \"/rooms/\").concat(sessionId, \"/addUser\"), {\n                userId: username,\n                role: accessRole\n            }, {\n                withCredentials: true\n            });\n            if (response.data.error) {\n                alert(response.data.error);\n            } else {\n                alert(\"User added successfully\");\n                // Refresh the room details to update the lists\n                const roomResponse = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(\"\".concat(\"http://localhost:5000\", \"/rooms/\").concat(sessionId), {\n                    withCredentials: true\n                });\n                const room = roomResponse.data;\n                setEditors(room.editors);\n                setViewers(room.viewers);\n            }\n        } catch (error) {\n            console.error(\"Error adding user:\", error);\n        }\n    };\n    const handleRemoveUser = async (userId, role)=>{\n        const sessionId = router.asPath.split(\"#\")[1];\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(\"\".concat(\"http://localhost:5000\", \"/rooms/\").concat(sessionId, \"/removeUser\"), {\n                userId,\n                role\n            }, {\n                withCredentials: true\n            });\n            if (response.data.error) {\n                alert(response.data.error);\n            } else {\n                alert(\"User removed successfully\");\n                // Refresh the room details to update the lists\n                const roomResponse = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(\"\".concat(\"http://localhost:5000\", \"/rooms/\").concat(sessionId), {\n                    withCredentials: true\n                });\n                const room = roomResponse.data;\n                setEditors(room.editors);\n                setViewers(room.viewers);\n            }\n        } catch (error) {\n            console.error(\"Error removing user:\", error);\n        }\n    };\n    const handleToggleRole = async (userId, currentRole)=>{\n        const newRole = currentRole == \"editor\" ? \"viewer\" : \"editor\";\n        await handleRemoveUser(userId, currentRole);\n        setUsername(userId);\n        setAccessRole(newRole);\n        await handleAddUser({\n            preventDefault: ()=>{}\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \" min-w-[100%] p-4 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 text-white flex flex-col rounded-lg shadow-lg\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-row space-x-3\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-[10px] w-[10px] my-auto rounded-full \" + (connected ? \"bg-[#00FF00]\" : \"bg-[#FF0000]\")\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 101,\n                        columnNumber: 9\n                    }, this),\n                    !connected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm my-auto font-medium\",\n                        children: \"Connecting...\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 108,\n                        columnNumber: 11\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm my-auto italic font-medium\",\n                        children: \"You are connected!\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 112,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                lineNumber: 100,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 flex flex-col w-full space-y-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-base font-semibold\",\n                        children: \"Share Link\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 118,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"border w-full rounded flex flex-row bg-white space-x-3 py-1.5 px-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                value: \"http://localhost:3000\".concat(router.asPath),\n                                className: \"w-full text-sm font-regular text-gray-600 focus:ring-0 focus:outline-none focus:border-none\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                lineNumber: 120,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    navigator.clipboard.writeText(\"http://localhost:3000\".concat(router.asPath));\n                                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"Copied to clipboard!\", {\n                                        className: \"text-sm text-[#363636] font-medium\"\n                                    });\n                                },\n                                className: \"my-auto h-full px-2 hover:bg-gray-300 rounded bg-gray-200 text-[#363636] text-sm font-medium\",\n                                children: \"Copy\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                lineNumber: 124,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 119,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                lineNumber: 117,\n                columnNumber: 7\n            }, this),\n            isEditor && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleAddUser,\n                className: \"p-4 mt-4 bg-white rounded-lg shadow-md\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col space-y-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            placeholder: \"Username\",\n                            value: username,\n                            onChange: (e)=>setUsername(e.target.value),\n                            className: \"p-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 text-black\"\n                        }, void 0, false, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                            lineNumber: 142,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                            value: accessRole,\n                            onChange: (e)=>setAccessRole(e.target.value),\n                            className: \"p-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 text-black\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: \"viewer\",\n                                    children: \"Viewer\"\n                                }, void 0, false, {\n                                    fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                    lineNumber: 150,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: \"editor\",\n                                    children: \"Editor\"\n                                }, void 0, false, {\n                                    fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                    lineNumber: 151,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                            lineNumber: 149,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"submit\",\n                            className: \"p-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n                            children: \"Add User\"\n                        }, void 0, false, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                            lineNumber: 153,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                    lineNumber: 141,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                lineNumber: 140,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-base font-semibold\",\n                        children: \"Editors\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 160,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"list-disc list-inside\",\n                        children: editors.map((editor)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: [\n                                    editor,\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleRemoveUser(editor, \"editor\"),\n                                        className: \"ml-2 p-1 bg-red-500 text-white rounded hover:bg-red-600\",\n                                        children: \"Remove\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                        lineNumber: 165,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleToggleRole(editor, \"editor\"),\n                                        className: \"ml-2 p-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\",\n                                        children: \"Toggle to Viewer\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                        lineNumber: 168,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, editor, true, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                lineNumber: 163,\n                                columnNumber: 13\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 161,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                lineNumber: 159,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-base font-semibold\",\n                        children: \"Viewers\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 176,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"list-disc list-inside\",\n                        children: viewers.map((viewer)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: [\n                                    viewer,\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleRemoveUser(viewer, \"viewer\"),\n                                        className: \"ml-2 p-1 bg-red-500 text-white rounded hover:bg-red-600\",\n                                        children: \"Remove\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                        lineNumber: 181,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, viewer, true, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                                lineNumber: 179,\n                                columnNumber: 13\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                        lineNumber: 177,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n                lineNumber: 175,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\components\\\\Sidebar.tsx\",\n        lineNumber: 99,\n        columnNumber: 5\n    }, this);\n}\n_s(Sidebar, \"sSbd5Bp6U6LfvfsT6uhZU9IJONc=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter\n    ];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Sidebar.tsx\n"));

/***/ }),

/***/ "./src/pages/room.tsx":
/*!****************************!*\
  !*** ./src/pages/room.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_Header__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/Header */ \"./src/components/Header.tsx\");\n/* harmony import */ var _components_Footer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/Footer */ \"./src/components/Footer.tsx\");\n/* harmony import */ var _components_Sidebar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/Sidebar */ \"./src/components/Sidebar.tsx\");\n/* harmony import */ var _components_Content__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/Content */ \"./src/components/Content.tsx\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! cookies-next */ \"./node_modules/cookies-next/lib/index.js\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(cookies_next__WEBPACK_IMPORTED_MODULE_8__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction Home() {\n    _s();\n    const [connected, setConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [text, setText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [latex, setLatex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showSidebar, setShowSidebar] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_2__.io)(\"http://localhost:5000\", {\n        withCredentials: true\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (router.isReady) {\n            const sessionId = router.asPath.split(\"#\")[1];\n            socket.on(\"connect\", ()=>{\n                setConnected(true);\n                socket.emit(\"authenticate\");\n            });\n            socket.on(\"authenticated\", ()=>{\n                socket.emit(\"join-room\", String(sessionId));\n                fetchRole(sessionId);\n            });\n            socket.on(\"receive-text\", (latex)=>setLatex(latex));\n            socket.on(\"receive-original\", (text, username)=>{\n                if (username !== (0,cookies_next__WEBPACK_IMPORTED_MODULE_8__.getCookie)(\"username\")) setText(text);\n            });\n            socket.on(\"error\", (errorMessage)=>{\n                alert(errorMessage);\n                router.push(\"/\");\n            });\n        }\n    }, [\n        router.isReady\n    ]);\n    const fetchRole = async (roomId)=>{\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_9__[\"default\"].get(\"http://localhost:5000/rooms/\".concat(roomId, \"/role\"), {\n                withCredentials: true\n            });\n            setRole(response.data.role);\n        } catch (error) {\n            console.error(\"Error fetching role:\", error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col h-screen w-screen bg-gray-100\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Header__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-1 h-full w-full\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"transition-all duration-300 ease-in-out \".concat(showSidebar ? \"max-w-xs\" : \"max-w-0\", \" overflow-hidden\"),\n                        children: showSidebar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Sidebar__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            connected: connected,\n                            role: role\n                        }, void 0, false, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 27\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                        lineNumber: 66,\n                        columnNumber: 7\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setShowSidebar(!showSidebar),\n                        className: \"p-2 bg-gradient-to-r from-black via-gray-500 to-gray-500 text-white rounded-lg shadow-md hover:shadow-lg transition duration-300\",\n                        children: showSidebar ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-6 w-6\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M6 18L18 6M6 6l12 12\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                                lineNumber: 79,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                            lineNumber: 78,\n                            columnNumber: 13\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-6 w-6\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M12 4v16m8-8H4\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                                lineNumber: 83,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                            lineNumber: 82,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                        lineNumber: 73,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Content__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                        text: text,\n                        setText: setText,\n                        socket: socket,\n                        router: router,\n                        latex: latex,\n                        role: role\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                        lineNumber: 88,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                lineNumber: 65,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Footer__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n                lineNumber: 91,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Academics\\\\Third Year\\\\Semester 2\\\\CP192\\\\Demo\\\\collaborative-texteditor\\\\frontend\\\\src\\\\pages\\\\room.tsx\",\n        lineNumber: 63,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"TKyHNaXJS+PRHiTmzdMpG8DGhR8=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/room.tsx\n"));

/***/ }),

/***/ "./node_modules/@socket.io/component-emitter/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@socket.io/component-emitter/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: function() { return /* binding */ Emitter; }\n/* harmony export */ });\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = new Array(arguments.length - 1),\n    callbacks = this._callbacks['$' + event];\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@socket.io/component-emitter/index.mjs\n"));

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Axios: function() { return /* binding */ Axios; },\n/* harmony export */   AxiosError: function() { return /* binding */ AxiosError; },\n/* harmony export */   AxiosHeaders: function() { return /* binding */ AxiosHeaders; },\n/* harmony export */   Cancel: function() { return /* binding */ Cancel; },\n/* harmony export */   CancelToken: function() { return /* binding */ CancelToken; },\n/* harmony export */   CanceledError: function() { return /* binding */ CanceledError; },\n/* harmony export */   HttpStatusCode: function() { return /* binding */ HttpStatusCode; },\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; },\n/* harmony export */   all: function() { return /* binding */ all; },\n/* harmony export */   \"default\": function() { return /* reexport safe */ _lib_axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   formToJSON: function() { return /* binding */ formToJSON; },\n/* harmony export */   getAdapter: function() { return /* binding */ getAdapter; },\n/* harmony export */   isAxiosError: function() { return /* binding */ isAxiosError; },\n/* harmony export */   isCancel: function() { return /* binding */ isCancel; },\n/* harmony export */   mergeConfig: function() { return /* binding */ mergeConfig; },\n/* harmony export */   spread: function() { return /* binding */ spread; },\n/* harmony export */   toFormData: function() { return /* binding */ toFormData; }\n/* harmony export */ });\n/* harmony import */ var _lib_axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/axios.js */ \"./node_modules/axios/lib/axios.js\");\n\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = _lib_axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW1DOztBQUVuQztBQUNBO0FBQ0E7QUFDQSxNQUFNO0VBQ0pDLEtBQUs7RUFDTEMsVUFBVTtFQUNWQyxhQUFhO0VBQ2JDLFFBQVE7RUFDUkMsV0FBVztFQUNYQyxPQUFPO0VBQ1BDLEdBQUc7RUFDSEMsTUFBTTtFQUNOQyxZQUFZO0VBQ1pDLE1BQU07RUFDTkMsVUFBVTtFQUNWQyxZQUFZO0VBQ1pDLGNBQWM7RUFDZEMsVUFBVTtFQUNWQyxVQUFVO0VBQ1ZDO0FBQ0YsQ0FBQyxHQUFHaEIscURBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzPzUzZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJy4vbGliL2F4aW9zLmpzJztcblxuLy8gVGhpcyBtb2R1bGUgaXMgaW50ZW5kZWQgdG8gdW53cmFwIEF4aW9zIGRlZmF1bHQgZXhwb3J0IGFzIG5hbWVkLlxuLy8gS2VlcCB0b3AtbGV2ZWwgZXhwb3J0IHNhbWUgd2l0aCBzdGF0aWMgcHJvcGVydGllc1xuLy8gc28gdGhhdCBpdCBjYW4ga2VlcCBzYW1lIHdpdGggZXMgbW9kdWxlIG9yIGNqc1xuY29uc3Qge1xuICBBeGlvcyxcbiAgQXhpb3NFcnJvcixcbiAgQ2FuY2VsZWRFcnJvcixcbiAgaXNDYW5jZWwsXG4gIENhbmNlbFRva2VuLFxuICBWRVJTSU9OLFxuICBhbGwsXG4gIENhbmNlbCxcbiAgaXNBeGlvc0Vycm9yLFxuICBzcHJlYWQsXG4gIHRvRm9ybURhdGEsXG4gIEF4aW9zSGVhZGVycyxcbiAgSHR0cFN0YXR1c0NvZGUsXG4gIGZvcm1Ub0pTT04sXG4gIGdldEFkYXB0ZXIsXG4gIG1lcmdlQ29uZmlnXG59ID0gYXhpb3M7XG5cbmV4cG9ydCB7XG4gIGF4aW9zIGFzIGRlZmF1bHQsXG4gIEF4aW9zLFxuICBBeGlvc0Vycm9yLFxuICBDYW5jZWxlZEVycm9yLFxuICBpc0NhbmNlbCxcbiAgQ2FuY2VsVG9rZW4sXG4gIFZFUlNJT04sXG4gIGFsbCxcbiAgQ2FuY2VsLFxuICBpc0F4aW9zRXJyb3IsXG4gIHNwcmVhZCxcbiAgdG9Gb3JtRGF0YSxcbiAgQXhpb3NIZWFkZXJzLFxuICBIdHRwU3RhdHVzQ29kZSxcbiAgZm9ybVRvSlNPTixcbiAgZ2V0QWRhcHRlcixcbiAgbWVyZ2VDb25maWdcbn1cbiJdLCJuYW1lcyI6WyJheGlvcyIsIkF4aW9zIiwiQXhpb3NFcnJvciIsIkNhbmNlbGVkRXJyb3IiLCJpc0NhbmNlbCIsIkNhbmNlbFRva2VuIiwiVkVSU0lPTiIsImFsbCIsIkNhbmNlbCIsImlzQXhpb3NFcnJvciIsInNwcmVhZCIsInRvRm9ybURhdGEiLCJBeGlvc0hlYWRlcnMiLCJIdHRwU3RhdHVzQ29kZSIsImZvcm1Ub0pTT04iLCJnZXRBZGFwdGVyIiwibWVyZ2VDb25maWciLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/adapters/adapters.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/adapters/adapters.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ \"./node_modules/axios/lib/helpers/null.js\");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ \"./node_modules/axios/lib/adapters/xhr.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"./node_modules/axios/lib/adapters/fetch.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  fetch: _fetch_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n};\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {\n        value\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {\n      value\n    });\n  }\n});\nconst renderReason = reason => `- ${reason}`;\nconst isResolvedHandle = adapter => _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(adapter) || adapter === null || adapter === false;\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getAdapter: adapters => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isArray(adapters) ? adapters : [adapters];\n    const {\n      length\n    } = adapters;\n    let nameOrAdapter;\n    let adapter;\n    const rejectedReasons = {};\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n      adapter = nameOrAdapter;\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n        if (adapter === undefined) {\n          throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](`Unknown adapter '${id}'`);\n        }\n      }\n      if (adapter) {\n        break;\n      }\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n    if (!adapter) {\n      const reasons = Object.entries(rejectedReasons).map(([id, state]) => `adapter ${id} ` + (state === false ? 'is not supported by the environment' : 'is not available in the build'));\n      let s = length ? reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0]) : 'as no adapter specified';\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](`There is no suitable adapter to dispatch the request ` + s, 'ERR_NOT_SUPPORT');\n    }\n    return adapter;\n  },\n  adapters: knownAdapters\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUNJO0FBQ0Y7QUFDSTtBQUNTO0FBRS9DLE1BQU1LLGFBQWEsR0FBRztFQUNwQkMsSUFBSSxFQUFFTCxnREFBVztFQUNqQk0sR0FBRyxFQUFFTCwrQ0FBVTtFQUNmTSxLQUFLLEVBQUVMLGlEQUFZQTtBQUNyQixDQUFDO0FBRURILHlEQUFhLENBQUNLLGFBQWEsRUFBRSxDQUFDSyxFQUFFLEVBQUVDLEtBQUssS0FBSztFQUMxQyxJQUFJRCxFQUFFLEVBQUU7SUFDTixJQUFJO01BQ0ZFLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDSCxFQUFFLEVBQUUsTUFBTSxFQUFFO1FBQUNDO01BQUssQ0FBQyxDQUFDO0lBQzVDLENBQUMsQ0FBQyxPQUFPRyxDQUFDLEVBQUU7TUFDVjtJQUFBO0lBRUZGLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDSCxFQUFFLEVBQUUsYUFBYSxFQUFFO01BQUNDO0lBQUssQ0FBQyxDQUFDO0VBQ25EO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsTUFBTUksWUFBWSxHQUFJQyxNQUFNLElBQUssS0FBS0EsTUFBTSxFQUFFO0FBRTlDLE1BQU1DLGdCQUFnQixHQUFJQyxPQUFPLElBQUtsQiw0REFBZ0IsQ0FBQ2tCLE9BQU8sQ0FBQyxJQUFJQSxPQUFPLEtBQUssSUFBSSxJQUFJQSxPQUFPLEtBQUssS0FBSztBQUV4RywrREFBZTtFQUNiRSxVQUFVLEVBQUdDLFFBQVEsSUFBSztJQUN4QkEsUUFBUSxHQUFHckIseURBQWEsQ0FBQ3FCLFFBQVEsQ0FBQyxHQUFHQSxRQUFRLEdBQUcsQ0FBQ0EsUUFBUSxDQUFDO0lBRTFELE1BQU07TUFBQ0U7SUFBTSxDQUFDLEdBQUdGLFFBQVE7SUFDekIsSUFBSUcsYUFBYTtJQUNqQixJQUFJTixPQUFPO0lBRVgsTUFBTU8sZUFBZSxHQUFHLENBQUMsQ0FBQztJQUUxQixLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0gsTUFBTSxFQUFFRyxDQUFDLEVBQUUsRUFBRTtNQUMvQkYsYUFBYSxHQUFHSCxRQUFRLENBQUNLLENBQUMsQ0FBQztNQUMzQixJQUFJQyxFQUFFO01BRU5ULE9BQU8sR0FBR00sYUFBYTtNQUV2QixJQUFJLENBQUNQLGdCQUFnQixDQUFDTyxhQUFhLENBQUMsRUFBRTtRQUNwQ04sT0FBTyxHQUFHYixhQUFhLENBQUMsQ0FBQ3NCLEVBQUUsR0FBR0MsTUFBTSxDQUFDSixhQUFhLENBQUMsRUFBRUssV0FBVyxDQUFDLENBQUMsQ0FBQztRQUVuRSxJQUFJWCxPQUFPLEtBQUtZLFNBQVMsRUFBRTtVQUN6QixNQUFNLElBQUkxQiwyREFBVSxDQUFDLG9CQUFvQnVCLEVBQUUsR0FBRyxDQUFDO1FBQ2pEO01BQ0Y7TUFFQSxJQUFJVCxPQUFPLEVBQUU7UUFDWDtNQUNGO01BRUFPLGVBQWUsQ0FBQ0UsRUFBRSxJQUFJLEdBQUcsR0FBR0QsQ0FBQyxDQUFDLEdBQUdSLE9BQU87SUFDMUM7SUFFQSxJQUFJLENBQUNBLE9BQU8sRUFBRTtNQUVaLE1BQU1hLE9BQU8sR0FBR25CLE1BQU0sQ0FBQ29CLE9BQU8sQ0FBQ1AsZUFBZSxDQUFDLENBQzVDUSxHQUFHLENBQUMsQ0FBQyxDQUFDTixFQUFFLEVBQUVPLEtBQUssQ0FBQyxLQUFLLFdBQVdQLEVBQUUsR0FBRyxJQUNuQ08sS0FBSyxLQUFLLEtBQUssR0FBRyxxQ0FBcUMsR0FBRywrQkFBK0IsQ0FDNUYsQ0FBQztNQUVILElBQUlDLENBQUMsR0FBR1osTUFBTSxHQUNYUSxPQUFPLENBQUNSLE1BQU0sR0FBRyxDQUFDLEdBQUcsV0FBVyxHQUFHUSxPQUFPLENBQUNFLEdBQUcsQ0FBQ2xCLFlBQVksQ0FBQyxDQUFDcUIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBR3JCLFlBQVksQ0FBQ2dCLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUN6Ryx5QkFBeUI7TUFFM0IsTUFBTSxJQUFJM0IsMkRBQVUsQ0FDbEIsdURBQXVELEdBQUcrQixDQUFDLEVBQzNELGlCQUNGLENBQUM7SUFDSDtJQUVBLE9BQU9qQixPQUFPO0VBQ2hCLENBQUM7RUFDREcsUUFBUSxFQUFFaEI7QUFDWixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMvYWRhcHRlcnMuanM/NzgyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IGh0dHBBZGFwdGVyIGZyb20gJy4vaHR0cC5qcyc7XG5pbXBvcnQgeGhyQWRhcHRlciBmcm9tICcuL3hoci5qcyc7XG5pbXBvcnQgZmV0Y2hBZGFwdGVyIGZyb20gJy4vZmV0Y2guanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSBcIi4uL2NvcmUvQXhpb3NFcnJvci5qc1wiO1xuXG5jb25zdCBrbm93bkFkYXB0ZXJzID0ge1xuICBodHRwOiBodHRwQWRhcHRlcixcbiAgeGhyOiB4aHJBZGFwdGVyLFxuICBmZXRjaDogZmV0Y2hBZGFwdGVyXG59XG5cbnV0aWxzLmZvckVhY2goa25vd25BZGFwdGVycywgKGZuLCB2YWx1ZSkgPT4ge1xuICBpZiAoZm4pIHtcbiAgICB0cnkge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCAnbmFtZScsIHt2YWx1ZX0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sICdhZGFwdGVyTmFtZScsIHt2YWx1ZX0pO1xuICB9XG59KTtcblxuY29uc3QgcmVuZGVyUmVhc29uID0gKHJlYXNvbikgPT4gYC0gJHtyZWFzb259YDtcblxuY29uc3QgaXNSZXNvbHZlZEhhbmRsZSA9IChhZGFwdGVyKSA9PiB1dGlscy5pc0Z1bmN0aW9uKGFkYXB0ZXIpIHx8IGFkYXB0ZXIgPT09IG51bGwgfHwgYWRhcHRlciA9PT0gZmFsc2U7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0QWRhcHRlcjogKGFkYXB0ZXJzKSA9PiB7XG4gICAgYWRhcHRlcnMgPSB1dGlscy5pc0FycmF5KGFkYXB0ZXJzKSA/IGFkYXB0ZXJzIDogW2FkYXB0ZXJzXTtcblxuICAgIGNvbnN0IHtsZW5ndGh9ID0gYWRhcHRlcnM7XG4gICAgbGV0IG5hbWVPckFkYXB0ZXI7XG4gICAgbGV0IGFkYXB0ZXI7XG5cbiAgICBjb25zdCByZWplY3RlZFJlYXNvbnMgPSB7fTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIG5hbWVPckFkYXB0ZXIgPSBhZGFwdGVyc1tpXTtcbiAgICAgIGxldCBpZDtcblxuICAgICAgYWRhcHRlciA9IG5hbWVPckFkYXB0ZXI7XG5cbiAgICAgIGlmICghaXNSZXNvbHZlZEhhbmRsZShuYW1lT3JBZGFwdGVyKSkge1xuICAgICAgICBhZGFwdGVyID0ga25vd25BZGFwdGVyc1soaWQgPSBTdHJpbmcobmFtZU9yQWRhcHRlcikpLnRvTG93ZXJDYXNlKCldO1xuXG4gICAgICAgIGlmIChhZGFwdGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcihgVW5rbm93biBhZGFwdGVyICcke2lkfSdgKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoYWRhcHRlcikge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcmVqZWN0ZWRSZWFzb25zW2lkIHx8ICcjJyArIGldID0gYWRhcHRlcjtcbiAgICB9XG5cbiAgICBpZiAoIWFkYXB0ZXIpIHtcblxuICAgICAgY29uc3QgcmVhc29ucyA9IE9iamVjdC5lbnRyaWVzKHJlamVjdGVkUmVhc29ucylcbiAgICAgICAgLm1hcCgoW2lkLCBzdGF0ZV0pID0+IGBhZGFwdGVyICR7aWR9IGAgK1xuICAgICAgICAgIChzdGF0ZSA9PT0gZmFsc2UgPyAnaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgZW52aXJvbm1lbnQnIDogJ2lzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkJylcbiAgICAgICAgKTtcblxuICAgICAgbGV0IHMgPSBsZW5ndGggP1xuICAgICAgICAocmVhc29ucy5sZW5ndGggPiAxID8gJ3NpbmNlIDpcXG4nICsgcmVhc29ucy5tYXAocmVuZGVyUmVhc29uKS5qb2luKCdcXG4nKSA6ICcgJyArIHJlbmRlclJlYXNvbihyZWFzb25zWzBdKSkgOlxuICAgICAgICAnYXMgbm8gYWRhcHRlciBzcGVjaWZpZWQnO1xuXG4gICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcihcbiAgICAgICAgYFRoZXJlIGlzIG5vIHN1aXRhYmxlIGFkYXB0ZXIgdG8gZGlzcGF0Y2ggdGhlIHJlcXVlc3QgYCArIHMsXG4gICAgICAgICdFUlJfTk9UX1NVUFBPUlQnXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBhZGFwdGVyO1xuICB9LFxuICBhZGFwdGVyczoga25vd25BZGFwdGVyc1xufVxuIl0sIm5hbWVzIjpbInV0aWxzIiwiaHR0cEFkYXB0ZXIiLCJ4aHJBZGFwdGVyIiwiZmV0Y2hBZGFwdGVyIiwiQXhpb3NFcnJvciIsImtub3duQWRhcHRlcnMiLCJodHRwIiwieGhyIiwiZmV0Y2giLCJmb3JFYWNoIiwiZm4iLCJ2YWx1ZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZSIsInJlbmRlclJlYXNvbiIsInJlYXNvbiIsImlzUmVzb2x2ZWRIYW5kbGUiLCJhZGFwdGVyIiwiaXNGdW5jdGlvbiIsImdldEFkYXB0ZXIiLCJhZGFwdGVycyIsImlzQXJyYXkiLCJsZW5ndGgiLCJuYW1lT3JBZGFwdGVyIiwicmVqZWN0ZWRSZWFzb25zIiwiaSIsImlkIiwiU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJ1bmRlZmluZWQiLCJyZWFzb25zIiwiZW50cmllcyIsIm1hcCIsInN0YXRlIiwicyIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/adapters.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/adapters/fetch.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/adapters/fetch.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/composeSignals.js */ \"./node_modules/axios/lib/helpers/composeSignals.js\");\n/* harmony import */ var _helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/trackStream.js */ \"./node_modules/axios/lib/helpers/trackStream.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"./node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"./node_modules/axios/lib/helpers/resolveConfig.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/settle.js */ \"./node_modules/axios/lib/core/settle.js\");\n\n\n\n\n\n\n\n\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? (encoder => str => encoder.encode(str))(new TextEncoder()) : async str => new Uint8Array(await new Response(str).arrayBuffer()));\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false;\n  }\n};\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n  const hasContentType = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    }\n  }).headers.has('Content-Type');\n  return duplexAccessed && !hasContentType;\n});\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\nconst supportsResponseStream = isReadableStreamSupported && test(() => _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isReadableStream(new Response('').body));\nconst resolvers = {\n  stream: supportsResponseStream && (res => res.body)\n};\nisFetchSupported && (res => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFunction(res[type]) ? res => res[type]() : (_, config) => {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`Response type '${type}' is not supported`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NOT_SUPPORT, config);\n    });\n  });\n})(new Response());\nconst getBodyLength = async body => {\n  if (body == null) {\n    return 0;\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isBlob(body)) {\n    return body.size;\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isSpecCompliantForm(body)) {\n    const _request = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n      method: 'POST',\n      body\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBufferView(body) || _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isURLSearchParams(body)) {\n    body = body + '';\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\nconst resolveBodyLength = async (headers, body) => {\n  const length = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(headers.getContentLength());\n  return length == null ? getBodyLength(body) : length;\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (isFetchSupported && (async config => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(config);\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n  let composedSignal = (0,_helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n  let request;\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n    composedSignal.unsubscribe();\n  });\n  let requestContentLength;\n  try {\n    if (onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n      let contentTypeHeader;\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n      if (_request.body) {\n        const [onProgress, flush] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(requestContentLength, (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onUploadProgress)));\n        data = (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n    let response = await fetch(request);\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {\n      const options = {};\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n      const responseContentLength = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(response.headers.get('content-length'));\n      const [onProgress, flush] = onDownloadProgress && (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(responseContentLength, (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onDownloadProgress), true)) || [];\n      response = new Response((0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n        flush && flush();\n        unsubscribe && unsubscribe();\n      }), options);\n    }\n    responseType = responseType || 'text';\n    let responseData = await resolvers[_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findKey(resolvers, responseType) || 'text'](response, config);\n    !isStreamResponse && unsubscribe && unsubscribe();\n    return await new Promise((resolve, reject) => {\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(resolve, reject, {\n        data: responseData,\n        headers: _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    });\n  } catch (err) {\n    unsubscribe && unsubscribe();\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NETWORK, config, request), {\n        cause: err.cause || err\n      });\n    }\n    throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(err, err && err.code, config, request);\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/fetch.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../core/settle.js */ \"./node_modules/axios/lib/core/settle.js\");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/transitional.js */ \"./node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ \"./node_modules/axios/lib/helpers/parseProtocol.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"./node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"./node_modules/axios/lib/helpers/resolveConfig.js\");\n\n\n\n\n\n\n\n\n\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n/* harmony default export */ __webpack_exports__[\"default\"] = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n    let requestData = _config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(_config.headers).normalize();\n    let {\n      responseType,\n      onUploadProgress,\n      onDownloadProgress\n    } = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n    let request = new XMLHttpRequest();\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from('getAllResponseHeaders' in request && request.getAllResponseHeaders());\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](timeoutErrorMessage, transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      [downloadThrottled, flushDownload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onDownloadProgress, true);\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      [uploadThrottled, flushUpload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onUploadProgress);\n      request.upload.addEventListener('progress', uploadThrottled);\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_config.url);\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ \"./node_modules/axios/lib/core/Axios.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ \"./node_modules/axios/lib/helpers/formDataToJSON.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ \"./node_modules/axios/lib/helpers/spread.js\");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ \"./node_modules/axios/lib/adapters/adapters.js\");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ \"./node_modules/axios/lib/helpers/HttpStatusCode.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, context, {\n    allOwnKeys: true\n  });\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, context, null, {\n    allOwnKeys: true\n  });\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(defaultConfig, instanceConfig));\n  };\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isHTMLForm(thing) ? new FormData(thing) : thing);\naxios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].getAdapter;\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ __webpack_exports__[\"default\"] = (axios);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhOztBQUVrQjtBQUNNO0FBQ0Q7QUFDWTtBQUNMO0FBQ2M7QUFDSDtBQUNKO0FBQ047QUFDTjtBQUNXO0FBQ0g7QUFDTDtBQUNZO0FBQ0g7QUFDSjtBQUNXOztBQUV6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNpQixjQUFjQSxDQUFDQyxhQUFhLEVBQUU7RUFDckMsTUFBTUMsT0FBTyxHQUFHLElBQUlqQixzREFBSyxDQUFDZ0IsYUFBYSxDQUFDO0VBQ3hDLE1BQU1FLFFBQVEsR0FBR25CLDREQUFJLENBQUNDLGdFQUFlLENBQUNvQixPQUFPLEVBQUVILE9BQU8sQ0FBQzs7RUFFdkQ7RUFDQW5CLHdEQUFZLENBQUNvQixRQUFRLEVBQUVsQixnRUFBZSxFQUFFaUIsT0FBTyxFQUFFO0lBQUNLLFVBQVUsRUFBRTtFQUFJLENBQUMsQ0FBQzs7RUFFcEU7RUFDQXhCLHdEQUFZLENBQUNvQixRQUFRLEVBQUVELE9BQU8sRUFBRSxJQUFJLEVBQUU7SUFBQ0ssVUFBVSxFQUFFO0VBQUksQ0FBQyxDQUFDOztFQUV6RDtFQUNBSixRQUFRLENBQUNLLE1BQU0sR0FBRyxTQUFTQSxNQUFNQSxDQUFDQyxjQUFjLEVBQUU7SUFDaEQsT0FBT1QsY0FBYyxDQUFDZCxnRUFBVyxDQUFDZSxhQUFhLEVBQUVRLGNBQWMsQ0FBQyxDQUFDO0VBQ25FLENBQUM7RUFFRCxPQUFPTixRQUFRO0FBQ2pCOztBQUVBO0FBQ0EsTUFBTU8sS0FBSyxHQUFHVixjQUFjLENBQUNiLDBEQUFRLENBQUM7O0FBRXRDO0FBQ0F1QixLQUFLLENBQUN6QixLQUFLLEdBQUdBLHNEQUFLOztBQUVuQjtBQUNBeUIsS0FBSyxDQUFDckIsYUFBYSxHQUFHQSxnRUFBYTtBQUNuQ3FCLEtBQUssQ0FBQ3BCLFdBQVcsR0FBR0EsOERBQVc7QUFDL0JvQixLQUFLLENBQUNuQixRQUFRLEdBQUdBLDJEQUFRO0FBQ3pCbUIsS0FBSyxDQUFDbEIsT0FBTyxHQUFHQSxpREFBTztBQUN2QmtCLEtBQUssQ0FBQ2pCLFVBQVUsR0FBR0EsOERBQVU7O0FBRTdCO0FBQ0FpQixLQUFLLENBQUNoQixVQUFVLEdBQUdBLDREQUFVOztBQUU3QjtBQUNBZ0IsS0FBSyxDQUFDQyxNQUFNLEdBQUdELEtBQUssQ0FBQ3JCLGFBQWE7O0FBRWxDO0FBQ0FxQixLQUFLLENBQUNFLEdBQUcsR0FBRyxTQUFTQSxHQUFHQSxDQUFDQyxRQUFRLEVBQUU7RUFDakMsT0FBT0MsT0FBTyxDQUFDRixHQUFHLENBQUNDLFFBQVEsQ0FBQztBQUM5QixDQUFDO0FBRURILEtBQUssQ0FBQ2YsTUFBTSxHQUFHQSwyREFBTTs7QUFFckI7QUFDQWUsS0FBSyxDQUFDZCxZQUFZLEdBQUdBLGlFQUFZOztBQUVqQztBQUNBYyxLQUFLLENBQUN4QixXQUFXLEdBQUdBLDREQUFXO0FBRS9Cd0IsS0FBSyxDQUFDYixZQUFZLEdBQUdBLDhEQUFZO0FBRWpDYSxLQUFLLENBQUNLLFVBQVUsR0FBR0MsS0FBSyxJQUFJNUIsdUVBQWMsQ0FBQ0wsNERBQWdCLENBQUNpQyxLQUFLLENBQUMsR0FBRyxJQUFJRSxRQUFRLENBQUNGLEtBQUssQ0FBQyxHQUFHQSxLQUFLLENBQUM7QUFFakdOLEtBQUssQ0FBQ1MsVUFBVSxHQUFHckIseUVBQW1CO0FBRXRDWSxLQUFLLENBQUNYLGNBQWMsR0FBR0EsbUVBQWM7QUFFckNXLEtBQUssQ0FBQ1UsT0FBTyxHQUFHVixLQUFLOztBQUVyQjtBQUNBLCtEQUFlQSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanM/ZmFkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCBiaW5kIGZyb20gJy4vaGVscGVycy9iaW5kLmpzJztcbmltcG9ydCBBeGlvcyBmcm9tICcuL2NvcmUvQXhpb3MuanMnO1xuaW1wb3J0IG1lcmdlQ29uZmlnIGZyb20gJy4vY29yZS9tZXJnZUNvbmZpZy5qcyc7XG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi9kZWZhdWx0cy9pbmRleC5qcyc7XG5pbXBvcnQgZm9ybURhdGFUb0pTT04gZnJvbSAnLi9oZWxwZXJzL2Zvcm1EYXRhVG9KU09OLmpzJztcbmltcG9ydCBDYW5jZWxlZEVycm9yIGZyb20gJy4vY2FuY2VsL0NhbmNlbGVkRXJyb3IuanMnO1xuaW1wb3J0IENhbmNlbFRva2VuIGZyb20gJy4vY2FuY2VsL0NhbmNlbFRva2VuLmpzJztcbmltcG9ydCBpc0NhbmNlbCBmcm9tICcuL2NhbmNlbC9pc0NhbmNlbC5qcyc7XG5pbXBvcnQge1ZFUlNJT059IGZyb20gJy4vZW52L2RhdGEuanMnO1xuaW1wb3J0IHRvRm9ybURhdGEgZnJvbSAnLi9oZWxwZXJzL3RvRm9ybURhdGEuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi9jb3JlL0F4aW9zRXJyb3IuanMnO1xuaW1wb3J0IHNwcmVhZCBmcm9tICcuL2hlbHBlcnMvc3ByZWFkLmpzJztcbmltcG9ydCBpc0F4aW9zRXJyb3IgZnJvbSAnLi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcyc7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gXCIuL2NvcmUvQXhpb3NIZWFkZXJzLmpzXCI7XG5pbXBvcnQgYWRhcHRlcnMgZnJvbSAnLi9hZGFwdGVycy9hZGFwdGVycy5qcyc7XG5pbXBvcnQgSHR0cFN0YXR1c0NvZGUgZnJvbSAnLi9oZWxwZXJzL0h0dHBTdGF0dXNDb2RlLmpzJztcblxuLyoqXG4gKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdENvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICpcbiAqIEByZXR1cm5zIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICBjb25zdCBjb250ZXh0ID0gbmV3IEF4aW9zKGRlZmF1bHRDb25maWcpO1xuICBjb25zdCBpbnN0YW5jZSA9IGJpbmQoQXhpb3MucHJvdG90eXBlLnJlcXVlc3QsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgYXhpb3MucHJvdG90eXBlIHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgQXhpb3MucHJvdG90eXBlLCBjb250ZXh0LCB7YWxsT3duS2V5czogdHJ1ZX0pO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQsIG51bGwsIHthbGxPd25LZXlzOiB0cnVlfSk7XG5cbiAgLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuICBpbnN0YW5jZS5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaW5zdGFuY2VDb25maWcpIHtcbiAgICByZXR1cm4gY3JlYXRlSW5zdGFuY2UobWVyZ2VDb25maWcoZGVmYXVsdENvbmZpZywgaW5zdGFuY2VDb25maWcpKTtcbiAgfTtcblxuICByZXR1cm4gaW5zdGFuY2U7XG59XG5cbi8vIENyZWF0ZSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB0byBiZSBleHBvcnRlZFxuY29uc3QgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWxlZEVycm9yID0gQ2FuY2VsZWRFcnJvcjtcbmF4aW9zLkNhbmNlbFRva2VuID0gQ2FuY2VsVG9rZW47XG5heGlvcy5pc0NhbmNlbCA9IGlzQ2FuY2VsO1xuYXhpb3MuVkVSU0lPTiA9IFZFUlNJT047XG5heGlvcy50b0Zvcm1EYXRhID0gdG9Gb3JtRGF0YTtcblxuLy8gRXhwb3NlIEF4aW9zRXJyb3IgY2xhc3NcbmF4aW9zLkF4aW9zRXJyb3IgPSBBeGlvc0Vycm9yO1xuXG4vLyBhbGlhcyBmb3IgQ2FuY2VsZWRFcnJvciBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuYXhpb3MuQ2FuY2VsID0gYXhpb3MuQ2FuY2VsZWRFcnJvcjtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcblxuYXhpb3Muc3ByZWFkID0gc3ByZWFkO1xuXG4vLyBFeHBvc2UgaXNBeGlvc0Vycm9yXG5heGlvcy5pc0F4aW9zRXJyb3IgPSBpc0F4aW9zRXJyb3I7XG5cbi8vIEV4cG9zZSBtZXJnZUNvbmZpZ1xuYXhpb3MubWVyZ2VDb25maWcgPSBtZXJnZUNvbmZpZztcblxuYXhpb3MuQXhpb3NIZWFkZXJzID0gQXhpb3NIZWFkZXJzO1xuXG5heGlvcy5mb3JtVG9KU09OID0gdGhpbmcgPT4gZm9ybURhdGFUb0pTT04odXRpbHMuaXNIVE1MRm9ybSh0aGluZykgPyBuZXcgRm9ybURhdGEodGhpbmcpIDogdGhpbmcpO1xuXG5heGlvcy5nZXRBZGFwdGVyID0gYWRhcHRlcnMuZ2V0QWRhcHRlcjtcblxuYXhpb3MuSHR0cFN0YXR1c0NvZGUgPSBIdHRwU3RhdHVzQ29kZTtcblxuYXhpb3MuZGVmYXVsdCA9IGF4aW9zO1xuXG4vLyB0aGlzIG1vZHVsZSBzaG91bGQgb25seSBoYXZlIGEgZGVmYXVsdCBleHBvcnRcbmV4cG9ydCBkZWZhdWx0IGF4aW9zXG4iXSwibmFtZXMiOlsidXRpbHMiLCJiaW5kIiwiQXhpb3MiLCJtZXJnZUNvbmZpZyIsImRlZmF1bHRzIiwiZm9ybURhdGFUb0pTT04iLCJDYW5jZWxlZEVycm9yIiwiQ2FuY2VsVG9rZW4iLCJpc0NhbmNlbCIsIlZFUlNJT04iLCJ0b0Zvcm1EYXRhIiwiQXhpb3NFcnJvciIsInNwcmVhZCIsImlzQXhpb3NFcnJvciIsIkF4aW9zSGVhZGVycyIsImFkYXB0ZXJzIiwiSHR0cFN0YXR1c0NvZGUiLCJjcmVhdGVJbnN0YW5jZSIsImRlZmF1bHRDb25maWciLCJjb250ZXh0IiwiaW5zdGFuY2UiLCJwcm90b3R5cGUiLCJyZXF1ZXN0IiwiZXh0ZW5kIiwiYWxsT3duS2V5cyIsImNyZWF0ZSIsImluc3RhbmNlQ29uZmlnIiwiYXhpb3MiLCJDYW5jZWwiLCJhbGwiLCJwcm9taXNlcyIsIlByb21pc2UiLCJmb3JtVG9KU09OIiwidGhpbmciLCJpc0hUTUxGb3JtIiwiRm9ybURhdGEiLCJnZXRBZGFwdGVyIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n    let resolvePromise;\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n      let i = token._listeners.length;\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n      return promise;\n    };\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n  toAbortSignal() {\n    const controller = new AbortController();\n    const abort = err => {\n      controller.abort(err);\n    };\n    this.subscribe(abort);\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (CancelToken);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOztBQUFhOztBQUVrQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQyxXQUFXLENBQUM7RUFDaEJDLFdBQVdBLENBQUNDLFFBQVEsRUFBRTtJQUNwQixJQUFJLE9BQU9BLFFBQVEsS0FBSyxVQUFVLEVBQUU7TUFDbEMsTUFBTSxJQUFJQyxTQUFTLENBQUMsOEJBQThCLENBQUM7SUFDckQ7SUFFQSxJQUFJQyxjQUFjO0lBRWxCLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUlDLE9BQU8sQ0FBQyxTQUFTQyxlQUFlQSxDQUFDQyxPQUFPLEVBQUU7TUFDM0RKLGNBQWMsR0FBR0ksT0FBTztJQUMxQixDQUFDLENBQUM7SUFFRixNQUFNQyxLQUFLLEdBQUcsSUFBSTs7SUFFbEI7SUFDQSxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDQyxNQUFNLElBQUk7TUFDMUIsSUFBSSxDQUFDRixLQUFLLENBQUNHLFVBQVUsRUFBRTtNQUV2QixJQUFJQyxDQUFDLEdBQUdKLEtBQUssQ0FBQ0csVUFBVSxDQUFDRSxNQUFNO01BRS9CLE9BQU9ELENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRTtRQUNkSixLQUFLLENBQUNHLFVBQVUsQ0FBQ0MsQ0FBQyxDQUFDLENBQUNGLE1BQU0sQ0FBQztNQUM3QjtNQUNBRixLQUFLLENBQUNHLFVBQVUsR0FBRyxJQUFJO0lBQ3pCLENBQUMsQ0FBQzs7SUFFRjtJQUNBLElBQUksQ0FBQ1AsT0FBTyxDQUFDSyxJQUFJLEdBQUdLLFdBQVcsSUFBSTtNQUNqQyxJQUFJQyxRQUFRO01BQ1o7TUFDQSxNQUFNWCxPQUFPLEdBQUcsSUFBSUMsT0FBTyxDQUFDRSxPQUFPLElBQUk7UUFDckNDLEtBQUssQ0FBQ1EsU0FBUyxDQUFDVCxPQUFPLENBQUM7UUFDeEJRLFFBQVEsR0FBR1IsT0FBTztNQUNwQixDQUFDLENBQUMsQ0FBQ0UsSUFBSSxDQUFDSyxXQUFXLENBQUM7TUFFcEJWLE9BQU8sQ0FBQ00sTUFBTSxHQUFHLFNBQVNPLE1BQU1BLENBQUEsRUFBRztRQUNqQ1QsS0FBSyxDQUFDVSxXQUFXLENBQUNILFFBQVEsQ0FBQztNQUM3QixDQUFDO01BRUQsT0FBT1gsT0FBTztJQUNoQixDQUFDO0lBRURILFFBQVEsQ0FBQyxTQUFTUyxNQUFNQSxDQUFDUyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO01BQ2pELElBQUliLEtBQUssQ0FBQ2MsTUFBTSxFQUFFO1FBQ2hCO1FBQ0E7TUFDRjtNQUVBZCxLQUFLLENBQUNjLE1BQU0sR0FBRyxJQUFJeEIseURBQWEsQ0FBQ3FCLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLENBQUM7TUFDMURsQixjQUFjLENBQUNLLEtBQUssQ0FBQ2MsTUFBTSxDQUFDO0lBQzlCLENBQUMsQ0FBQztFQUNKOztFQUVBO0FBQ0Y7QUFDQTtFQUNFQyxnQkFBZ0JBLENBQUEsRUFBRztJQUNqQixJQUFJLElBQUksQ0FBQ0QsTUFBTSxFQUFFO01BQ2YsTUFBTSxJQUFJLENBQUNBLE1BQU07SUFDbkI7RUFDRjs7RUFFQTtBQUNGO0FBQ0E7O0VBRUVOLFNBQVNBLENBQUNRLFFBQVEsRUFBRTtJQUNsQixJQUFJLElBQUksQ0FBQ0YsTUFBTSxFQUFFO01BQ2ZFLFFBQVEsQ0FBQyxJQUFJLENBQUNGLE1BQU0sQ0FBQztNQUNyQjtJQUNGO0lBRUEsSUFBSSxJQUFJLENBQUNYLFVBQVUsRUFBRTtNQUNuQixJQUFJLENBQUNBLFVBQVUsQ0FBQ2MsSUFBSSxDQUFDRCxRQUFRLENBQUM7SUFDaEMsQ0FBQyxNQUFNO01BQ0wsSUFBSSxDQUFDYixVQUFVLEdBQUcsQ0FBQ2EsUUFBUSxDQUFDO0lBQzlCO0VBQ0Y7O0VBRUE7QUFDRjtBQUNBOztFQUVFTixXQUFXQSxDQUFDTSxRQUFRLEVBQUU7SUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQ2IsVUFBVSxFQUFFO01BQ3BCO0lBQ0Y7SUFDQSxNQUFNZSxLQUFLLEdBQUcsSUFBSSxDQUFDZixVQUFVLENBQUNnQixPQUFPLENBQUNILFFBQVEsQ0FBQztJQUMvQyxJQUFJRSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7TUFDaEIsSUFBSSxDQUFDZixVQUFVLENBQUNpQixNQUFNLENBQUNGLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDbEM7RUFDRjtFQUVBRyxhQUFhQSxDQUFBLEVBQUc7SUFDZCxNQUFNQyxVQUFVLEdBQUcsSUFBSUMsZUFBZSxDQUFDLENBQUM7SUFFeEMsTUFBTUMsS0FBSyxHQUFJQyxHQUFHLElBQUs7TUFDckJILFVBQVUsQ0FBQ0UsS0FBSyxDQUFDQyxHQUFHLENBQUM7SUFDdkIsQ0FBQztJQUVELElBQUksQ0FBQ2pCLFNBQVMsQ0FBQ2dCLEtBQUssQ0FBQztJQUVyQkYsVUFBVSxDQUFDSSxNQUFNLENBQUNoQixXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUNBLFdBQVcsQ0FBQ2MsS0FBSyxDQUFDO0lBRTdELE9BQU9GLFVBQVUsQ0FBQ0ksTUFBTTtFQUMxQjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFLE9BQU9DLE1BQU1BLENBQUEsRUFBRztJQUNkLElBQUl6QixNQUFNO0lBQ1YsTUFBTUYsS0FBSyxHQUFHLElBQUlULFdBQVcsQ0FBQyxTQUFTRSxRQUFRQSxDQUFDbUMsQ0FBQyxFQUFFO01BQ2pEMUIsTUFBTSxHQUFHMEIsQ0FBQztJQUNaLENBQUMsQ0FBQztJQUNGLE9BQU87TUFDTDVCLEtBQUs7TUFDTEU7SUFDRixDQUFDO0VBQ0g7QUFDRjtBQUVBLCtEQUFlWCxXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbFRva2VuLmpzPzcyYzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tICcuL0NhbmNlbGVkRXJyb3IuanMnO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtDYW5jZWxUb2tlbn1cbiAqL1xuY2xhc3MgQ2FuY2VsVG9rZW4ge1xuICBjb25zdHJ1Y3RvcihleGVjdXRvcikge1xuICAgIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBsZXQgcmVzb2x2ZVByb21pc2U7XG5cbiAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICAgIH0pO1xuXG4gICAgY29uc3QgdG9rZW4gPSB0aGlzO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICB0aGlzLnByb21pc2UudGhlbihjYW5jZWwgPT4ge1xuICAgICAgaWYgKCF0b2tlbi5fbGlzdGVuZXJzKSByZXR1cm47XG5cbiAgICAgIGxldCBpID0gdG9rZW4uX2xpc3RlbmVycy5sZW5ndGg7XG5cbiAgICAgIHdoaWxlIChpLS0gPiAwKSB7XG4gICAgICAgIHRva2VuLl9saXN0ZW5lcnNbaV0oY2FuY2VsKTtcbiAgICAgIH1cbiAgICAgIHRva2VuLl9saXN0ZW5lcnMgPSBudWxsO1xuICAgIH0pO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICB0aGlzLnByb21pc2UudGhlbiA9IG9uZnVsZmlsbGVkID0+IHtcbiAgICAgIGxldCBfcmVzb2x2ZTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHRva2VuLnN1YnNjcmliZShyZXNvbHZlKTtcbiAgICAgICAgX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgICAgfSkudGhlbihvbmZ1bGZpbGxlZCk7XG5cbiAgICAgIHByb21pc2UuY2FuY2VsID0gZnVuY3Rpb24gcmVqZWN0KCkge1xuICAgICAgICB0b2tlbi51bnN1YnNjcmliZShfcmVzb2x2ZSk7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9O1xuXG4gICAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UsIGNvbmZpZywgcmVxdWVzdCkge1xuICAgICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsZWRFcnJvcihtZXNzYWdlLCBjb25maWcsIHJlcXVlc3QpO1xuICAgICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaHJvd3MgYSBgQ2FuY2VsZWRFcnJvcmAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAgICovXG4gIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gICAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU3Vic2NyaWJlIHRvIHRoZSBjYW5jZWwgc2lnbmFsXG4gICAqL1xuXG4gIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICh0aGlzLnJlYXNvbikge1xuICAgICAgbGlzdGVuZXIodGhpcy5yZWFzb24pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICAgIHRoaXMuX2xpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fbGlzdGVuZXJzID0gW2xpc3RlbmVyXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVW5zdWJzY3JpYmUgZnJvbSB0aGUgY2FuY2VsIHNpZ25hbFxuICAgKi9cblxuICB1bnN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICghdGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fbGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHRoaXMuX2xpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgfVxuXG4gIHRvQWJvcnRTaWduYWwoKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcblxuICAgIGNvbnN0IGFib3J0ID0gKGVycikgPT4ge1xuICAgICAgY29udHJvbGxlci5hYm9ydChlcnIpO1xuICAgIH07XG5cbiAgICB0aGlzLnN1YnNjcmliZShhYm9ydCk7XG5cbiAgICBjb250cm9sbGVyLnNpZ25hbC51bnN1YnNjcmliZSA9ICgpID0+IHRoaXMudW5zdWJzY3JpYmUoYWJvcnQpO1xuXG4gICAgcmV0dXJuIGNvbnRyb2xsZXIuc2lnbmFsO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAgICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAgICovXG4gIHN0YXRpYyBzb3VyY2UoKSB7XG4gICAgbGV0IGNhbmNlbDtcbiAgICBjb25zdCB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgICBjYW5jZWwgPSBjO1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICB0b2tlbixcbiAgICAgIGNhbmNlbFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2FuY2VsVG9rZW47XG4iXSwibmFtZXMiOlsiQ2FuY2VsZWRFcnJvciIsIkNhbmNlbFRva2VuIiwiY29uc3RydWN0b3IiLCJleGVjdXRvciIsIlR5cGVFcnJvciIsInJlc29sdmVQcm9taXNlIiwicHJvbWlzZSIsIlByb21pc2UiLCJwcm9taXNlRXhlY3V0b3IiLCJyZXNvbHZlIiwidG9rZW4iLCJ0aGVuIiwiY2FuY2VsIiwiX2xpc3RlbmVycyIsImkiLCJsZW5ndGgiLCJvbmZ1bGZpbGxlZCIsIl9yZXNvbHZlIiwic3Vic2NyaWJlIiwicmVqZWN0IiwidW5zdWJzY3JpYmUiLCJtZXNzYWdlIiwiY29uZmlnIiwicmVxdWVzdCIsInJlYXNvbiIsInRocm93SWZSZXF1ZXN0ZWQiLCJsaXN0ZW5lciIsInB1c2giLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJ0b0Fib3J0U2lnbmFsIiwiY29udHJvbGxlciIsIkFib3J0Q29udHJvbGxlciIsImFib3J0IiwiZXJyIiwic2lnbmFsIiwic291cmNlIiwiYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CanceledError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CanceledError.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  __CANCEL__: true\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (CanceledError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUVrQztBQUNmOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTRSxhQUFhQSxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO0VBQy9DO0VBQ0FMLGdFQUFlLENBQUMsSUFBSSxFQUFFRyxPQUFPLElBQUksSUFBSSxHQUFHLFVBQVUsR0FBR0EsT0FBTyxFQUFFSCx3RUFBdUIsRUFBRUksTUFBTSxFQUFFQyxPQUFPLENBQUM7RUFDdkcsSUFBSSxDQUFDRyxJQUFJLEdBQUcsZUFBZTtBQUM3QjtBQUVBUCwwREFBYyxDQUFDQyxhQUFhLEVBQUVGLDJEQUFVLEVBQUU7RUFDeENVLFVBQVUsRUFBRTtBQUNkLENBQUMsQ0FBQztBQUVGLCtEQUFlUixhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbGVkRXJyb3IuanM/NjhhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gJy4uL2NvcmUvQXhpb3NFcnJvci5qcyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuXG4vKipcbiAqIEEgYENhbmNlbGVkRXJyb3JgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge09iamVjdD19IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtPYmplY3Q9fSByZXF1ZXN0IFRoZSByZXF1ZXN0LlxuICpcbiAqIEByZXR1cm5zIHtDYW5jZWxlZEVycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsZWRFcnJvcihtZXNzYWdlLCBjb25maWcsIHJlcXVlc3QpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVxLW51bGwsZXFlcWVxXG4gIEF4aW9zRXJyb3IuY2FsbCh0aGlzLCBtZXNzYWdlID09IG51bGwgPyAnY2FuY2VsZWQnIDogbWVzc2FnZSwgQXhpb3NFcnJvci5FUlJfQ0FOQ0VMRUQsIGNvbmZpZywgcmVxdWVzdCk7XG4gIHRoaXMubmFtZSA9ICdDYW5jZWxlZEVycm9yJztcbn1cblxudXRpbHMuaW5oZXJpdHMoQ2FuY2VsZWRFcnJvciwgQXhpb3NFcnJvciwge1xuICBfX0NBTkNFTF9fOiB0cnVlXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FuY2VsZWRFcnJvcjtcbiJdLCJuYW1lcyI6WyJBeGlvc0Vycm9yIiwidXRpbHMiLCJDYW5jZWxlZEVycm9yIiwibWVzc2FnZSIsImNvbmZpZyIsInJlcXVlc3QiLCJjYWxsIiwiRVJSX0NBTkNFTEVEIiwibmFtZSIsImluaGVyaXRzIiwiX19DQU5DRUxfXyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CanceledError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isCancel; }\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUUsU0FBU0EsUUFBUUEsQ0FBQ0MsS0FBSyxFQUFFO0VBQ3RDLE9BQU8sQ0FBQyxFQUFFQSxLQUFLLElBQUlBLEtBQUssQ0FBQ0MsVUFBVSxDQUFDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzP2MxN2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59XG4iXSwibmFtZXMiOlsiaXNDYW5jZWwiLCJ2YWx1ZSIsIl9fQ0FOQ0VMX18iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ \"./node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ \"./node_modules/axios/lib/helpers/validator.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n      throw err;\n    }\n  }\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const {\n      transitional,\n      paramsSerializer,\n      headers\n    } = config;\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n    if (paramsSerializer != null) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n    _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].merge(headers.common, headers[config.method]);\n    headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], method => {\n      delete headers[method];\n    });\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n    let promise;\n    let i = 0;\n    let len;\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n      promise = Promise.resolve(config);\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n      return promise;\n    }\n    len = requestInterceptorChain.length;\n    let newConfig = config;\n    i = 0;\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    i = 0;\n    len = responseInterceptorChain.length;\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n    return promise;\n  }\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(config.baseURL, config.url);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n  Axios.prototype[method] = generateHTTPMethod();\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (Axios);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosError.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosError.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n['ERR_BAD_OPTION_VALUE', 'ERR_BAD_OPTION', 'ECONNABORTED', 'ETIMEDOUT', 'ERR_NETWORK', 'ERR_FR_TOO_MANY_REDIRECTS', 'ERR_DEPRECATED', 'ERR_BAD_RESPONSE', 'ERR_BAD_REQUEST', 'ERR_CANCELED', 'ERR_NOT_SUPPORT', 'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {\n    value: code\n  };\n});\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {\n  value: true\n});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n  axiosError.cause = error;\n  axiosError.name = error.name;\n  customProps && Object.assign(axiosError, customProps);\n  return axiosError;\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3NFcnJvci5qcyIsIm1hcHBpbmdzIjoiOztBQUFhOztBQUVtQjs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNDLFVBQVVBLENBQUNDLE9BQU8sRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFO0VBQzVEQyxLQUFLLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUM7RUFFaEIsSUFBSUQsS0FBSyxDQUFDRSxpQkFBaUIsRUFBRTtJQUMzQkYsS0FBSyxDQUFDRSxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDQyxXQUFXLENBQUM7RUFDakQsQ0FBQyxNQUFNO0lBQ0wsSUFBSSxDQUFDQyxLQUFLLEdBQUksSUFBSUosS0FBSyxDQUFDLENBQUMsQ0FBRUksS0FBSztFQUNsQztFQUVBLElBQUksQ0FBQ1QsT0FBTyxHQUFHQSxPQUFPO0VBQ3RCLElBQUksQ0FBQ1UsSUFBSSxHQUFHLFlBQVk7RUFDeEJULElBQUksS0FBSyxJQUFJLENBQUNBLElBQUksR0FBR0EsSUFBSSxDQUFDO0VBQzFCQyxNQUFNLEtBQUssSUFBSSxDQUFDQSxNQUFNLEdBQUdBLE1BQU0sQ0FBQztFQUNoQ0MsT0FBTyxLQUFLLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxPQUFPLENBQUM7RUFDbkMsSUFBSUMsUUFBUSxFQUFFO0lBQ1osSUFBSSxDQUFDQSxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSSxDQUFDTyxNQUFNLEdBQUdQLFFBQVEsQ0FBQ08sTUFBTSxHQUFHUCxRQUFRLENBQUNPLE1BQU0sR0FBRyxJQUFJO0VBQ3hEO0FBQ0Y7QUFFQWIsMERBQWMsQ0FBQ0MsVUFBVSxFQUFFTSxLQUFLLEVBQUU7RUFDaENRLE1BQU0sRUFBRSxTQUFTQSxNQUFNQSxDQUFBLEVBQUc7SUFDeEIsT0FBTztNQUNMO01BQ0FiLE9BQU8sRUFBRSxJQUFJLENBQUNBLE9BQU87TUFDckJVLElBQUksRUFBRSxJQUFJLENBQUNBLElBQUk7TUFDZjtNQUNBSSxXQUFXLEVBQUUsSUFBSSxDQUFDQSxXQUFXO01BQzdCQyxNQUFNLEVBQUUsSUFBSSxDQUFDQSxNQUFNO01BQ25CO01BQ0FDLFFBQVEsRUFBRSxJQUFJLENBQUNBLFFBQVE7TUFDdkJDLFVBQVUsRUFBRSxJQUFJLENBQUNBLFVBQVU7TUFDM0JDLFlBQVksRUFBRSxJQUFJLENBQUNBLFlBQVk7TUFDL0JULEtBQUssRUFBRSxJQUFJLENBQUNBLEtBQUs7TUFDakI7TUFDQVAsTUFBTSxFQUFFSiw4REFBa0IsQ0FBQyxJQUFJLENBQUNJLE1BQU0sQ0FBQztNQUN2Q0QsSUFBSSxFQUFFLElBQUksQ0FBQ0EsSUFBSTtNQUNmVSxNQUFNLEVBQUUsSUFBSSxDQUFDQTtJQUNmLENBQUM7RUFDSDtBQUNGLENBQUMsQ0FBQztBQUVGLE1BQU1TLFNBQVMsR0FBR3JCLFVBQVUsQ0FBQ3FCLFNBQVM7QUFDdEMsTUFBTUMsV0FBVyxHQUFHLENBQUMsQ0FBQztBQUV0QixDQUNFLHNCQUFzQixFQUN0QixnQkFBZ0IsRUFDaEIsY0FBYyxFQUNkLFdBQVcsRUFDWCxhQUFhLEVBQ2IsMkJBQTJCLEVBQzNCLGdCQUFnQixFQUNoQixrQkFBa0IsRUFDbEIsaUJBQWlCLEVBQ2pCLGNBQWMsRUFDZCxpQkFBaUIsRUFDakI7QUFDRjtBQUFBLENBQ0MsQ0FBQ0MsT0FBTyxDQUFDckIsSUFBSSxJQUFJO0VBQ2hCb0IsV0FBVyxDQUFDcEIsSUFBSSxDQUFDLEdBQUc7SUFBQ3NCLEtBQUssRUFBRXRCO0VBQUksQ0FBQztBQUNuQyxDQUFDLENBQUM7QUFFRnVCLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMxQixVQUFVLEVBQUVzQixXQUFXLENBQUM7QUFDaERHLE1BQU0sQ0FBQ0UsY0FBYyxDQUFDTixTQUFTLEVBQUUsY0FBYyxFQUFFO0VBQUNHLEtBQUssRUFBRTtBQUFJLENBQUMsQ0FBQzs7QUFFL0Q7QUFDQXhCLFVBQVUsQ0FBQzRCLElBQUksR0FBRyxDQUFDQyxLQUFLLEVBQUUzQixJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUV5QixXQUFXLEtBQUs7RUFDekUsTUFBTUMsVUFBVSxHQUFHTixNQUFNLENBQUNPLE1BQU0sQ0FBQ1gsU0FBUyxDQUFDO0VBRTNDdEIsOERBQWtCLENBQUM4QixLQUFLLEVBQUVFLFVBQVUsRUFBRSxTQUFTRyxNQUFNQSxDQUFDQyxHQUFHLEVBQUU7SUFDekQsT0FBT0EsR0FBRyxLQUFLN0IsS0FBSyxDQUFDZSxTQUFTO0VBQ2hDLENBQUMsRUFBRWUsSUFBSSxJQUFJO0lBQ1QsT0FBT0EsSUFBSSxLQUFLLGNBQWM7RUFDaEMsQ0FBQyxDQUFDO0VBRUZwQyxVQUFVLENBQUNPLElBQUksQ0FBQ3dCLFVBQVUsRUFBRUYsS0FBSyxDQUFDNUIsT0FBTyxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxRQUFRLENBQUM7RUFFM0UwQixVQUFVLENBQUNNLEtBQUssR0FBR1IsS0FBSztFQUV4QkUsVUFBVSxDQUFDcEIsSUFBSSxHQUFHa0IsS0FBSyxDQUFDbEIsSUFBSTtFQUU1Qm1CLFdBQVcsSUFBSUwsTUFBTSxDQUFDYSxNQUFNLENBQUNQLFVBQVUsRUFBRUQsV0FBVyxDQUFDO0VBRXJELE9BQU9DLFVBQVU7QUFDbkIsQ0FBQztBQUVELCtEQUFlL0IsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3NFcnJvci5qcz8yMDI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtjb25maWddIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICpcbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIEF4aW9zRXJyb3IobWVzc2FnZSwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBFcnJvci5jYWxsKHRoaXMpO1xuXG4gIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuc3RhY2sgPSAobmV3IEVycm9yKCkpLnN0YWNrO1xuICB9XG5cbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgdGhpcy5uYW1lID0gJ0F4aW9zRXJyb3InO1xuICBjb2RlICYmICh0aGlzLmNvZGUgPSBjb2RlKTtcbiAgY29uZmlnICYmICh0aGlzLmNvbmZpZyA9IGNvbmZpZyk7XG4gIHJlcXVlc3QgJiYgKHRoaXMucmVxdWVzdCA9IHJlcXVlc3QpO1xuICBpZiAocmVzcG9uc2UpIHtcbiAgICB0aGlzLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gICAgdGhpcy5zdGF0dXMgPSByZXNwb25zZS5zdGF0dXMgPyByZXNwb25zZS5zdGF0dXMgOiBudWxsO1xuICB9XG59XG5cbnV0aWxzLmluaGVyaXRzKEF4aW9zRXJyb3IsIEVycm9yLCB7XG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHV0aWxzLnRvSlNPTk9iamVjdCh0aGlzLmNvbmZpZyksXG4gICAgICBjb2RlOiB0aGlzLmNvZGUsXG4gICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzXG4gICAgfTtcbiAgfVxufSk7XG5cbmNvbnN0IHByb3RvdHlwZSA9IEF4aW9zRXJyb3IucHJvdG90eXBlO1xuY29uc3QgZGVzY3JpcHRvcnMgPSB7fTtcblxuW1xuICAnRVJSX0JBRF9PUFRJT05fVkFMVUUnLFxuICAnRVJSX0JBRF9PUFRJT04nLFxuICAnRUNPTk5BQk9SVEVEJyxcbiAgJ0VUSU1FRE9VVCcsXG4gICdFUlJfTkVUV09SSycsXG4gICdFUlJfRlJfVE9PX01BTllfUkVESVJFQ1RTJyxcbiAgJ0VSUl9ERVBSRUNBVEVEJyxcbiAgJ0VSUl9CQURfUkVTUE9OU0UnLFxuICAnRVJSX0JBRF9SRVFVRVNUJyxcbiAgJ0VSUl9DQU5DRUxFRCcsXG4gICdFUlJfTk9UX1NVUFBPUlQnLFxuICAnRVJSX0lOVkFMSURfVVJMJ1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbl0uZm9yRWFjaChjb2RlID0+IHtcbiAgZGVzY3JpcHRvcnNbY29kZV0gPSB7dmFsdWU6IGNvZGV9O1xufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEF4aW9zRXJyb3IsIGRlc2NyaXB0b3JzKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90b3R5cGUsICdpc0F4aW9zRXJyb3InLCB7dmFsdWU6IHRydWV9KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbkF4aW9zRXJyb3IuZnJvbSA9IChlcnJvciwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSwgY3VzdG9tUHJvcHMpID0+IHtcbiAgY29uc3QgYXhpb3NFcnJvciA9IE9iamVjdC5jcmVhdGUocHJvdG90eXBlKTtcblxuICB1dGlscy50b0ZsYXRPYmplY3QoZXJyb3IsIGF4aW9zRXJyb3IsIGZ1bmN0aW9uIGZpbHRlcihvYmopIHtcbiAgICByZXR1cm4gb2JqICE9PSBFcnJvci5wcm90b3R5cGU7XG4gIH0sIHByb3AgPT4ge1xuICAgIHJldHVybiBwcm9wICE9PSAnaXNBeGlvc0Vycm9yJztcbiAgfSk7XG5cbiAgQXhpb3NFcnJvci5jYWxsKGF4aW9zRXJyb3IsIGVycm9yLm1lc3NhZ2UsIGNvZGUsIGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UpO1xuXG4gIGF4aW9zRXJyb3IuY2F1c2UgPSBlcnJvcjtcblxuICBheGlvc0Vycm9yLm5hbWUgPSBlcnJvci5uYW1lO1xuXG4gIGN1c3RvbVByb3BzICYmIE9iamVjdC5hc3NpZ24oYXhpb3NFcnJvciwgY3VzdG9tUHJvcHMpO1xuXG4gIHJldHVybiBheGlvc0Vycm9yO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXhpb3NFcnJvcjtcbiJdLCJuYW1lcyI6WyJ1dGlscyIsIkF4aW9zRXJyb3IiLCJtZXNzYWdlIiwiY29kZSIsImNvbmZpZyIsInJlcXVlc3QiLCJyZXNwb25zZSIsIkVycm9yIiwiY2FsbCIsImNhcHR1cmVTdGFja1RyYWNlIiwiY29uc3RydWN0b3IiLCJzdGFjayIsIm5hbWUiLCJzdGF0dXMiLCJpbmhlcml0cyIsInRvSlNPTiIsImRlc2NyaXB0aW9uIiwibnVtYmVyIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwidG9KU09OT2JqZWN0IiwicHJvdG90eXBlIiwiZGVzY3JpcHRvcnMiLCJmb3JFYWNoIiwidmFsdWUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJmcm9tIiwiZXJyb3IiLCJjdXN0b21Qcm9wcyIsImF4aW9zRXJyb3IiLCJjcmVhdGUiLCJ0b0ZsYXRPYmplY3QiLCJmaWx0ZXIiLCJvYmoiLCJwcm9wIiwiY2F1c2UiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/AxiosError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosHeaders.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosHeaders.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\n\n\n\n\nconst $internals = Symbol('internals');\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n  while (match = tokensRE.exec(str)) {\n    tokens[match[1]] = match[2];\n  }\n  return tokens;\n}\nconst isValidHeaderName = str => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(value)) return;\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\nfunction formatHeader(header) {\n  return header.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n    return char.toUpperCase() + str;\n  });\n}\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toCamelCase(' ' + header);\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function (arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, lHeader);\n      if (!key || self[key] === undefined || _rewrite === true || _rewrite === undefined && self[key] !== false) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n    const setHeaders = (headers, _rewrite) => _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(header), valueOrRewrite);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n    return this;\n  }\n  get(header, parser) {\n    header = normalizeHeader(header);\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n      if (key) {\n        const value = this[key];\n        if (!parser) {\n          return value;\n        }\n        if (parser === true) {\n          return parseTokens(value);\n        }\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n  has(header, matcher) {\n    header = normalizeHeader(header);\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n    return false;\n  }\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, _header);\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n          deleted = true;\n        }\n      }\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n    return deleted;\n  }\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n    while (i--) {\n      const key = keys[i];\n      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n    return deleted;\n  }\n  normalize(format) {\n    const self = this;\n    const headers = {};\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(headers, header);\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n      const normalized = format ? formatHeader(header) : String(header).trim();\n      if (normalized !== header) {\n        delete self[header];\n      }\n      self[normalized] = normalizeValue(value);\n      headers[normalized] = true;\n    });\n    return this;\n  }\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.join(', ') : value);\n    });\n    return obj;\n  }\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n  static concat(first, ...targets) {\n    const computed = new this(first);\n    targets.forEach(target => computed.set(target));\n    return computed;\n  }\n  static accessor(header) {\n    const internals = this[$internals] = this[$internals] = {\n      accessors: {}\n    };\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n    return this;\n  }\n}\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reduceDescriptors(AxiosHeaders.prototype, ({\n  value\n}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  };\n});\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders);\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosHeaders);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/AxiosHeaders.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (InterceptorManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7O0FBRXFCO0FBRWxDLE1BQU1DLGtCQUFrQixDQUFDO0VBQ3ZCQyxXQUFXQSxDQUFBLEVBQUc7SUFDWixJQUFJLENBQUNDLFFBQVEsR0FBRyxFQUFFO0VBQ3BCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsR0FBR0EsQ0FBQ0MsU0FBUyxFQUFFQyxRQUFRLEVBQUVDLE9BQU8sRUFBRTtJQUNoQyxJQUFJLENBQUNKLFFBQVEsQ0FBQ0ssSUFBSSxDQUFDO01BQ2pCSCxTQUFTO01BQ1RDLFFBQVE7TUFDUkcsV0FBVyxFQUFFRixPQUFPLEdBQUdBLE9BQU8sQ0FBQ0UsV0FBVyxHQUFHLEtBQUs7TUFDbERDLE9BQU8sRUFBRUgsT0FBTyxHQUFHQSxPQUFPLENBQUNHLE9BQU8sR0FBRztJQUN2QyxDQUFDLENBQUM7SUFDRixPQUFPLElBQUksQ0FBQ1AsUUFBUSxDQUFDUSxNQUFNLEdBQUcsQ0FBQztFQUNqQzs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFQyxLQUFLQSxDQUFDQyxFQUFFLEVBQUU7SUFDUixJQUFJLElBQUksQ0FBQ1YsUUFBUSxDQUFDVSxFQUFFLENBQUMsRUFBRTtNQUNyQixJQUFJLENBQUNWLFFBQVEsQ0FBQ1UsRUFBRSxDQUFDLEdBQUcsSUFBSTtJQUMxQjtFQUNGOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsS0FBS0EsQ0FBQSxFQUFHO0lBQ04sSUFBSSxJQUFJLENBQUNYLFFBQVEsRUFBRTtNQUNqQixJQUFJLENBQUNBLFFBQVEsR0FBRyxFQUFFO0lBQ3BCO0VBQ0Y7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRVksT0FBT0EsQ0FBQ0MsRUFBRSxFQUFFO0lBQ1ZoQix5REFBYSxDQUFDLElBQUksQ0FBQ0csUUFBUSxFQUFFLFNBQVNjLGNBQWNBLENBQUNDLENBQUMsRUFBRTtNQUN0RCxJQUFJQSxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ2RGLEVBQUUsQ0FBQ0UsQ0FBQyxDQUFDO01BQ1A7SUFDRixDQUFDLENBQUM7RUFDSjtBQUNGO0FBRUEsK0RBQWVqQixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcz9jNzkyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuXG5jbGFzcyBJbnRlcmNlcHRvck1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmhhbmRsZXJzID0gW107XG4gIH1cblxuICAvKipcbiAgICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gICAqXG4gICAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAgICovXG4gIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkLCBvcHRpb25zKSB7XG4gICAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICAgIGZ1bGZpbGxlZCxcbiAgICAgIHJlamVjdGVkLFxuICAgICAgc3luY2hyb25vdXM6IG9wdGlvbnMgPyBvcHRpb25zLnN5bmNocm9ub3VzIDogZmFsc2UsXG4gICAgICBydW5XaGVuOiBvcHRpb25zID8gb3B0aW9ucy5ydW5XaGVuIDogbnVsbFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gICAqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAgICpcbiAgICogQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgaW50ZXJjZXB0b3Igd2FzIHJlbW92ZWQsIGBmYWxzZWAgb3RoZXJ3aXNlXG4gICAqL1xuICBlamVjdChpZCkge1xuICAgIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhciBhbGwgaW50ZXJjZXB0b3JzIGZyb20gdGhlIHN0YWNrXG4gICAqXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY2xlYXIoKSB7XG4gICAgaWYgKHRoaXMuaGFuZGxlcnMpIHtcbiAgICAgIHRoaXMuaGFuZGxlcnMgPSBbXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAgICpcbiAgICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAgICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gICAqXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgZm9yRWFjaChmbikge1xuICAgIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgICAgZm4oaCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW50ZXJjZXB0b3JNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbInV0aWxzIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJoYW5kbGVycyIsInVzZSIsImZ1bGZpbGxlZCIsInJlamVjdGVkIiwib3B0aW9ucyIsInB1c2giLCJzeW5jaHJvbm91cyIsInJ1bldoZW4iLCJsZW5ndGgiLCJlamVjdCIsImlkIiwiY2xlYXIiLCJmb3JFYWNoIiwiZm4iLCJmb3JFYWNoSGFuZGxlciIsImgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildFullPath; }\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestedURL)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFMkM7QUFDSjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTRSxhQUFhQSxDQUFDQyxPQUFPLEVBQUVDLFlBQVksRUFBRTtFQUMzRCxJQUFJRCxPQUFPLElBQUksQ0FBQ0gscUVBQWEsQ0FBQ0ksWUFBWSxDQUFDLEVBQUU7SUFDM0MsT0FBT0gsbUVBQVcsQ0FBQ0UsT0FBTyxFQUFFQyxZQUFZLENBQUM7RUFDM0M7RUFDQSxPQUFPQSxZQUFZO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzP2YwMmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgaXNBYnNvbHV0ZVVSTCBmcm9tICcuLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMnO1xuaW1wb3J0IGNvbWJpbmVVUkxzIGZyb20gJy4uL2hlbHBlcnMvY29tYmluZVVSTHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBmdWxsIHBhdGhcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59XG4iXSwibmFtZXMiOlsiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwiYnVpbGRGdWxsUGF0aCIsImJhc2VVUkwiLCJyZXF1ZXN0ZWRVUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ dispatchRequest; }\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ \"./node_modules/axios/lib/core/transformData.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ \"./node_modules/axios/lib/adapters/adapters.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(config, config.transformRequest);\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].adapter);\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(config, config.transformResponse, response);\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(response.headers);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(config, config.transformResponse, reason.response);\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(reason.response.headers);\n      }\n    }\n    return Promise.reject(reason);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBYTs7QUFFa0M7QUFDRjtBQUNEO0FBQ1c7QUFDSjtBQUNKOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNNLDRCQUE0QkEsQ0FBQ0MsTUFBTSxFQUFFO0VBQzVDLElBQUlBLE1BQU0sQ0FBQ0MsV0FBVyxFQUFFO0lBQ3RCRCxNQUFNLENBQUNDLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUMsQ0FBQztFQUN2QztFQUVBLElBQUlGLE1BQU0sQ0FBQ0csTUFBTSxJQUFJSCxNQUFNLENBQUNHLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFO0lBQzFDLE1BQU0sSUFBSVIsZ0VBQWEsQ0FBQyxJQUFJLEVBQUVJLE1BQU0sQ0FBQztFQUN2QztBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2UsU0FBU0ssZUFBZUEsQ0FBQ0wsTUFBTSxFQUFFO0VBQzlDRCw0QkFBNEIsQ0FBQ0MsTUFBTSxDQUFDO0VBRXBDQSxNQUFNLENBQUNNLE9BQU8sR0FBR1Qsa0VBQWlCLENBQUNHLE1BQU0sQ0FBQ00sT0FBTyxDQUFDOztFQUVsRDtFQUNBTixNQUFNLENBQUNRLElBQUksR0FBR2YsOERBQWtCLENBQzlCTyxNQUFNLEVBQ05BLE1BQU0sQ0FBQ1UsZ0JBQ1QsQ0FBQztFQUVELElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLENBQUNYLE1BQU0sQ0FBQ1ksTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7SUFDMURaLE1BQU0sQ0FBQ00sT0FBTyxDQUFDTyxjQUFjLENBQUMsbUNBQW1DLEVBQUUsS0FBSyxDQUFDO0VBQzNFO0VBRUEsTUFBTUMsT0FBTyxHQUFHaEIsd0VBQW1CLENBQUNFLE1BQU0sQ0FBQ2MsT0FBTyxJQUFJbkIsa0VBQWdCLENBQUM7RUFFdkUsT0FBT21CLE9BQU8sQ0FBQ2QsTUFBTSxDQUFDLENBQUNnQixJQUFJLENBQUMsU0FBU0MsbUJBQW1CQSxDQUFDQyxRQUFRLEVBQUU7SUFDakVuQiw0QkFBNEIsQ0FBQ0MsTUFBTSxDQUFDOztJQUVwQztJQUNBa0IsUUFBUSxDQUFDVixJQUFJLEdBQUdmLDhEQUFrQixDQUNoQ08sTUFBTSxFQUNOQSxNQUFNLENBQUNtQixpQkFBaUIsRUFDeEJELFFBQ0YsQ0FBQztJQUVEQSxRQUFRLENBQUNaLE9BQU8sR0FBR1Qsa0VBQWlCLENBQUNxQixRQUFRLENBQUNaLE9BQU8sQ0FBQztJQUV0RCxPQUFPWSxRQUFRO0VBQ2pCLENBQUMsRUFBRSxTQUFTRSxrQkFBa0JBLENBQUNDLE1BQU0sRUFBRTtJQUNyQyxJQUFJLENBQUMzQiwrREFBUSxDQUFDMkIsTUFBTSxDQUFDLEVBQUU7TUFDckJ0Qiw0QkFBNEIsQ0FBQ0MsTUFBTSxDQUFDOztNQUVwQztNQUNBLElBQUlxQixNQUFNLElBQUlBLE1BQU0sQ0FBQ0gsUUFBUSxFQUFFO1FBQzdCRyxNQUFNLENBQUNILFFBQVEsQ0FBQ1YsSUFBSSxHQUFHZiw4REFBa0IsQ0FDdkNPLE1BQU0sRUFDTkEsTUFBTSxDQUFDbUIsaUJBQWlCLEVBQ3hCRSxNQUFNLENBQUNILFFBQ1QsQ0FBQztRQUNERyxNQUFNLENBQUNILFFBQVEsQ0FBQ1osT0FBTyxHQUFHVCxrRUFBaUIsQ0FBQ3dCLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDWixPQUFPLENBQUM7TUFDdEU7SUFDRjtJQUVBLE9BQU9nQixPQUFPLENBQUNDLE1BQU0sQ0FBQ0YsTUFBTSxDQUFDO0VBQy9CLENBQUMsQ0FBQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanM/NGRjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0cmFuc2Zvcm1EYXRhIGZyb20gJy4vdHJhbnNmb3JtRGF0YS5qcyc7XG5pbXBvcnQgaXNDYW5jZWwgZnJvbSAnLi4vY2FuY2VsL2lzQ2FuY2VsLmpzJztcbmltcG9ydCBkZWZhdWx0cyBmcm9tICcuLi9kZWZhdWx0cy9pbmRleC5qcyc7XG5pbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tICcuLi9jYW5jZWwvQ2FuY2VsZWRFcnJvci5qcyc7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gJy4uL2NvcmUvQXhpb3NIZWFkZXJzLmpzJztcbmltcG9ydCBhZGFwdGVycyBmcm9tIFwiLi4vYWRhcHRlcnMvYWRhcHRlcnMuanNcIjtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsZWRFcnJvcmAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICpcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxuXG4gIGlmIChjb25maWcuc2lnbmFsICYmIGNvbmZpZy5zaWduYWwuYWJvcnRlZCkge1xuICAgIHRocm93IG5ldyBDYW5jZWxlZEVycm9yKG51bGwsIGNvbmZpZyk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKlxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXNwYXRjaFJlcXVlc3QoY29uZmlnKSB7XG4gIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICBjb25maWcuaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKGNvbmZpZy5oZWFkZXJzKTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgIGNvbmZpZyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIGlmIChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10uaW5kZXhPZihjb25maWcubWV0aG9kKSAhPT0gLTEpIHtcbiAgICBjb25maWcuaGVhZGVycy5zZXRDb250ZW50VHlwZSgnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywgZmFsc2UpO1xuICB9XG5cbiAgY29uc3QgYWRhcHRlciA9IGFkYXB0ZXJzLmdldEFkYXB0ZXIoY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcik7XG5cbiAgcmV0dXJuIGFkYXB0ZXIoY29uZmlnKS50aGVuKGZ1bmN0aW9uIG9uQWRhcHRlclJlc29sdXRpb24ocmVzcG9uc2UpIHtcbiAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgIHJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhLmNhbGwoXG4gICAgICBjb25maWcsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2UsXG4gICAgICByZXNwb25zZVxuICAgICk7XG5cbiAgICByZXNwb25zZS5oZWFkZXJzID0gQXhpb3NIZWFkZXJzLmZyb20ocmVzcG9uc2UuaGVhZGVycyk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0sIGZ1bmN0aW9uIG9uQWRhcHRlclJlamVjdGlvbihyZWFzb24pIHtcbiAgICBpZiAoIWlzQ2FuY2VsKHJlYXNvbikpIHtcbiAgICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICAgIGlmIChyZWFzb24gJiYgcmVhc29uLnJlc3BvbnNlKSB7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2UsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzID0gQXhpb3NIZWFkZXJzLmZyb20ocmVhc29uLnJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJ0cmFuc2Zvcm1EYXRhIiwiaXNDYW5jZWwiLCJkZWZhdWx0cyIsIkNhbmNlbGVkRXJyb3IiLCJBeGlvc0hlYWRlcnMiLCJhZGFwdGVycyIsInRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQiLCJjb25maWciLCJjYW5jZWxUb2tlbiIsInRocm93SWZSZXF1ZXN0ZWQiLCJzaWduYWwiLCJhYm9ydGVkIiwiZGlzcGF0Y2hSZXF1ZXN0IiwiaGVhZGVycyIsImZyb20iLCJkYXRhIiwiY2FsbCIsInRyYW5zZm9ybVJlcXVlc3QiLCJpbmRleE9mIiwibWV0aG9kIiwic2V0Q29udGVudFR5cGUiLCJhZGFwdGVyIiwiZ2V0QWRhcHRlciIsInRoZW4iLCJvbkFkYXB0ZXJSZXNvbHV0aW9uIiwicmVzcG9uc2UiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsIm9uQWRhcHRlclJlamVjdGlvbiIsInJlYXNvbiIsIlByb21pc2UiLCJyZWplY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mergeConfig; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\nconst headersToObject = thing => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? {\n  ...thing\n} : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n  function getMergedValue(target, source, prop, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge.call({\n        caseless\n      }, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop, caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(a, b, prop, caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a, prop, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b, prop) => mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true)\n  };\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);\n  });\n  return config;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ settle; }\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('Request failed with status code ' + response.status, [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTRCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTQyxNQUFNQSxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFO0VBQ3hELE1BQU1DLGNBQWMsR0FBR0QsUUFBUSxDQUFDRSxNQUFNLENBQUNELGNBQWM7RUFDckQsSUFBSSxDQUFDRCxRQUFRLENBQUNHLE1BQU0sSUFBSSxDQUFDRixjQUFjLElBQUlBLGNBQWMsQ0FBQ0QsUUFBUSxDQUFDRyxNQUFNLENBQUMsRUFBRTtJQUMxRUwsT0FBTyxDQUFDRSxRQUFRLENBQUM7RUFDbkIsQ0FBQyxNQUFNO0lBQ0xELE1BQU0sQ0FBQyxJQUFJSCxzREFBVSxDQUNuQixrQ0FBa0MsR0FBR0ksUUFBUSxDQUFDRyxNQUFNLEVBQ3BELENBQUNQLHNFQUEwQixFQUFFQSx1RUFBMkIsQ0FBQyxDQUFDVSxJQUFJLENBQUNDLEtBQUssQ0FBQ1AsUUFBUSxDQUFDRyxNQUFNLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQ2hHSCxRQUFRLENBQUNFLE1BQU0sRUFDZkYsUUFBUSxDQUFDUSxPQUFPLEVBQ2hCUixRQUNGLENBQUMsQ0FBQztFQUNKO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcz84NzY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi9BeGlvc0Vycm9yLmpzJztcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgcmVzcG9uc2UuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIGNvbnN0IHZhbGlkYXRlU3RhdHVzID0gcmVzcG9uc2UuY29uZmlnLnZhbGlkYXRlU3RhdHVzO1xuICBpZiAoIXJlc3BvbnNlLnN0YXR1cyB8fCAhdmFsaWRhdGVTdGF0dXMgfHwgdmFsaWRhdGVTdGF0dXMocmVzcG9uc2Uuc3RhdHVzKSkge1xuICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICB9IGVsc2Uge1xuICAgIHJlamVjdChuZXcgQXhpb3NFcnJvcihcbiAgICAgICdSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICcgKyByZXNwb25zZS5zdGF0dXMsXG4gICAgICBbQXhpb3NFcnJvci5FUlJfQkFEX1JFUVVFU1QsIEF4aW9zRXJyb3IuRVJSX0JBRF9SRVNQT05TRV1bTWF0aC5mbG9vcihyZXNwb25zZS5zdGF0dXMgLyAxMDApIC0gNF0sXG4gICAgICByZXNwb25zZS5jb25maWcsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkF4aW9zRXJyb3IiLCJzZXR0bGUiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVzcG9uc2UiLCJ2YWxpZGF0ZVN0YXR1cyIsImNvbmZpZyIsInN0YXR1cyIsIkVSUl9CQURfUkVRVUVTVCIsIkVSUl9CQURfUkVTUE9OU0UiLCJNYXRoIiwiZmxvb3IiLCJyZXF1ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ transformData; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(context.headers);\n  let data = context.data;\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n  headers.normalize();\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRXFCO0FBQ1U7QUFDTzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVNHLGFBQWFBLENBQUNDLEdBQUcsRUFBRUMsUUFBUSxFQUFFO0VBQ25ELE1BQU1DLE1BQU0sR0FBRyxJQUFJLElBQUlMLDBEQUFRO0VBQy9CLE1BQU1NLE9BQU8sR0FBR0YsUUFBUSxJQUFJQyxNQUFNO0VBQ2xDLE1BQU1FLE9BQU8sR0FBR04sa0VBQWlCLENBQUNLLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO0VBQ2xELElBQUlFLElBQUksR0FBR0gsT0FBTyxDQUFDRyxJQUFJO0VBRXZCVix5REFBYSxDQUFDSSxHQUFHLEVBQUUsU0FBU1EsU0FBU0EsQ0FBQ0MsRUFBRSxFQUFFO0lBQ3hDSCxJQUFJLEdBQUdHLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDUixNQUFNLEVBQUVJLElBQUksRUFBRUYsT0FBTyxDQUFDTyxTQUFTLENBQUMsQ0FBQyxFQUFFVixRQUFRLEdBQUdBLFFBQVEsQ0FBQ1csTUFBTSxHQUFHQyxTQUFTLENBQUM7RUFDM0YsQ0FBQyxDQUFDO0VBRUZULE9BQU8sQ0FBQ08sU0FBUyxDQUFDLENBQUM7RUFFbkIsT0FBT0wsSUFBSTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzPzc2NjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi4vZGVmYXVsdHMvaW5kZXguanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tICcuLi9jb3JlL0F4aW9zSGVhZGVycy5qcyc7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEBwYXJhbSB7P09iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlIG9iamVjdFxuICpcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShmbnMsIHJlc3BvbnNlKSB7XG4gIGNvbnN0IGNvbmZpZyA9IHRoaXMgfHwgZGVmYXVsdHM7XG4gIGNvbnN0IGNvbnRleHQgPSByZXNwb25zZSB8fCBjb25maWc7XG4gIGNvbnN0IGhlYWRlcnMgPSBBeGlvc0hlYWRlcnMuZnJvbShjb250ZXh0LmhlYWRlcnMpO1xuICBsZXQgZGF0YSA9IGNvbnRleHQuZGF0YTtcblxuICB1dGlscy5mb3JFYWNoKGZucywgZnVuY3Rpb24gdHJhbnNmb3JtKGZuKSB7XG4gICAgZGF0YSA9IGZuLmNhbGwoY29uZmlnLCBkYXRhLCBoZWFkZXJzLm5vcm1hbGl6ZSgpLCByZXNwb25zZSA/IHJlc3BvbnNlLnN0YXR1cyA6IHVuZGVmaW5lZCk7XG4gIH0pO1xuXG4gIGhlYWRlcnMubm9ybWFsaXplKCk7XG5cbiAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOlsidXRpbHMiLCJkZWZhdWx0cyIsIkF4aW9zSGVhZGVycyIsInRyYW5zZm9ybURhdGEiLCJmbnMiLCJyZXNwb25zZSIsImNvbmZpZyIsImNvbnRleHQiLCJoZWFkZXJzIiwiZnJvbSIsImRhdGEiLCJmb3JFYWNoIiwidHJhbnNmb3JtIiwiZm4iLCJjYWxsIiwibm9ybWFsaXplIiwic3RhdHVzIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/defaults/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/defaults/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ \"./node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ \"./node_modules/axios/lib/helpers/toURLEncodedForm.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ \"./node_modules/axios/lib/helpers/formDataToJSON.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n  return (encoder || JSON.stringify)(rawValue);\n}\nconst defaults = {\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  adapter: ['xhr', 'http', 'fetch'],\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(data);\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(data);\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data)) : data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBuffer(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStream(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFile(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n    let isFileList;\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data, this.formSerializer).toString();\n      }\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(isFileList ? {\n          'files[]': data\n        } : data, _FormData && new _FormData(), this.formSerializer);\n      }\n    }\n    if (isObjectPayload || hasJSONContentType) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isResponse(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)) {\n      return data;\n    }\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n    return data;\n  }],\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  maxBodyLength: -1,\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.Blob\n  },\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], method => {\n  defaults.headers[method] = {};\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (defaults);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/defaults/transitional.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/defaults/transitional.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL3RyYW5zaXRpb25hbC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWIsK0RBQWU7RUFDYkEsaUJBQWlCLEVBQUUsSUFBSTtFQUN2QkMsaUJBQWlCLEVBQUUsSUFBSTtFQUN2QkMsbUJBQW1CLEVBQUU7QUFDdkIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL3RyYW5zaXRpb25hbC5qcz8yN2E0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzaWxlbnRKU09OUGFyc2luZzogdHJ1ZSxcbiAgZm9yY2VkSlNPTlBhcnNpbmc6IHRydWUsXG4gIGNsYXJpZnlUaW1lb3V0RXJyb3I6IGZhbHNlXG59O1xuIl0sIm5hbWVzIjpbInNpbGVudEpTT05QYXJzaW5nIiwiZm9yY2VkSlNPTlBhcnNpbmciLCJjbGFyaWZ5VGltZW91dEVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults/transitional.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; }\n/* harmony export */ });\nconst VERSION = \"1.7.9\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxPQUFPLEdBQUcsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzPzExMGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFZFUlNJT04gPSBcIjEuNy45XCI7Il0sIm5hbWVzIjpbIlZFUlNJT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/env/data.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!****************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\nconst prototype = AxiosURLSearchParams.prototype;\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function (value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosURLSearchParams);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvQXhpb3NVUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFNEI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTQyxNQUFNQSxDQUFDQyxHQUFHLEVBQUU7RUFDbkIsTUFBTUMsT0FBTyxHQUFHO0lBQ2QsR0FBRyxFQUFFLEtBQUs7SUFDVixHQUFHLEVBQUUsS0FBSztJQUNWLEdBQUcsRUFBRSxLQUFLO0lBQ1YsR0FBRyxFQUFFLEtBQUs7SUFDVixHQUFHLEVBQUUsS0FBSztJQUNWLEtBQUssRUFBRSxHQUFHO0lBQ1YsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUNELE9BQU9DLGtCQUFrQixDQUFDRixHQUFHLENBQUMsQ0FBQ0csT0FBTyxDQUFDLGtCQUFrQixFQUFFLFNBQVNDLFFBQVFBLENBQUNDLEtBQUssRUFBRTtJQUNsRixPQUFPSixPQUFPLENBQUNJLEtBQUssQ0FBQztFQUN2QixDQUFDLENBQUM7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0Msb0JBQW9CQSxDQUFDQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtFQUM3QyxJQUFJLENBQUNDLE1BQU0sR0FBRyxFQUFFO0VBRWhCRixNQUFNLElBQUlULDBEQUFVLENBQUNTLE1BQU0sRUFBRSxJQUFJLEVBQUVDLE9BQU8sQ0FBQztBQUM3QztBQUVBLE1BQU1FLFNBQVMsR0FBR0osb0JBQW9CLENBQUNJLFNBQVM7QUFFaERBLFNBQVMsQ0FBQ0MsTUFBTSxHQUFHLFNBQVNBLE1BQU1BLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFFO0VBQzlDLElBQUksQ0FBQ0osTUFBTSxDQUFDSyxJQUFJLENBQUMsQ0FBQ0YsSUFBSSxFQUFFQyxLQUFLLENBQUMsQ0FBQztBQUNqQyxDQUFDO0FBRURILFNBQVMsQ0FBQ0ssUUFBUSxHQUFHLFNBQVNBLFFBQVFBLENBQUNDLE9BQU8sRUFBRTtFQUM5QyxNQUFNQyxPQUFPLEdBQUdELE9BQU8sR0FBRyxVQUFTSCxLQUFLLEVBQUU7SUFDeEMsT0FBT0csT0FBTyxDQUFDRSxJQUFJLENBQUMsSUFBSSxFQUFFTCxLQUFLLEVBQUVkLE1BQU0sQ0FBQztFQUMxQyxDQUFDLEdBQUdBLE1BQU07RUFFVixPQUFPLElBQUksQ0FBQ1UsTUFBTSxDQUFDVSxHQUFHLENBQUMsU0FBU0MsSUFBSUEsQ0FBQ0MsSUFBSSxFQUFFO0lBQ3pDLE9BQU9KLE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHSixPQUFPLENBQUNJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNsRCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUNDLElBQUksQ0FBQyxHQUFHLENBQUM7QUFDbEIsQ0FBQztBQUVELCtEQUFlaEIsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9BeGlvc1VSTFNlYXJjaFBhcmFtcy5qcz85M2UyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHRvRm9ybURhdGEgZnJvbSAnLi90b0Zvcm1EYXRhLmpzJztcblxuLyoqXG4gKiBJdCBlbmNvZGVzIGEgc3RyaW5nIGJ5IHJlcGxhY2luZyBhbGwgY2hhcmFjdGVycyB0aGF0IGFyZSBub3QgaW4gdGhlIHVucmVzZXJ2ZWQgc2V0IHdpdGhcbiAqIHRoZWlyIHBlcmNlbnQtZW5jb2RlZCBlcXVpdmFsZW50c1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSBUaGUgc3RyaW5nIHRvIGVuY29kZS5cbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZW5jb2RlZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZShzdHIpIHtcbiAgY29uc3QgY2hhck1hcCA9IHtcbiAgICAnISc6ICclMjEnLFxuICAgIFwiJ1wiOiAnJTI3JyxcbiAgICAnKCc6ICclMjgnLFxuICAgICcpJzogJyUyOScsXG4gICAgJ34nOiAnJTdFJyxcbiAgICAnJTIwJzogJysnLFxuICAgICclMDAnOiAnXFx4MDAnXG4gIH07XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC9bIScoKX5dfCUyMHwlMDAvZywgZnVuY3Rpb24gcmVwbGFjZXIobWF0Y2gpIHtcbiAgICByZXR1cm4gY2hhck1hcFttYXRjaF07XG4gIH0pO1xufVxuXG4vKipcbiAqIEl0IHRha2VzIGEgcGFyYW1zIG9iamVjdCBhbmQgY29udmVydHMgaXQgdG8gYSBGb3JtRGF0YSBvYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsIGFueT59IHBhcmFtcyAtIFRoZSBwYXJhbWV0ZXJzIHRvIGJlIGNvbnZlcnRlZCB0byBhIEZvcm1EYXRhIG9iamVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0PHN0cmluZywgYW55Pn0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIG9iamVjdCBwYXNzZWQgdG8gdGhlIEF4aW9zIGNvbnN0cnVjdG9yLlxuICpcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBBeGlvc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMsIG9wdGlvbnMpIHtcbiAgdGhpcy5fcGFpcnMgPSBbXTtcblxuICBwYXJhbXMgJiYgdG9Gb3JtRGF0YShwYXJhbXMsIHRoaXMsIG9wdGlvbnMpO1xufVxuXG5jb25zdCBwcm90b3R5cGUgPSBBeGlvc1VSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGU7XG5cbnByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbiBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgdGhpcy5fcGFpcnMucHVzaChbbmFtZSwgdmFsdWVdKTtcbn07XG5cbnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKGVuY29kZXIpIHtcbiAgY29uc3QgX2VuY29kZSA9IGVuY29kZXIgPyBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBlbmNvZGVyLmNhbGwodGhpcywgdmFsdWUsIGVuY29kZSk7XG4gIH0gOiBlbmNvZGU7XG5cbiAgcmV0dXJuIHRoaXMuX3BhaXJzLm1hcChmdW5jdGlvbiBlYWNoKHBhaXIpIHtcbiAgICByZXR1cm4gX2VuY29kZShwYWlyWzBdKSArICc9JyArIF9lbmNvZGUocGFpclsxXSk7XG4gIH0sICcnKS5qb2luKCcmJyk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBeGlvc1VSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6WyJ0b0Zvcm1EYXRhIiwiZW5jb2RlIiwic3RyIiwiY2hhck1hcCIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJyZXBsYWNlciIsIm1hdGNoIiwiQXhpb3NVUkxTZWFyY2hQYXJhbXMiLCJwYXJhbXMiLCJvcHRpb25zIiwiX3BhaXJzIiwicHJvdG90eXBlIiwiYXBwZW5kIiwibmFtZSIsInZhbHVlIiwicHVzaCIsInRvU3RyaW5nIiwiZW5jb2RlciIsIl9lbmNvZGUiLCJjYWxsIiwibWFwIiwiZWFjaCIsInBhaXIiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511\n};\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (HttpStatusCode);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGNBQWMsR0FBRztFQUNyQkMsUUFBUSxFQUFFLEdBQUc7RUFDYkMsa0JBQWtCLEVBQUUsR0FBRztFQUN2QkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsRUFBRSxFQUFFLEdBQUc7RUFDUEMsT0FBTyxFQUFFLEdBQUc7RUFDWkMsUUFBUSxFQUFFLEdBQUc7RUFDYkMsMkJBQTJCLEVBQUUsR0FBRztFQUNoQ0MsU0FBUyxFQUFFLEdBQUc7RUFDZEMsWUFBWSxFQUFFLEdBQUc7RUFDakJDLGNBQWMsRUFBRSxHQUFHO0VBQ25CQyxXQUFXLEVBQUUsR0FBRztFQUNoQkMsZUFBZSxFQUFFLEdBQUc7RUFDcEJDLE1BQU0sRUFBRSxHQUFHO0VBQ1hDLGVBQWUsRUFBRSxHQUFHO0VBQ3BCQyxnQkFBZ0IsRUFBRSxHQUFHO0VBQ3JCQyxLQUFLLEVBQUUsR0FBRztFQUNWQyxRQUFRLEVBQUUsR0FBRztFQUNiQyxXQUFXLEVBQUUsR0FBRztFQUNoQkMsUUFBUSxFQUFFLEdBQUc7RUFDYkMsTUFBTSxFQUFFLEdBQUc7RUFDWEMsaUJBQWlCLEVBQUUsR0FBRztFQUN0QkMsaUJBQWlCLEVBQUUsR0FBRztFQUN0QkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsWUFBWSxFQUFFLEdBQUc7RUFDakJDLGVBQWUsRUFBRSxHQUFHO0VBQ3BCQyxTQUFTLEVBQUUsR0FBRztFQUNkQyxRQUFRLEVBQUUsR0FBRztFQUNiQyxnQkFBZ0IsRUFBRSxHQUFHO0VBQ3JCQyxhQUFhLEVBQUUsR0FBRztFQUNsQkMsMkJBQTJCLEVBQUUsR0FBRztFQUNoQ0MsY0FBYyxFQUFFLEdBQUc7RUFDbkJDLFFBQVEsRUFBRSxHQUFHO0VBQ2JDLElBQUksRUFBRSxHQUFHO0VBQ1RDLGNBQWMsRUFBRSxHQUFHO0VBQ25CQyxrQkFBa0IsRUFBRSxHQUFHO0VBQ3ZCQyxlQUFlLEVBQUUsR0FBRztFQUNwQkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsb0JBQW9CLEVBQUUsR0FBRztFQUN6QkMsbUJBQW1CLEVBQUUsR0FBRztFQUN4QkMsaUJBQWlCLEVBQUUsR0FBRztFQUN0QkMsU0FBUyxFQUFFLEdBQUc7RUFDZEMsa0JBQWtCLEVBQUUsR0FBRztFQUN2QkMsbUJBQW1CLEVBQUUsR0FBRztFQUN4QkMsTUFBTSxFQUFFLEdBQUc7RUFDWEMsZ0JBQWdCLEVBQUUsR0FBRztFQUNyQkMsUUFBUSxFQUFFLEdBQUc7RUFDYkMsZUFBZSxFQUFFLEdBQUc7RUFDcEJDLG9CQUFvQixFQUFFLEdBQUc7RUFDekJDLGVBQWUsRUFBRSxHQUFHO0VBQ3BCQywyQkFBMkIsRUFBRSxHQUFHO0VBQ2hDQywwQkFBMEIsRUFBRSxHQUFHO0VBQy9CQyxtQkFBbUIsRUFBRSxHQUFHO0VBQ3hCQyxjQUFjLEVBQUUsR0FBRztFQUNuQkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsa0JBQWtCLEVBQUUsR0FBRztFQUN2QkMsY0FBYyxFQUFFLEdBQUc7RUFDbkJDLHVCQUF1QixFQUFFLEdBQUc7RUFDNUJDLHFCQUFxQixFQUFFLEdBQUc7RUFDMUJDLG1CQUFtQixFQUFFLEdBQUc7RUFDeEJDLFlBQVksRUFBRSxHQUFHO0VBQ2pCQyxXQUFXLEVBQUUsR0FBRztFQUNoQkMsNkJBQTZCLEVBQUU7QUFDakMsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sQ0FBQ2pFLGNBQWMsQ0FBQyxDQUFDa0UsT0FBTyxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxLQUFLLENBQUMsS0FBSztFQUN2RHBFLGNBQWMsQ0FBQ29FLEtBQUssQ0FBQyxHQUFHRCxHQUFHO0FBQzdCLENBQUMsQ0FBQztBQUVGLCtEQUFlbkUsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanM/YzZmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIdHRwU3RhdHVzQ29kZSA9IHtcbiAgQ29udGludWU6IDEwMCxcbiAgU3dpdGNoaW5nUHJvdG9jb2xzOiAxMDEsXG4gIFByb2Nlc3Npbmc6IDEwMixcbiAgRWFybHlIaW50czogMTAzLFxuICBPazogMjAwLFxuICBDcmVhdGVkOiAyMDEsXG4gIEFjY2VwdGVkOiAyMDIsXG4gIE5vbkF1dGhvcml0YXRpdmVJbmZvcm1hdGlvbjogMjAzLFxuICBOb0NvbnRlbnQ6IDIwNCxcbiAgUmVzZXRDb250ZW50OiAyMDUsXG4gIFBhcnRpYWxDb250ZW50OiAyMDYsXG4gIE11bHRpU3RhdHVzOiAyMDcsXG4gIEFscmVhZHlSZXBvcnRlZDogMjA4LFxuICBJbVVzZWQ6IDIyNixcbiAgTXVsdGlwbGVDaG9pY2VzOiAzMDAsXG4gIE1vdmVkUGVybWFuZW50bHk6IDMwMSxcbiAgRm91bmQ6IDMwMixcbiAgU2VlT3RoZXI6IDMwMyxcbiAgTm90TW9kaWZpZWQ6IDMwNCxcbiAgVXNlUHJveHk6IDMwNSxcbiAgVW51c2VkOiAzMDYsXG4gIFRlbXBvcmFyeVJlZGlyZWN0OiAzMDcsXG4gIFBlcm1hbmVudFJlZGlyZWN0OiAzMDgsXG4gIEJhZFJlcXVlc3Q6IDQwMCxcbiAgVW5hdXRob3JpemVkOiA0MDEsXG4gIFBheW1lbnRSZXF1aXJlZDogNDAyLFxuICBGb3JiaWRkZW46IDQwMyxcbiAgTm90Rm91bmQ6IDQwNCxcbiAgTWV0aG9kTm90QWxsb3dlZDogNDA1LFxuICBOb3RBY2NlcHRhYmxlOiA0MDYsXG4gIFByb3h5QXV0aGVudGljYXRpb25SZXF1aXJlZDogNDA3LFxuICBSZXF1ZXN0VGltZW91dDogNDA4LFxuICBDb25mbGljdDogNDA5LFxuICBHb25lOiA0MTAsXG4gIExlbmd0aFJlcXVpcmVkOiA0MTEsXG4gIFByZWNvbmRpdGlvbkZhaWxlZDogNDEyLFxuICBQYXlsb2FkVG9vTGFyZ2U6IDQxMyxcbiAgVXJpVG9vTG9uZzogNDE0LFxuICBVbnN1cHBvcnRlZE1lZGlhVHlwZTogNDE1LFxuICBSYW5nZU5vdFNhdGlzZmlhYmxlOiA0MTYsXG4gIEV4cGVjdGF0aW9uRmFpbGVkOiA0MTcsXG4gIEltQVRlYXBvdDogNDE4LFxuICBNaXNkaXJlY3RlZFJlcXVlc3Q6IDQyMSxcbiAgVW5wcm9jZXNzYWJsZUVudGl0eTogNDIyLFxuICBMb2NrZWQ6IDQyMyxcbiAgRmFpbGVkRGVwZW5kZW5jeTogNDI0LFxuICBUb29FYXJseTogNDI1LFxuICBVcGdyYWRlUmVxdWlyZWQ6IDQyNixcbiAgUHJlY29uZGl0aW9uUmVxdWlyZWQ6IDQyOCxcbiAgVG9vTWFueVJlcXVlc3RzOiA0MjksXG4gIFJlcXVlc3RIZWFkZXJGaWVsZHNUb29MYXJnZTogNDMxLFxuICBVbmF2YWlsYWJsZUZvckxlZ2FsUmVhc29uczogNDUxLFxuICBJbnRlcm5hbFNlcnZlckVycm9yOiA1MDAsXG4gIE5vdEltcGxlbWVudGVkOiA1MDEsXG4gIEJhZEdhdGV3YXk6IDUwMixcbiAgU2VydmljZVVuYXZhaWxhYmxlOiA1MDMsXG4gIEdhdGV3YXlUaW1lb3V0OiA1MDQsXG4gIEh0dHBWZXJzaW9uTm90U3VwcG9ydGVkOiA1MDUsXG4gIFZhcmlhbnRBbHNvTmVnb3RpYXRlczogNTA2LFxuICBJbnN1ZmZpY2llbnRTdG9yYWdlOiA1MDcsXG4gIExvb3BEZXRlY3RlZDogNTA4LFxuICBOb3RFeHRlbmRlZDogNTEwLFxuICBOZXR3b3JrQXV0aGVudGljYXRpb25SZXF1aXJlZDogNTExLFxufTtcblxuT2JqZWN0LmVudHJpZXMoSHR0cFN0YXR1c0NvZGUpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICBIdHRwU3RhdHVzQ29kZVt2YWx1ZV0gPSBrZXk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgSHR0cFN0YXR1c0NvZGU7XG4iXSwibmFtZXMiOlsiSHR0cFN0YXR1c0NvZGUiLCJDb250aW51ZSIsIlN3aXRjaGluZ1Byb3RvY29scyIsIlByb2Nlc3NpbmciLCJFYXJseUhpbnRzIiwiT2siLCJDcmVhdGVkIiwiQWNjZXB0ZWQiLCJOb25BdXRob3JpdGF0aXZlSW5mb3JtYXRpb24iLCJOb0NvbnRlbnQiLCJSZXNldENvbnRlbnQiLCJQYXJ0aWFsQ29udGVudCIsIk11bHRpU3RhdHVzIiwiQWxyZWFkeVJlcG9ydGVkIiwiSW1Vc2VkIiwiTXVsdGlwbGVDaG9pY2VzIiwiTW92ZWRQZXJtYW5lbnRseSIsIkZvdW5kIiwiU2VlT3RoZXIiLCJOb3RNb2RpZmllZCIsIlVzZVByb3h5IiwiVW51c2VkIiwiVGVtcG9yYXJ5UmVkaXJlY3QiLCJQZXJtYW5lbnRSZWRpcmVjdCIsIkJhZFJlcXVlc3QiLCJVbmF1dGhvcml6ZWQiLCJQYXltZW50UmVxdWlyZWQiLCJGb3JiaWRkZW4iLCJOb3RGb3VuZCIsIk1ldGhvZE5vdEFsbG93ZWQiLCJOb3RBY2NlcHRhYmxlIiwiUHJveHlBdXRoZW50aWNhdGlvblJlcXVpcmVkIiwiUmVxdWVzdFRpbWVvdXQiLCJDb25mbGljdCIsIkdvbmUiLCJMZW5ndGhSZXF1aXJlZCIsIlByZWNvbmRpdGlvbkZhaWxlZCIsIlBheWxvYWRUb29MYXJnZSIsIlVyaVRvb0xvbmciLCJVbnN1cHBvcnRlZE1lZGlhVHlwZSIsIlJhbmdlTm90U2F0aXNmaWFibGUiLCJFeHBlY3RhdGlvbkZhaWxlZCIsIkltQVRlYXBvdCIsIk1pc2RpcmVjdGVkUmVxdWVzdCIsIlVucHJvY2Vzc2FibGVFbnRpdHkiLCJMb2NrZWQiLCJGYWlsZWREZXBlbmRlbmN5IiwiVG9vRWFybHkiLCJVcGdyYWRlUmVxdWlyZWQiLCJQcmVjb25kaXRpb25SZXF1aXJlZCIsIlRvb01hbnlSZXF1ZXN0cyIsIlJlcXVlc3RIZWFkZXJGaWVsZHNUb29MYXJnZSIsIlVuYXZhaWxhYmxlRm9yTGVnYWxSZWFzb25zIiwiSW50ZXJuYWxTZXJ2ZXJFcnJvciIsIk5vdEltcGxlbWVudGVkIiwiQmFkR2F0ZXdheSIsIlNlcnZpY2VVbmF2YWlsYWJsZSIsIkdhdGV3YXlUaW1lb3V0IiwiSHR0cFZlcnNpb25Ob3RTdXBwb3J0ZWQiLCJWYXJpYW50QWxzb05lZ290aWF0ZXMiLCJJbnN1ZmZpY2llbnRTdG9yYWdlIiwiTG9vcERldGVjdGVkIiwiTm90RXh0ZW5kZWQiLCJOZXR3b3JrQXV0aGVudGljYXRpb25SZXF1aXJlZCIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwia2V5IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/HttpStatusCode.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ bind; }\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUUsU0FBU0EsSUFBSUEsQ0FBQ0MsRUFBRSxFQUFFQyxPQUFPLEVBQUU7RUFDeEMsT0FBTyxTQUFTQyxJQUFJQSxDQUFBLEVBQUc7SUFDckIsT0FBT0YsRUFBRSxDQUFDRyxLQUFLLENBQUNGLE9BQU8sRUFBRUcsU0FBUyxDQUFDO0VBQ3JDLENBQUM7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcz80YmVhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJndW1lbnRzKTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJiaW5kIiwiZm4iLCJ0aGlzQXJnIiwid3JhcCIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildURL; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  const _encode = options && options.encode || encode;\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  }\n  const serializeFn = options && options.serialize;\n  let serializedParams;\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ? params.toString() : new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n  return url;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRW1CO0FBQ3NDOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0UsTUFBTUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQ25CLE9BQU9DLGtCQUFrQixDQUFDRCxHQUFHLENBQUMsQ0FDNUJFLE9BQU8sQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQ3JCQSxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUNwQkEsT0FBTyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FDckJBLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQ3BCQSxPQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUNyQkEsT0FBTyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUM7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2UsU0FBU0MsUUFBUUEsQ0FBQ0MsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtFQUNyRDtFQUNBLElBQUksQ0FBQ0QsTUFBTSxFQUFFO0lBQ1gsT0FBT0QsR0FBRztFQUNaO0VBRUEsTUFBTUcsT0FBTyxHQUFHRCxPQUFPLElBQUlBLE9BQU8sQ0FBQ1AsTUFBTSxJQUFJQSxNQUFNO0VBRW5ELElBQUlGLDREQUFnQixDQUFDUyxPQUFPLENBQUMsRUFBRTtJQUM3QkEsT0FBTyxHQUFHO01BQ1JHLFNBQVMsRUFBRUg7SUFDYixDQUFDO0VBQ0g7RUFFQSxNQUFNSSxXQUFXLEdBQUdKLE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxTQUFTO0VBRWhELElBQUlFLGdCQUFnQjtFQUVwQixJQUFJRCxXQUFXLEVBQUU7SUFDZkMsZ0JBQWdCLEdBQUdELFdBQVcsQ0FBQ0wsTUFBTSxFQUFFQyxPQUFPLENBQUM7RUFDakQsQ0FBQyxNQUFNO0lBQ0xLLGdCQUFnQixHQUFHZCxtRUFBdUIsQ0FBQ1EsTUFBTSxDQUFDLEdBQ2hEQSxNQUFNLENBQUNRLFFBQVEsQ0FBQyxDQUFDLEdBQ2pCLElBQUlmLHdFQUFvQixDQUFDTyxNQUFNLEVBQUVDLE9BQU8sQ0FBQyxDQUFDTyxRQUFRLENBQUNOLE9BQU8sQ0FBQztFQUMvRDtFQUVBLElBQUlJLGdCQUFnQixFQUFFO0lBQ3BCLE1BQU1HLGFBQWEsR0FBR1YsR0FBRyxDQUFDVyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBRXRDLElBQUlELGFBQWEsS0FBSyxDQUFDLENBQUMsRUFBRTtNQUN4QlYsR0FBRyxHQUFHQSxHQUFHLENBQUNZLEtBQUssQ0FBQyxDQUFDLEVBQUVGLGFBQWEsQ0FBQztJQUNuQztJQUNBVixHQUFHLElBQUksQ0FBQ0EsR0FBRyxDQUFDVyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSUosZ0JBQWdCO0VBQ2pFO0VBRUEsT0FBT1AsR0FBRztBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcz9jMTc4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBBeGlvc1VSTFNlYXJjaFBhcmFtcyBmcm9tICcuLi9oZWxwZXJzL0F4aW9zVVJMU2VhcmNoUGFyYW1zLmpzJztcblxuLyoqXG4gKiBJdCByZXBsYWNlcyBhbGwgaW5zdGFuY2VzIG9mIHRoZSBjaGFyYWN0ZXJzIGA6YCwgYCRgLCBgLGAsIGArYCwgYFtgLCBhbmQgYF1gIHdpdGggdGhlaXJcbiAqIFVSSSBlbmNvZGVkIGNvdW50ZXJwYXJ0c1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWwgVGhlIHZhbHVlIHRvIGJlIGVuY29kZWQuXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGVuY29kZWQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcGFyYW0gez8ob2JqZWN0fEZ1bmN0aW9uKX0gb3B0aW9uc1xuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgXG4gIGNvbnN0IF9lbmNvZGUgPSBvcHRpb25zICYmIG9wdGlvbnMuZW5jb2RlIHx8IGVuY29kZTtcblxuICBpZiAodXRpbHMuaXNGdW5jdGlvbihvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICBzZXJpYWxpemU6IG9wdGlvbnNcbiAgICB9O1xuICB9IFxuXG4gIGNvbnN0IHNlcmlhbGl6ZUZuID0gb3B0aW9ucyAmJiBvcHRpb25zLnNlcmlhbGl6ZTtcblxuICBsZXQgc2VyaWFsaXplZFBhcmFtcztcblxuICBpZiAoc2VyaWFsaXplRm4pIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gc2VyaWFsaXplRm4ocGFyYW1zLCBvcHRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gdXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSA/XG4gICAgICBwYXJhbXMudG9TdHJpbmcoKSA6XG4gICAgICBuZXcgQXhpb3NVUkxTZWFyY2hQYXJhbXMocGFyYW1zLCBvcHRpb25zKS50b1N0cmluZyhfZW5jb2RlKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgY29uc3QgaGFzaG1hcmtJbmRleCA9IHVybC5pbmRleE9mKFwiI1wiKTtcblxuICAgIGlmIChoYXNobWFya0luZGV4ICE9PSAtMSkge1xuICAgICAgdXJsID0gdXJsLnNsaWNlKDAsIGhhc2htYXJrSW5kZXgpO1xuICAgIH1cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufVxuIl0sIm5hbWVzIjpbInV0aWxzIiwiQXhpb3NVUkxTZWFyY2hQYXJhbXMiLCJlbmNvZGUiLCJ2YWwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlIiwiYnVpbGRVUkwiLCJ1cmwiLCJwYXJhbXMiLCJvcHRpb25zIiwiX2VuY29kZSIsImlzRnVuY3Rpb24iLCJzZXJpYWxpemUiLCJzZXJpYWxpemVGbiIsInNlcmlhbGl6ZWRQYXJhbXMiLCJpc1VSTFNlYXJjaFBhcmFtcyIsInRvU3RyaW5nIiwiaGFzaG1hcmtJbmRleCIsImluZGV4T2YiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ combineURLs; }\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTQSxXQUFXQSxDQUFDQyxPQUFPLEVBQUVDLFdBQVcsRUFBRTtFQUN4RCxPQUFPQSxXQUFXLEdBQ2RELE9BQU8sQ0FBQ0UsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUdELFdBQVcsQ0FBQ0MsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FDckVGLE9BQU87QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanM/NmJjNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8/XFwvJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufVxuIl0sIm5hbWVzIjpbImNvbWJpbmVVUkxzIiwiYmFzZVVSTCIsInJlbGF0aXZlVVJMIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/composeSignals.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/composeSignals.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\nconst composeSignals = (signals, timeout) => {\n  const {\n    length\n  } = signals = signals ? signals.filter(Boolean) : [];\n  if (timeout || length) {\n    let controller = new AbortController();\n    let aborted;\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? err : new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](err instanceof Error ? err.message : err));\n      }\n    };\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`timeout ${timeout} of ms exceeded`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ETIMEDOUT));\n    }, timeout);\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    };\n    signals.forEach(signal => signal.addEventListener('abort', onabort));\n    const {\n      signal\n    } = controller;\n    signal.unsubscribe = () => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(unsubscribe);\n    return signal;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (composeSignals);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tcG9zZVNpZ25hbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUF1RDtBQUNSO0FBQ2Y7QUFFaEMsTUFBTUcsY0FBYyxHQUFHQSxDQUFDQyxPQUFPLEVBQUVDLE9BQU8sS0FBSztFQUMzQyxNQUFNO0lBQUNDO0VBQU0sQ0FBQyxHQUFJRixPQUFPLEdBQUdBLE9BQU8sR0FBR0EsT0FBTyxDQUFDRyxNQUFNLENBQUNDLE9BQU8sQ0FBQyxHQUFHLEVBQUc7RUFFbkUsSUFBSUgsT0FBTyxJQUFJQyxNQUFNLEVBQUU7SUFDckIsSUFBSUcsVUFBVSxHQUFHLElBQUlDLGVBQWUsQ0FBQyxDQUFDO0lBRXRDLElBQUlDLE9BQU87SUFFWCxNQUFNQyxPQUFPLEdBQUcsU0FBQUEsQ0FBVUMsTUFBTSxFQUFFO01BQ2hDLElBQUksQ0FBQ0YsT0FBTyxFQUFFO1FBQ1pBLE9BQU8sR0FBRyxJQUFJO1FBQ2RHLFdBQVcsQ0FBQyxDQUFDO1FBQ2IsTUFBTUMsR0FBRyxHQUFHRixNQUFNLFlBQVlHLEtBQUssR0FBR0gsTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTTtRQUMxREosVUFBVSxDQUFDUSxLQUFLLENBQUNGLEdBQUcsWUFBWWQsMkRBQVUsR0FBR2MsR0FBRyxHQUFHLElBQUlmLGdFQUFhLENBQUNlLEdBQUcsWUFBWUMsS0FBSyxHQUFHRCxHQUFHLENBQUNHLE9BQU8sR0FBR0gsR0FBRyxDQUFDLENBQUM7TUFDakg7SUFDRixDQUFDO0lBRUQsSUFBSUksS0FBSyxHQUFHZCxPQUFPLElBQUllLFVBQVUsQ0FBQyxNQUFNO01BQ3RDRCxLQUFLLEdBQUcsSUFBSTtNQUNaUCxPQUFPLENBQUMsSUFBSVgsMkRBQVUsQ0FBQyxXQUFXSSxPQUFPLGlCQUFpQixFQUFFSixxRUFBb0IsQ0FBQyxDQUFDO0lBQ3BGLENBQUMsRUFBRUksT0FBTyxDQUFDO0lBRVgsTUFBTVMsV0FBVyxHQUFHQSxDQUFBLEtBQU07TUFDeEIsSUFBSVYsT0FBTyxFQUFFO1FBQ1hlLEtBQUssSUFBSUcsWUFBWSxDQUFDSCxLQUFLLENBQUM7UUFDNUJBLEtBQUssR0FBRyxJQUFJO1FBQ1pmLE9BQU8sQ0FBQ21CLE9BQU8sQ0FBQ0MsTUFBTSxJQUFJO1VBQ3hCQSxNQUFNLENBQUNWLFdBQVcsR0FBR1UsTUFBTSxDQUFDVixXQUFXLENBQUNGLE9BQU8sQ0FBQyxHQUFHWSxNQUFNLENBQUNDLG1CQUFtQixDQUFDLE9BQU8sRUFBRWIsT0FBTyxDQUFDO1FBQ2pHLENBQUMsQ0FBQztRQUNGUixPQUFPLEdBQUcsSUFBSTtNQUNoQjtJQUNGLENBQUM7SUFFREEsT0FBTyxDQUFDbUIsT0FBTyxDQUFFQyxNQUFNLElBQUtBLE1BQU0sQ0FBQ0UsZ0JBQWdCLENBQUMsT0FBTyxFQUFFZCxPQUFPLENBQUMsQ0FBQztJQUV0RSxNQUFNO01BQUNZO0lBQU0sQ0FBQyxHQUFHZixVQUFVO0lBRTNCZSxNQUFNLENBQUNWLFdBQVcsR0FBRyxNQUFNWixzREFBVSxDQUFDWSxXQUFXLENBQUM7SUFFbEQsT0FBT1UsTUFBTTtFQUNmO0FBQ0YsQ0FBQztBQUVELCtEQUFlckIsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tcG9zZVNpZ25hbHMuanM/YTY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tIFwiLi4vY2FuY2VsL0NhbmNlbGVkRXJyb3IuanNcIjtcbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gXCIuLi9jb3JlL0F4aW9zRXJyb3IuanNcIjtcbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbmNvbnN0IGNvbXBvc2VTaWduYWxzID0gKHNpZ25hbHMsIHRpbWVvdXQpID0+IHtcbiAgY29uc3Qge2xlbmd0aH0gPSAoc2lnbmFscyA9IHNpZ25hbHMgPyBzaWduYWxzLmZpbHRlcihCb29sZWFuKSA6IFtdKTtcblxuICBpZiAodGltZW91dCB8fCBsZW5ndGgpIHtcbiAgICBsZXQgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcblxuICAgIGxldCBhYm9ydGVkO1xuXG4gICAgY29uc3Qgb25hYm9ydCA9IGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgIGlmICghYWJvcnRlZCkge1xuICAgICAgICBhYm9ydGVkID0gdHJ1ZTtcbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgY29uc3QgZXJyID0gcmVhc29uIGluc3RhbmNlb2YgRXJyb3IgPyByZWFzb24gOiB0aGlzLnJlYXNvbjtcbiAgICAgICAgY29udHJvbGxlci5hYm9ydChlcnIgaW5zdGFuY2VvZiBBeGlvc0Vycm9yID8gZXJyIDogbmV3IENhbmNlbGVkRXJyb3IoZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IGVycikpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCB0aW1lciA9IHRpbWVvdXQgJiYgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aW1lciA9IG51bGw7XG4gICAgICBvbmFib3J0KG5ldyBBeGlvc0Vycm9yKGB0aW1lb3V0ICR7dGltZW91dH0gb2YgbXMgZXhjZWVkZWRgLCBBeGlvc0Vycm9yLkVUSU1FRE9VVCkpXG4gICAgfSwgdGltZW91dClcblxuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gKCkgPT4ge1xuICAgICAgaWYgKHNpZ25hbHMpIHtcbiAgICAgICAgdGltZXIgJiYgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgdGltZXIgPSBudWxsO1xuICAgICAgICBzaWduYWxzLmZvckVhY2goc2lnbmFsID0+IHtcbiAgICAgICAgICBzaWduYWwudW5zdWJzY3JpYmUgPyBzaWduYWwudW5zdWJzY3JpYmUob25hYm9ydCkgOiBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbmFib3J0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNpZ25hbHMgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNpZ25hbHMuZm9yRWFjaCgoc2lnbmFsKSA9PiBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbmFib3J0KSk7XG5cbiAgICBjb25zdCB7c2lnbmFsfSA9IGNvbnRyb2xsZXI7XG5cbiAgICBzaWduYWwudW5zdWJzY3JpYmUgPSAoKSA9PiB1dGlscy5hc2FwKHVuc3Vic2NyaWJlKTtcblxuICAgIHJldHVybiBzaWduYWw7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZVNpZ25hbHM7XG4iXSwibmFtZXMiOlsiQ2FuY2VsZWRFcnJvciIsIkF4aW9zRXJyb3IiLCJ1dGlscyIsImNvbXBvc2VTaWduYWxzIiwic2lnbmFscyIsInRpbWVvdXQiLCJsZW5ndGgiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY29udHJvbGxlciIsIkFib3J0Q29udHJvbGxlciIsImFib3J0ZWQiLCJvbmFib3J0IiwicmVhc29uIiwidW5zdWJzY3JpYmUiLCJlcnIiLCJFcnJvciIsImFib3J0IiwibWVzc2FnZSIsInRpbWVyIiwic2V0VGltZW91dCIsIkVUSU1FRE9VVCIsImNsZWFyVGltZW91dCIsImZvckVhY2giLCJzaWduYWwiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFzYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/composeSignals.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n// Standard browser envs support document.cookie\n{\n  write(name, value, expires, path, domain, secure) {\n    const cookie = [name + '=' + encodeURIComponent(value)];\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path) && cookie.push('path=' + path);\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain) && cookie.push('domain=' + domain);\n    secure === true && cookie.push('secure');\n    document.cookie = cookie.join('; ');\n  },\n  read(name) {\n    const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n    return match ? decodeURIComponent(match[3]) : null;\n  },\n  remove(name) {\n    this.write(name, '', Date.now() - 86400000);\n  }\n} :\n// Non-standard browser env (web workers, react-native) lack needed support.\n{\n  write() {},\n  read() {\n    return null;\n  },\n  remove() {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBa0M7QUFDVTtBQUU1QywrREFBZUMsZ0ZBQThCO0FBRTNDO0FBQ0E7RUFDRUUsS0FBS0EsQ0FBQ0MsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRTtJQUNoRCxNQUFNQyxNQUFNLEdBQUcsQ0FBQ04sSUFBSSxHQUFHLEdBQUcsR0FBR08sa0JBQWtCLENBQUNOLEtBQUssQ0FBQyxDQUFDO0lBRXZETCwwREFBYyxDQUFDTSxPQUFPLENBQUMsSUFBSUksTUFBTSxDQUFDRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUlDLElBQUksQ0FBQ1IsT0FBTyxDQUFDLENBQUNTLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFFcEZmLDBEQUFjLENBQUNPLElBQUksQ0FBQyxJQUFJRyxNQUFNLENBQUNHLElBQUksQ0FBQyxPQUFPLEdBQUdOLElBQUksQ0FBQztJQUVuRFAsMERBQWMsQ0FBQ1EsTUFBTSxDQUFDLElBQUlFLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLFNBQVMsR0FBR0wsTUFBTSxDQUFDO0lBRXpEQyxNQUFNLEtBQUssSUFBSSxJQUFJQyxNQUFNLENBQUNHLElBQUksQ0FBQyxRQUFRLENBQUM7SUFFeENJLFFBQVEsQ0FBQ1AsTUFBTSxHQUFHQSxNQUFNLENBQUNRLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDckMsQ0FBQztFQUVEQyxJQUFJQSxDQUFDZixJQUFJLEVBQUU7SUFDVCxNQUFNZ0IsS0FBSyxHQUFHSCxRQUFRLENBQUNQLE1BQU0sQ0FBQ1UsS0FBSyxDQUFDLElBQUlDLE1BQU0sQ0FBQyxZQUFZLEdBQUdqQixJQUFJLEdBQUcsV0FBVyxDQUFDLENBQUM7SUFDbEYsT0FBUWdCLEtBQUssR0FBR0Usa0JBQWtCLENBQUNGLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUk7RUFDckQsQ0FBQztFQUVERyxNQUFNQSxDQUFDbkIsSUFBSSxFQUFFO0lBQ1gsSUFBSSxDQUFDRCxLQUFLLENBQUNDLElBQUksRUFBRSxFQUFFLEVBQUVVLElBQUksQ0FBQ1UsR0FBRyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUM7RUFDN0M7QUFDRixDQUFDO0FBSUQ7QUFDQTtFQUNFckIsS0FBS0EsQ0FBQSxFQUFHLENBQUMsQ0FBQztFQUNWZ0IsSUFBSUEsQ0FBQSxFQUFHO0lBQ0wsT0FBTyxJQUFJO0VBQ2IsQ0FBQztFQUNESSxNQUFNQSxDQUFBLEVBQUcsQ0FBQztBQUNaLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanM/MWQzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0vaW5kZXguanMnO1xuXG5leHBvcnQgZGVmYXVsdCBwbGF0Zm9ybS5oYXNTdGFuZGFyZEJyb3dzZXJFbnYgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICB7XG4gICAgd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICBjb25zdCBjb29raWUgPSBbbmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSldO1xuXG4gICAgICB1dGlscy5pc051bWJlcihleHBpcmVzKSAmJiBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG5cbiAgICAgIHV0aWxzLmlzU3RyaW5nKHBhdGgpICYmIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcblxuICAgICAgdXRpbHMuaXNTdHJpbmcoZG9tYWluKSAmJiBjb29raWUucHVzaCgnZG9tYWluPScgKyBkb21haW4pO1xuXG4gICAgICBzZWN1cmUgPT09IHRydWUgJiYgY29va2llLnB1c2goJ3NlY3VyZScpO1xuXG4gICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICB9LFxuXG4gICAgcmVhZChuYW1lKSB7XG4gICAgICBjb25zdCBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgIH0sXG5cbiAgICByZW1vdmUobmFtZSkge1xuICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICB9XG4gIH1cblxuICA6XG5cbiAgLy8gTm9uLXN0YW5kYXJkIGJyb3dzZXIgZW52ICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICB7XG4gICAgd3JpdGUoKSB7fSxcbiAgICByZWFkKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICByZW1vdmUoKSB7fVxuICB9O1xuXG4iXSwibmFtZXMiOlsidXRpbHMiLCJwbGF0Zm9ybSIsImhhc1N0YW5kYXJkQnJvd3NlckVudiIsIndyaXRlIiwibmFtZSIsInZhbHVlIiwiZXhwaXJlcyIsInBhdGgiLCJkb21haW4iLCJzZWN1cmUiLCJjb29raWUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJpc051bWJlciIsInB1c2giLCJEYXRlIiwidG9HTVRTdHJpbmciLCJpc1N0cmluZyIsImRvY3VtZW50Iiwiam9pbiIsInJlYWQiLCJtYXRjaCIsIlJlZ0V4cCIsImRlY29kZVVSSUNvbXBvbmVudCIsInJlbW92ZSIsIm5vdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/formDataToJSON.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    if (name === '__proto__') return true;\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target) ? target.length : name;\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n      return !isNumericKey;\n    }\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(target[name])) {\n      target[name] = [];\n    }\n    const result = buildPath(path, value, target[name], index);\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n    return !isNumericKey;\n  }\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(formData.entries)) {\n    const obj = {};\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n    return obj;\n  }\n  return null;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (formDataToJSON);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvZm9ybURhdGFUb0pTT04uanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFbUI7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0MsYUFBYUEsQ0FBQ0MsSUFBSSxFQUFFO0VBQzNCO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsT0FBT0YsMERBQWMsQ0FBQyxlQUFlLEVBQUVFLElBQUksQ0FBQyxDQUFDRSxHQUFHLENBQUNDLEtBQUssSUFBSTtJQUN4RCxPQUFPQSxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxHQUFHLEVBQUUsR0FBR0EsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJQSxLQUFLLENBQUMsQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0MsYUFBYUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQzFCLE1BQU1DLEdBQUcsR0FBRyxDQUFDLENBQUM7RUFDZCxNQUFNQyxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0QsSUFBSSxDQUFDRixHQUFHLENBQUM7RUFDN0IsSUFBSUksQ0FBQztFQUNMLE1BQU1DLEdBQUcsR0FBR0gsSUFBSSxDQUFDSSxNQUFNO0VBQ3ZCLElBQUlDLEdBQUc7RUFDUCxLQUFLSCxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdDLEdBQUcsRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDeEJHLEdBQUcsR0FBR0wsSUFBSSxDQUFDRSxDQUFDLENBQUM7SUFDYkgsR0FBRyxDQUFDTSxHQUFHLENBQUMsR0FBR1AsR0FBRyxDQUFDTyxHQUFHLENBQUM7RUFDckI7RUFDQSxPQUFPTixHQUFHO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTTyxjQUFjQSxDQUFDQyxRQUFRLEVBQUU7RUFDaEMsU0FBU0MsU0FBU0EsQ0FBQ0MsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFO0lBQzdDLElBQUluQixJQUFJLEdBQUdnQixJQUFJLENBQUNHLEtBQUssRUFBRSxDQUFDO0lBRXhCLElBQUluQixJQUFJLEtBQUssV0FBVyxFQUFFLE9BQU8sSUFBSTtJQUVyQyxNQUFNb0IsWUFBWSxHQUFHQyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxDQUFDdEIsSUFBSSxDQUFDO0lBQzNDLE1BQU11QixNQUFNLEdBQUdKLEtBQUssSUFBSUgsSUFBSSxDQUFDTCxNQUFNO0lBQ25DWCxJQUFJLEdBQUcsQ0FBQ0EsSUFBSSxJQUFJRix5REFBYSxDQUFDb0IsTUFBTSxDQUFDLEdBQUdBLE1BQU0sQ0FBQ1AsTUFBTSxHQUFHWCxJQUFJO0lBRTVELElBQUl1QixNQUFNLEVBQUU7TUFDVixJQUFJekIsNERBQWdCLENBQUNvQixNQUFNLEVBQUVsQixJQUFJLENBQUMsRUFBRTtRQUNsQ2tCLE1BQU0sQ0FBQ2xCLElBQUksQ0FBQyxHQUFHLENBQUNrQixNQUFNLENBQUNsQixJQUFJLENBQUMsRUFBRWlCLEtBQUssQ0FBQztNQUN0QyxDQUFDLE1BQU07UUFDTEMsTUFBTSxDQUFDbEIsSUFBSSxDQUFDLEdBQUdpQixLQUFLO01BQ3RCO01BRUEsT0FBTyxDQUFDRyxZQUFZO0lBQ3RCO0lBRUEsSUFBSSxDQUFDRixNQUFNLENBQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDRiwwREFBYyxDQUFDb0IsTUFBTSxDQUFDbEIsSUFBSSxDQUFDLENBQUMsRUFBRTtNQUNsRGtCLE1BQU0sQ0FBQ2xCLElBQUksQ0FBQyxHQUFHLEVBQUU7SUFDbkI7SUFFQSxNQUFNMkIsTUFBTSxHQUFHWixTQUFTLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxNQUFNLENBQUNsQixJQUFJLENBQUMsRUFBRW1CLEtBQUssQ0FBQztJQUUxRCxJQUFJUSxNQUFNLElBQUk3Qix5REFBYSxDQUFDb0IsTUFBTSxDQUFDbEIsSUFBSSxDQUFDLENBQUMsRUFBRTtNQUN6Q2tCLE1BQU0sQ0FBQ2xCLElBQUksQ0FBQyxHQUFHSSxhQUFhLENBQUNjLE1BQU0sQ0FBQ2xCLElBQUksQ0FBQyxDQUFDO0lBQzVDO0lBRUEsT0FBTyxDQUFDb0IsWUFBWTtFQUN0QjtFQUVBLElBQUl0Qiw0REFBZ0IsQ0FBQ2dCLFFBQVEsQ0FBQyxJQUFJaEIsNERBQWdCLENBQUNnQixRQUFRLENBQUNnQixPQUFPLENBQUMsRUFBRTtJQUNwRSxNQUFNeEIsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUVkUiw4REFBa0IsQ0FBQ2dCLFFBQVEsRUFBRSxDQUFDZCxJQUFJLEVBQUVpQixLQUFLLEtBQUs7TUFDNUNGLFNBQVMsQ0FBQ2hCLGFBQWEsQ0FBQ0MsSUFBSSxDQUFDLEVBQUVpQixLQUFLLEVBQUVYLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxDQUFDO0lBRUYsT0FBT0EsR0FBRztFQUNaO0VBRUEsT0FBTyxJQUFJO0FBQ2I7QUFFQSwrREFBZU8sY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvZm9ybURhdGFUb0pTT04uanM/ZjQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbi8qKlxuICogSXQgdGFrZXMgYSBzdHJpbmcgbGlrZSBgZm9vW3hdW3ldW3pdYCBhbmQgcmV0dXJucyBhbiBhcnJheSBsaWtlIGBbJ2ZvbycsICd4JywgJ3knLCAneiddXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICpcbiAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHN0cmluZ3MuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlUHJvcFBhdGgobmFtZSkge1xuICAvLyBmb29beF1beV1bel1cbiAgLy8gZm9vLngueS56XG4gIC8vIGZvby14LXktelxuICAvLyBmb28geCB5IHpcbiAgcmV0dXJuIHV0aWxzLm1hdGNoQWxsKC9cXHcrfFxcWyhcXHcqKV0vZywgbmFtZSkubWFwKG1hdGNoID0+IHtcbiAgICByZXR1cm4gbWF0Y2hbMF0gPT09ICdbXScgPyAnJyA6IG1hdGNoWzFdIHx8IG1hdGNoWzBdO1xuICB9KTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGFuIGFycmF5IHRvIGFuIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5PGFueT59IGFyciAtIFRoZSBhcnJheSB0byBjb252ZXJ0IHRvIGFuIG9iamVjdC5cbiAqXG4gKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBrZXlzIGFuZCB2YWx1ZXMgYXMgdGhlIGFycmF5LlxuICovXG5mdW5jdGlvbiBhcnJheVRvT2JqZWN0KGFycikge1xuICBjb25zdCBvYmogPSB7fTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGFycik7XG4gIGxldCBpO1xuICBjb25zdCBsZW4gPSBrZXlzLmxlbmd0aDtcbiAgbGV0IGtleTtcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAga2V5ID0ga2V5c1tpXTtcbiAgICBvYmpba2V5XSA9IGFycltrZXldO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogSXQgdGFrZXMgYSBGb3JtRGF0YSBvYmplY3QgYW5kIHJldHVybnMgYSBKYXZhU2NyaXB0IG9iamVjdFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBmb3JtRGF0YSBUaGUgRm9ybURhdGEgb2JqZWN0IHRvIGNvbnZlcnQgdG8gSlNPTi5cbiAqXG4gKiBAcmV0dXJucyB7T2JqZWN0PHN0cmluZywgYW55PiB8IG51bGx9IFRoZSBjb252ZXJ0ZWQgb2JqZWN0LlxuICovXG5mdW5jdGlvbiBmb3JtRGF0YVRvSlNPTihmb3JtRGF0YSkge1xuICBmdW5jdGlvbiBidWlsZFBhdGgocGF0aCwgdmFsdWUsIHRhcmdldCwgaW5kZXgpIHtcbiAgICBsZXQgbmFtZSA9IHBhdGhbaW5kZXgrK107XG5cbiAgICBpZiAobmFtZSA9PT0gJ19fcHJvdG9fXycpIHJldHVybiB0cnVlO1xuXG4gICAgY29uc3QgaXNOdW1lcmljS2V5ID0gTnVtYmVyLmlzRmluaXRlKCtuYW1lKTtcbiAgICBjb25zdCBpc0xhc3QgPSBpbmRleCA+PSBwYXRoLmxlbmd0aDtcbiAgICBuYW1lID0gIW5hbWUgJiYgdXRpbHMuaXNBcnJheSh0YXJnZXQpID8gdGFyZ2V0Lmxlbmd0aCA6IG5hbWU7XG5cbiAgICBpZiAoaXNMYXN0KSB7XG4gICAgICBpZiAodXRpbHMuaGFzT3duUHJvcCh0YXJnZXQsIG5hbWUpKSB7XG4gICAgICAgIHRhcmdldFtuYW1lXSA9IFt0YXJnZXRbbmFtZV0sIHZhbHVlXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldFtuYW1lXSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gIWlzTnVtZXJpY0tleTtcbiAgICB9XG5cbiAgICBpZiAoIXRhcmdldFtuYW1lXSB8fCAhdXRpbHMuaXNPYmplY3QodGFyZ2V0W25hbWVdKSkge1xuICAgICAgdGFyZ2V0W25hbWVdID0gW107XG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYnVpbGRQYXRoKHBhdGgsIHZhbHVlLCB0YXJnZXRbbmFtZV0sIGluZGV4KTtcblxuICAgIGlmIChyZXN1bHQgJiYgdXRpbHMuaXNBcnJheSh0YXJnZXRbbmFtZV0pKSB7XG4gICAgICB0YXJnZXRbbmFtZV0gPSBhcnJheVRvT2JqZWN0KHRhcmdldFtuYW1lXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuICFpc051bWVyaWNLZXk7XG4gIH1cblxuICBpZiAodXRpbHMuaXNGb3JtRGF0YShmb3JtRGF0YSkgJiYgdXRpbHMuaXNGdW5jdGlvbihmb3JtRGF0YS5lbnRyaWVzKSkge1xuICAgIGNvbnN0IG9iaiA9IHt9O1xuXG4gICAgdXRpbHMuZm9yRWFjaEVudHJ5KGZvcm1EYXRhLCAobmFtZSwgdmFsdWUpID0+IHtcbiAgICAgIGJ1aWxkUGF0aChwYXJzZVByb3BQYXRoKG5hbWUpLCB2YWx1ZSwgb2JqLCAwKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZm9ybURhdGFUb0pTT047XG4iXSwibmFtZXMiOlsidXRpbHMiLCJwYXJzZVByb3BQYXRoIiwibmFtZSIsIm1hdGNoQWxsIiwibWFwIiwibWF0Y2giLCJhcnJheVRvT2JqZWN0IiwiYXJyIiwib2JqIiwia2V5cyIsIk9iamVjdCIsImkiLCJsZW4iLCJsZW5ndGgiLCJrZXkiLCJmb3JtRGF0YVRvSlNPTiIsImZvcm1EYXRhIiwiYnVpbGRQYXRoIiwicGF0aCIsInZhbHVlIiwidGFyZ2V0IiwiaW5kZXgiLCJpc051bWVyaWNLZXkiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsImlzTGFzdCIsImlzQXJyYXkiLCJoYXNPd25Qcm9wIiwiaXNPYmplY3QiLCJyZXN1bHQiLCJpc0Zvcm1EYXRhIiwiaXNGdW5jdGlvbiIsImVudHJpZXMiLCJmb3JFYWNoRW50cnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/formDataToJSON.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAbsoluteURL; }\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTQSxhQUFhQSxDQUFDQyxHQUFHLEVBQUU7RUFDekM7RUFDQTtFQUNBO0VBQ0EsT0FBTyw2QkFBNkIsQ0FBQ0MsSUFBSSxDQUFDRCxHQUFHLENBQUM7QUFDaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanM/YTIyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgVVJMIHRvIHRlc3RcbiAqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkK1xcLS5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn1cbiJdLCJuYW1lcyI6WyJpc0Fic29sdXRlVVJMIiwidXJsIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAxiosError; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(payload) && payload.isAxiosError === true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVNDLFlBQVlBLENBQUNDLE9BQU8sRUFBRTtFQUM1QyxPQUFPRiwwREFBYyxDQUFDRSxPQUFPLENBQUMsSUFBS0EsT0FBTyxDQUFDRCxZQUFZLEtBQUssSUFBSztBQUNuRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzP2JkOWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvc1xuICpcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZCBUaGUgdmFsdWUgdG8gdGVzdFxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzQXhpb3NFcnJvcihwYXlsb2FkKSB7XG4gIHJldHVybiB1dGlscy5pc09iamVjdChwYXlsb2FkKSAmJiAocGF5bG9hZC5pc0F4aW9zRXJyb3IgPT09IHRydWUpO1xufVxuIl0sIm5hbWVzIjpbInV0aWxzIiwiaXNBeGlvc0Vycm9yIiwicGF5bG9hZCIsImlzT2JqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAxiosError.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ? ((origin, isMSIE) => url => {\n  url = new URL(url, _platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin);\n  return origin.protocol === url.protocol && origin.host === url.host && (isMSIE || origin.port === url.port);\n})(new URL(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin), _platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navigator && /(msie|trident)/i.test(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navigator.userAgent)) : () => true);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwibWFwcGluZ3MiOiI7O0FBQTRDO0FBRTVDLCtEQUFlQSxnRkFBOEIsR0FBRyxDQUFDLENBQUNFLE1BQU0sRUFBRUMsTUFBTSxLQUFNQyxHQUFHLElBQUs7RUFDNUVBLEdBQUcsR0FBRyxJQUFJQyxHQUFHLENBQUNELEdBQUcsRUFBRUosaUVBQWUsQ0FBQztFQUVuQyxPQUNFRSxNQUFNLENBQUNJLFFBQVEsS0FBS0YsR0FBRyxDQUFDRSxRQUFRLElBQ2hDSixNQUFNLENBQUNLLElBQUksS0FBS0gsR0FBRyxDQUFDRyxJQUFJLEtBQ3ZCSixNQUFNLElBQUlELE1BQU0sQ0FBQ00sSUFBSSxLQUFLSixHQUFHLENBQUNJLElBQUksQ0FBQztBQUV4QyxDQUFDLEVBQ0MsSUFBSUgsR0FBRyxDQUFDTCxpRUFBZSxDQUFDLEVBQ3hCQSxvRUFBa0IsSUFBSSxpQkFBaUIsQ0FBQ1UsSUFBSSxDQUFDVixvRUFBa0IsQ0FBQ1csU0FBUyxDQUMzRSxDQUFDLEdBQUcsTUFBTSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanM/ODc5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0vaW5kZXguanMnO1xuXG5leHBvcnQgZGVmYXVsdCBwbGF0Zm9ybS5oYXNTdGFuZGFyZEJyb3dzZXJFbnYgPyAoKG9yaWdpbiwgaXNNU0lFKSA9PiAodXJsKSA9PiB7XG4gIHVybCA9IG5ldyBVUkwodXJsLCBwbGF0Zm9ybS5vcmlnaW4pO1xuXG4gIHJldHVybiAoXG4gICAgb3JpZ2luLnByb3RvY29sID09PSB1cmwucHJvdG9jb2wgJiZcbiAgICBvcmlnaW4uaG9zdCA9PT0gdXJsLmhvc3QgJiZcbiAgICAoaXNNU0lFIHx8IG9yaWdpbi5wb3J0ID09PSB1cmwucG9ydClcbiAgKTtcbn0pKFxuICBuZXcgVVJMKHBsYXRmb3JtLm9yaWdpbiksXG4gIHBsYXRmb3JtLm5hdmlnYXRvciAmJiAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KHBsYXRmb3JtLm5hdmlnYXRvci51c2VyQWdlbnQpXG4pIDogKCkgPT4gdHJ1ZTtcbiJdLCJuYW1lcyI6WyJwbGF0Zm9ybSIsImhhc1N0YW5kYXJkQnJvd3NlckVudiIsIm9yaWdpbiIsImlzTVNJRSIsInVybCIsIlVSTCIsInByb3RvY29sIiwiaG9zdCIsInBvcnQiLCJuYXZpZ2F0b3IiLCJ0ZXN0IiwidXNlckFnZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/null.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/null.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// eslint-disable-next-line strict\n/* harmony default export */ __webpack_exports__[\"default\"] = (null);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbnVsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQSwrREFBZSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9udWxsLmpzPzFhOTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHN0cmljdFxuZXhwb3J0IGRlZmF1bHQgbnVsbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/null.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet(['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent']);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n    if (!key || parsed[key] && ignoreDuplicateOf[key]) {\n      return;\n    }\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n  return parsed;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWE7O0FBRXFCOztBQUVsQztBQUNBO0FBQ0EsTUFBTUMsaUJBQWlCLEdBQUdELDZEQUFpQixDQUFDLENBQzFDLEtBQUssRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFDaEUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsbUJBQW1CLEVBQUUscUJBQXFCLEVBQ3JFLGVBQWUsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixFQUNsRSxTQUFTLEVBQUUsYUFBYSxFQUFFLFlBQVksQ0FDdkMsQ0FBQzs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWVHLFVBQVUsSUFBSTtFQUMzQixNQUFNQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0VBQ2pCLElBQUlDLEdBQUc7RUFDUCxJQUFJQyxHQUFHO0VBQ1AsSUFBSUMsQ0FBQztFQUVMSixVQUFVLElBQUlBLFVBQVUsQ0FBQ0ssS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQUMsU0FBU0MsTUFBTUEsQ0FBQ0MsSUFBSSxFQUFFO0lBQ2pFSixDQUFDLEdBQUdJLElBQUksQ0FBQ0MsT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUNyQlAsR0FBRyxHQUFHTSxJQUFJLENBQUNFLFNBQVMsQ0FBQyxDQUFDLEVBQUVOLENBQUMsQ0FBQyxDQUFDTyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxXQUFXLENBQUMsQ0FBQztJQUMvQ1QsR0FBRyxHQUFHSyxJQUFJLENBQUNFLFNBQVMsQ0FBQ04sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDTyxJQUFJLENBQUMsQ0FBQztJQUVsQyxJQUFJLENBQUNULEdBQUcsSUFBS0QsTUFBTSxDQUFDQyxHQUFHLENBQUMsSUFBSUosaUJBQWlCLENBQUNJLEdBQUcsQ0FBRSxFQUFFO01BQ25EO0lBQ0Y7SUFFQSxJQUFJQSxHQUFHLEtBQUssWUFBWSxFQUFFO01BQ3hCLElBQUlELE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLEVBQUU7UUFDZkQsTUFBTSxDQUFDQyxHQUFHLENBQUMsQ0FBQ1csSUFBSSxDQUFDVixHQUFHLENBQUM7TUFDdkIsQ0FBQyxNQUFNO1FBQ0xGLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDO01BQ3JCO0lBQ0YsQ0FBQyxNQUFNO01BQ0xGLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLEdBQUdELE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLEdBQUdELE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLEdBQUcsSUFBSSxHQUFHQyxHQUFHLEdBQUdBLEdBQUc7SUFDNUQ7RUFDRixDQUFDLENBQUM7RUFFRixPQUFPRixNQUFNO0FBQ2YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzPzU0ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5cbi8vIFJhd0F4aW9zSGVhZGVycyB3aG9zZSBkdXBsaWNhdGVzIGFyZSBpZ25vcmVkIGJ5IG5vZGVcbi8vIGMuZi4gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9odHRwLmh0bWwjaHR0cF9tZXNzYWdlX2hlYWRlcnNcbmNvbnN0IGlnbm9yZUR1cGxpY2F0ZU9mID0gdXRpbHMudG9PYmplY3RTZXQoW1xuICAnYWdlJywgJ2F1dGhvcml6YXRpb24nLCAnY29udGVudC1sZW5ndGgnLCAnY29udGVudC10eXBlJywgJ2V0YWcnLFxuICAnZXhwaXJlcycsICdmcm9tJywgJ2hvc3QnLCAnaWYtbW9kaWZpZWQtc2luY2UnLCAnaWYtdW5tb2RpZmllZC1zaW5jZScsXG4gICdsYXN0LW1vZGlmaWVkJywgJ2xvY2F0aW9uJywgJ21heC1mb3J3YXJkcycsICdwcm94eS1hdXRob3JpemF0aW9uJyxcbiAgJ3JlZmVyZXInLCAncmV0cnktYWZ0ZXInLCAndXNlci1hZ2VudCdcbl0pO1xuXG4vKipcbiAqIFBhcnNlIGhlYWRlcnMgaW50byBhbiBvYmplY3RcbiAqXG4gKiBgYGBcbiAqIERhdGU6IFdlZCwgMjcgQXVnIDIwMTQgMDg6NTg6NDkgR01UXG4gKiBDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiAqIENvbm5lY3Rpb246IGtlZXAtYWxpdmVcbiAqIFRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcmF3SGVhZGVycyBIZWFkZXJzIG5lZWRpbmcgdG8gYmUgcGFyc2VkXG4gKlxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgcmF3SGVhZGVycyA9PiB7XG4gIGNvbnN0IHBhcnNlZCA9IHt9O1xuICBsZXQga2V5O1xuICBsZXQgdmFsO1xuICBsZXQgaTtcblxuICByYXdIZWFkZXJzICYmIHJhd0hlYWRlcnMuc3BsaXQoJ1xcbicpLmZvckVhY2goZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gbGluZS5zdWJzdHJpbmcoMCwgaSkudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgdmFsID0gbGluZS5zdWJzdHJpbmcoaSArIDEpLnRyaW0oKTtcblxuICAgIGlmICgha2V5IHx8IChwYXJzZWRba2V5XSAmJiBpZ25vcmVEdXBsaWNhdGVPZltrZXldKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgaWYgKHBhcnNlZFtrZXldKSB7XG4gICAgICAgIHBhcnNlZFtrZXldLnB1c2godmFsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gW3ZhbF07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJuYW1lcyI6WyJ1dGlscyIsImlnbm9yZUR1cGxpY2F0ZU9mIiwidG9PYmplY3RTZXQiLCJyYXdIZWFkZXJzIiwicGFyc2VkIiwia2V5IiwidmFsIiwiaSIsInNwbGl0IiwiZm9yRWFjaCIsInBhcnNlciIsImxpbmUiLCJpbmRleE9mIiwic3Vic3RyaW5nIiwidHJpbSIsInRvTG93ZXJDYXNlIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseProtocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseProtocol.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ parseProtocol; }\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRUUsU0FBU0EsYUFBYUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQ3pDLE1BQU1DLEtBQUssR0FBRywyQkFBMkIsQ0FBQ0MsSUFBSSxDQUFDRixHQUFHLENBQUM7RUFDbkQsT0FBT0MsS0FBSyxJQUFJQSxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcz85ZmFjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VQcm90b2NvbCh1cmwpIHtcbiAgY29uc3QgbWF0Y2ggPSAvXihbLStcXHddezEsMjV9KSg6P1xcL1xcL3w6KS8uZXhlYyh1cmwpO1xuICByZXR1cm4gbWF0Y2ggJiYgbWF0Y2hbMV0gfHwgJyc7XG59XG4iXSwibmFtZXMiOlsicGFyc2VQcm90b2NvbCIsInVybCIsIm1hdGNoIiwiZXhlYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseProtocol.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/progressEventReducer.js":
/*!****************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/progressEventReducer.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asyncDecorator: function() { return /* binding */ asyncDecorator; },\n/* harmony export */   progressEventDecorator: function() { return /* binding */ progressEventDecorator; },\n/* harmony export */   progressEventReducer: function() { return /* binding */ progressEventReducer; }\n/* harmony export */ });\n/* harmony import */ var _speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./speedometer.js */ \"./node_modules/axios/lib/helpers/speedometer.js\");\n/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ \"./node_modules/axios/lib/helpers/throttle.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = (0,_speedometer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(50, 250);\n  return (0,_throttle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n    bytesNotified = loaded;\n    const data = {\n      loaded,\n      total,\n      progress: total ? loaded / total : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n    listener(data);\n  }, freq);\n};\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n  return [loaded => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\nconst asyncDecorator = fn => (...args) => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(() => fn(...args));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcHJvZ3Jlc3NFdmVudFJlZHVjZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ047QUFDTDtBQUV6QixNQUFNRyxvQkFBb0IsR0FBR0EsQ0FBQ0MsUUFBUSxFQUFFQyxnQkFBZ0IsRUFBRUMsSUFBSSxHQUFHLENBQUMsS0FBSztFQUM1RSxJQUFJQyxhQUFhLEdBQUcsQ0FBQztFQUNyQixNQUFNQyxZQUFZLEdBQUdSLDJEQUFXLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztFQUV6QyxPQUFPQyx3REFBUSxDQUFDUSxDQUFDLElBQUk7SUFDbkIsTUFBTUMsTUFBTSxHQUFHRCxDQUFDLENBQUNDLE1BQU07SUFDdkIsTUFBTUMsS0FBSyxHQUFHRixDQUFDLENBQUNHLGdCQUFnQixHQUFHSCxDQUFDLENBQUNFLEtBQUssR0FBR0UsU0FBUztJQUN0RCxNQUFNQyxhQUFhLEdBQUdKLE1BQU0sR0FBR0gsYUFBYTtJQUM1QyxNQUFNUSxJQUFJLEdBQUdQLFlBQVksQ0FBQ00sYUFBYSxDQUFDO0lBQ3hDLE1BQU1FLE9BQU8sR0FBR04sTUFBTSxJQUFJQyxLQUFLO0lBRS9CSixhQUFhLEdBQUdHLE1BQU07SUFFdEIsTUFBTU8sSUFBSSxHQUFHO01BQ1hQLE1BQU07TUFDTkMsS0FBSztNQUNMTyxRQUFRLEVBQUVQLEtBQUssR0FBSUQsTUFBTSxHQUFHQyxLQUFLLEdBQUlFLFNBQVM7TUFDOUNNLEtBQUssRUFBRUwsYUFBYTtNQUNwQkMsSUFBSSxFQUFFQSxJQUFJLEdBQUdBLElBQUksR0FBR0YsU0FBUztNQUM3Qk8sU0FBUyxFQUFFTCxJQUFJLElBQUlKLEtBQUssSUFBSUssT0FBTyxHQUFHLENBQUNMLEtBQUssR0FBR0QsTUFBTSxJQUFJSyxJQUFJLEdBQUdGLFNBQVM7TUFDekVRLEtBQUssRUFBRVosQ0FBQztNQUNSRyxnQkFBZ0IsRUFBRUQsS0FBSyxJQUFJLElBQUk7TUFDL0IsQ0FBQ04sZ0JBQWdCLEdBQUcsVUFBVSxHQUFHLFFBQVEsR0FBRztJQUM5QyxDQUFDO0lBRURELFFBQVEsQ0FBQ2EsSUFBSSxDQUFDO0VBQ2hCLENBQUMsRUFBRVgsSUFBSSxDQUFDO0FBQ1YsQ0FBQztBQUVNLE1BQU1nQixzQkFBc0IsR0FBR0EsQ0FBQ1gsS0FBSyxFQUFFWSxTQUFTLEtBQUs7RUFDMUQsTUFBTVgsZ0JBQWdCLEdBQUdELEtBQUssSUFBSSxJQUFJO0VBRXRDLE9BQU8sQ0FBRUQsTUFBTSxJQUFLYSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0JYLGdCQUFnQjtJQUNoQkQsS0FBSztJQUNMRDtFQUNGLENBQUMsQ0FBQyxFQUFFYSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkIsQ0FBQztBQUVNLE1BQU1DLGNBQWMsR0FBSUMsRUFBRSxJQUFLLENBQUMsR0FBR0MsSUFBSSxLQUFLeEIsc0RBQVUsQ0FBQyxNQUFNdUIsRUFBRSxDQUFDLEdBQUdDLElBQUksQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wcm9ncmVzc0V2ZW50UmVkdWNlci5qcz8wMGQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcGVlZG9tZXRlciBmcm9tIFwiLi9zcGVlZG9tZXRlci5qc1wiO1xuaW1wb3J0IHRocm90dGxlIGZyb20gXCIuL3Rocm90dGxlLmpzXCI7XG5pbXBvcnQgdXRpbHMgZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5cbmV4cG9ydCBjb25zdCBwcm9ncmVzc0V2ZW50UmVkdWNlciA9IChsaXN0ZW5lciwgaXNEb3dubG9hZFN0cmVhbSwgZnJlcSA9IDMpID0+IHtcbiAgbGV0IGJ5dGVzTm90aWZpZWQgPSAwO1xuICBjb25zdCBfc3BlZWRvbWV0ZXIgPSBzcGVlZG9tZXRlcig1MCwgMjUwKTtcblxuICByZXR1cm4gdGhyb3R0bGUoZSA9PiB7XG4gICAgY29uc3QgbG9hZGVkID0gZS5sb2FkZWQ7XG4gICAgY29uc3QgdG90YWwgPSBlLmxlbmd0aENvbXB1dGFibGUgPyBlLnRvdGFsIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHByb2dyZXNzQnl0ZXMgPSBsb2FkZWQgLSBieXRlc05vdGlmaWVkO1xuICAgIGNvbnN0IHJhdGUgPSBfc3BlZWRvbWV0ZXIocHJvZ3Jlc3NCeXRlcyk7XG4gICAgY29uc3QgaW5SYW5nZSA9IGxvYWRlZCA8PSB0b3RhbDtcblxuICAgIGJ5dGVzTm90aWZpZWQgPSBsb2FkZWQ7XG5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgbG9hZGVkLFxuICAgICAgdG90YWwsXG4gICAgICBwcm9ncmVzczogdG90YWwgPyAobG9hZGVkIC8gdG90YWwpIDogdW5kZWZpbmVkLFxuICAgICAgYnl0ZXM6IHByb2dyZXNzQnl0ZXMsXG4gICAgICByYXRlOiByYXRlID8gcmF0ZSA6IHVuZGVmaW5lZCxcbiAgICAgIGVzdGltYXRlZDogcmF0ZSAmJiB0b3RhbCAmJiBpblJhbmdlID8gKHRvdGFsIC0gbG9hZGVkKSAvIHJhdGUgOiB1bmRlZmluZWQsXG4gICAgICBldmVudDogZSxcbiAgICAgIGxlbmd0aENvbXB1dGFibGU6IHRvdGFsICE9IG51bGwsXG4gICAgICBbaXNEb3dubG9hZFN0cmVhbSA/ICdkb3dubG9hZCcgOiAndXBsb2FkJ106IHRydWVcbiAgICB9O1xuXG4gICAgbGlzdGVuZXIoZGF0YSk7XG4gIH0sIGZyZXEpO1xufVxuXG5leHBvcnQgY29uc3QgcHJvZ3Jlc3NFdmVudERlY29yYXRvciA9ICh0b3RhbCwgdGhyb3R0bGVkKSA9PiB7XG4gIGNvbnN0IGxlbmd0aENvbXB1dGFibGUgPSB0b3RhbCAhPSBudWxsO1xuXG4gIHJldHVybiBbKGxvYWRlZCkgPT4gdGhyb3R0bGVkWzBdKHtcbiAgICBsZW5ndGhDb21wdXRhYmxlLFxuICAgIHRvdGFsLFxuICAgIGxvYWRlZFxuICB9KSwgdGhyb3R0bGVkWzFdXTtcbn1cblxuZXhwb3J0IGNvbnN0IGFzeW5jRGVjb3JhdG9yID0gKGZuKSA9PiAoLi4uYXJncykgPT4gdXRpbHMuYXNhcCgoKSA9PiBmbiguLi5hcmdzKSk7XG4iXSwibmFtZXMiOlsic3BlZWRvbWV0ZXIiLCJ0aHJvdHRsZSIsInV0aWxzIiwicHJvZ3Jlc3NFdmVudFJlZHVjZXIiLCJsaXN0ZW5lciIsImlzRG93bmxvYWRTdHJlYW0iLCJmcmVxIiwiYnl0ZXNOb3RpZmllZCIsIl9zcGVlZG9tZXRlciIsImUiLCJsb2FkZWQiLCJ0b3RhbCIsImxlbmd0aENvbXB1dGFibGUiLCJ1bmRlZmluZWQiLCJwcm9ncmVzc0J5dGVzIiwicmF0ZSIsImluUmFuZ2UiLCJkYXRhIiwicHJvZ3Jlc3MiLCJieXRlcyIsImVzdGltYXRlZCIsImV2ZW50IiwicHJvZ3Jlc3NFdmVudERlY29yYXRvciIsInRocm90dGxlZCIsImFzeW5jRGVjb3JhdG9yIiwiZm4iLCJhcmdzIiwiYXNhcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/progressEventReducer.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/resolveConfig.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/resolveConfig.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isURLSameOrigin.js */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cookies.js */ \"./node_modules/axios/lib/helpers/cookies.js\");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/buildFullPath.js */ \"./node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _buildURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buildURL.js */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (config => {\n  const newConfig = (0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, config);\n  let {\n    data,\n    withXSRFToken,\n    xsrfHeaderName,\n    xsrfCookieName,\n    headers,\n    auth\n  } = newConfig;\n  newConfig.headers = headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(headers);\n  newConfig.url = (0,_buildURL_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' + btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : '')));\n  }\n  let contentType;\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFormData(data)) {\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv) {\n    withXSRFToken && _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n    if (withXSRFToken || withXSRFToken !== false && (0,_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(newConfig.url)) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].read(xsrfCookieName);\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n  return newConfig;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcmVzb2x2ZUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEM7QUFDWjtBQUNtQjtBQUNoQjtBQUNrQjtBQUNKO0FBQ0U7QUFDZDtBQUVyQywrREFBZ0JRLE1BQU0sSUFBSztFQUN6QixNQUFNQyxTQUFTLEdBQUdKLGdFQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUVHLE1BQU0sQ0FBQztFQUV6QyxJQUFJO0lBQUNFLElBQUk7SUFBRUMsYUFBYTtJQUFFQyxjQUFjO0lBQUVDLGNBQWM7SUFBRUMsT0FBTztJQUFFQztFQUFJLENBQUMsR0FBR04sU0FBUztFQUVwRkEsU0FBUyxDQUFDSyxPQUFPLEdBQUdBLE9BQU8sR0FBR1Isa0VBQWlCLENBQUNRLE9BQU8sQ0FBQztFQUV4REwsU0FBUyxDQUFDUSxHQUFHLEdBQUdWLHdEQUFRLENBQUNILGtFQUFhLENBQUNLLFNBQVMsQ0FBQ1MsT0FBTyxFQUFFVCxTQUFTLENBQUNRLEdBQUcsQ0FBQyxFQUFFVCxNQUFNLENBQUNXLE1BQU0sRUFBRVgsTUFBTSxDQUFDWSxnQkFBZ0IsQ0FBQzs7RUFFakg7RUFDQSxJQUFJTCxJQUFJLEVBQUU7SUFDUkQsT0FBTyxDQUFDTyxHQUFHLENBQUMsZUFBZSxFQUFFLFFBQVEsR0FDbkNDLElBQUksQ0FBQyxDQUFDUCxJQUFJLENBQUNRLFFBQVEsSUFBSSxFQUFFLElBQUksR0FBRyxJQUFJUixJQUFJLENBQUNTLFFBQVEsR0FBR0MsUUFBUSxDQUFDQyxrQkFBa0IsQ0FBQ1gsSUFBSSxDQUFDUyxRQUFRLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUN2RyxDQUFDO0VBQ0g7RUFFQSxJQUFJRyxXQUFXO0VBRWYsSUFBSTFCLDREQUFnQixDQUFDUyxJQUFJLENBQUMsRUFBRTtJQUMxQixJQUFJVixnRkFBOEIsSUFBSUEseUZBQXVDLEVBQUU7TUFDN0VjLE9BQU8sQ0FBQ2lCLGNBQWMsQ0FBQ0MsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNyQyxDQUFDLE1BQU0sSUFBSSxDQUFDTCxXQUFXLEdBQUdiLE9BQU8sQ0FBQ21CLGNBQWMsQ0FBQyxDQUFDLE1BQU0sS0FBSyxFQUFFO01BQzdEO01BQ0EsTUFBTSxDQUFDQyxJQUFJLEVBQUUsR0FBR0MsTUFBTSxDQUFDLEdBQUdSLFdBQVcsR0FBR0EsV0FBVyxDQUFDUyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUNDLEdBQUcsQ0FBQ0MsS0FBSyxJQUFJQSxLQUFLLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDQyxPQUFPLENBQUMsR0FBRyxFQUFFO01BQzlHM0IsT0FBTyxDQUFDaUIsY0FBYyxDQUFDLENBQUNHLElBQUksSUFBSSxxQkFBcUIsRUFBRSxHQUFHQyxNQUFNLENBQUMsQ0FBQ08sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9FO0VBQ0Y7O0VBRUE7RUFDQTtFQUNBOztFQUVBLElBQUkxQyxnRkFBOEIsRUFBRTtJQUNsQ1csYUFBYSxJQUFJViw0REFBZ0IsQ0FBQ1UsYUFBYSxDQUFDLEtBQUtBLGFBQWEsR0FBR0EsYUFBYSxDQUFDRixTQUFTLENBQUMsQ0FBQztJQUU5RixJQUFJRSxhQUFhLElBQUtBLGFBQWEsS0FBSyxLQUFLLElBQUlULCtEQUFlLENBQUNPLFNBQVMsQ0FBQ1EsR0FBRyxDQUFFLEVBQUU7TUFDaEY7TUFDQSxNQUFNMkIsU0FBUyxHQUFHaEMsY0FBYyxJQUFJQyxjQUFjLElBQUlWLHdEQUFZLENBQUNVLGNBQWMsQ0FBQztNQUVsRixJQUFJK0IsU0FBUyxFQUFFO1FBQ2I5QixPQUFPLENBQUNPLEdBQUcsQ0FBQ1QsY0FBYyxFQUFFZ0MsU0FBUyxDQUFDO01BQ3hDO0lBQ0Y7RUFDRjtFQUVBLE9BQU9uQyxTQUFTO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3Jlc29sdmVDb25maWcuanM/ZDA5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGxhdGZvcm0gZnJvbSBcIi4uL3BsYXRmb3JtL2luZGV4LmpzXCI7XG5pbXBvcnQgdXRpbHMgZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5pbXBvcnQgaXNVUkxTYW1lT3JpZ2luIGZyb20gXCIuL2lzVVJMU2FtZU9yaWdpbi5qc1wiO1xuaW1wb3J0IGNvb2tpZXMgZnJvbSBcIi4vY29va2llcy5qc1wiO1xuaW1wb3J0IGJ1aWxkRnVsbFBhdGggZnJvbSBcIi4uL2NvcmUvYnVpbGRGdWxsUGF0aC5qc1wiO1xuaW1wb3J0IG1lcmdlQ29uZmlnIGZyb20gXCIuLi9jb3JlL21lcmdlQ29uZmlnLmpzXCI7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gXCIuLi9jb3JlL0F4aW9zSGVhZGVycy5qc1wiO1xuaW1wb3J0IGJ1aWxkVVJMIGZyb20gXCIuL2J1aWxkVVJMLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChjb25maWcpID0+IHtcbiAgY29uc3QgbmV3Q29uZmlnID0gbWVyZ2VDb25maWcoe30sIGNvbmZpZyk7XG5cbiAgbGV0IHtkYXRhLCB3aXRoWFNSRlRva2VuLCB4c3JmSGVhZGVyTmFtZSwgeHNyZkNvb2tpZU5hbWUsIGhlYWRlcnMsIGF1dGh9ID0gbmV3Q29uZmlnO1xuXG4gIG5ld0NvbmZpZy5oZWFkZXJzID0gaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKGhlYWRlcnMpO1xuXG4gIG5ld0NvbmZpZy51cmwgPSBidWlsZFVSTChidWlsZEZ1bGxQYXRoKG5ld0NvbmZpZy5iYXNlVVJMLCBuZXdDb25maWcudXJsKSwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpO1xuXG4gIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgaWYgKGF1dGgpIHtcbiAgICBoZWFkZXJzLnNldCgnQXV0aG9yaXphdGlvbicsICdCYXNpYyAnICtcbiAgICAgIGJ0b2EoKGF1dGgudXNlcm5hbWUgfHwgJycpICsgJzonICsgKGF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYXV0aC5wYXNzd29yZCkpIDogJycpKVxuICAgICk7XG4gIH1cblxuICBsZXQgY29udGVudFR5cGU7XG5cbiAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkpIHtcbiAgICBpZiAocGxhdGZvcm0uaGFzU3RhbmRhcmRCcm93c2VyRW52IHx8IHBsYXRmb3JtLmhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudikge1xuICAgICAgaGVhZGVycy5zZXRDb250ZW50VHlwZSh1bmRlZmluZWQpOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfSBlbHNlIGlmICgoY29udGVudFR5cGUgPSBoZWFkZXJzLmdldENvbnRlbnRUeXBlKCkpICE9PSBmYWxzZSkge1xuICAgICAgLy8gZml4IHNlbWljb2xvbiBkdXBsaWNhdGlvbiBpc3N1ZSBmb3IgUmVhY3ROYXRpdmUgRm9ybURhdGEgaW1wbGVtZW50YXRpb25cbiAgICAgIGNvbnN0IFt0eXBlLCAuLi50b2tlbnNdID0gY29udGVudFR5cGUgPyBjb250ZW50VHlwZS5zcGxpdCgnOycpLm1hcCh0b2tlbiA9PiB0b2tlbi50cmltKCkpLmZpbHRlcihCb29sZWFuKSA6IFtdO1xuICAgICAgaGVhZGVycy5zZXRDb250ZW50VHlwZShbdHlwZSB8fCAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsIC4uLnRva2Vuc10uam9pbignOyAnKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuXG4gIGlmIChwbGF0Zm9ybS5oYXNTdGFuZGFyZEJyb3dzZXJFbnYpIHtcbiAgICB3aXRoWFNSRlRva2VuICYmIHV0aWxzLmlzRnVuY3Rpb24od2l0aFhTUkZUb2tlbikgJiYgKHdpdGhYU1JGVG9rZW4gPSB3aXRoWFNSRlRva2VuKG5ld0NvbmZpZykpO1xuXG4gICAgaWYgKHdpdGhYU1JGVG9rZW4gfHwgKHdpdGhYU1JGVG9rZW4gIT09IGZhbHNlICYmIGlzVVJMU2FtZU9yaWdpbihuZXdDb25maWcudXJsKSkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgY29uc3QgeHNyZlZhbHVlID0geHNyZkhlYWRlck5hbWUgJiYgeHNyZkNvb2tpZU5hbWUgJiYgY29va2llcy5yZWFkKHhzcmZDb29raWVOYW1lKTtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICBoZWFkZXJzLnNldCh4c3JmSGVhZGVyTmFtZSwgeHNyZlZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3Q29uZmlnO1xufVxuXG4iXSwibmFtZXMiOlsicGxhdGZvcm0iLCJ1dGlscyIsImlzVVJMU2FtZU9yaWdpbiIsImNvb2tpZXMiLCJidWlsZEZ1bGxQYXRoIiwibWVyZ2VDb25maWciLCJBeGlvc0hlYWRlcnMiLCJidWlsZFVSTCIsImNvbmZpZyIsIm5ld0NvbmZpZyIsImRhdGEiLCJ3aXRoWFNSRlRva2VuIiwieHNyZkhlYWRlck5hbWUiLCJ4c3JmQ29va2llTmFtZSIsImhlYWRlcnMiLCJhdXRoIiwiZnJvbSIsInVybCIsImJhc2VVUkwiLCJwYXJhbXMiLCJwYXJhbXNTZXJpYWxpemVyIiwic2V0IiwiYnRvYSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImNvbnRlbnRUeXBlIiwiaXNGb3JtRGF0YSIsImhhc1N0YW5kYXJkQnJvd3NlckVudiIsImhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudiIsInNldENvbnRlbnRUeXBlIiwidW5kZWZpbmVkIiwiZ2V0Q29udGVudFR5cGUiLCJ0eXBlIiwidG9rZW5zIiwic3BsaXQiLCJtYXAiLCJ0b2tlbiIsInRyaW0iLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiIsImlzRnVuY3Rpb24iLCJ4c3JmVmFsdWUiLCJyZWFkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/resolveConfig.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/speedometer.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/speedometer.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n  min = min !== undefined ? min : 1000;\n  return function push(chunkLength) {\n    const now = Date.now();\n    const startedAt = timestamps[tail];\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n    let i = tail;\n    let bytesCount = 0;\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n    head = (head + 1) % samplesCount;\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n    if (now - firstSampleTS < min) {\n      return;\n    }\n    const passed = startedAt && now - startedAt;\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (speedometer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3BlZWRvbWV0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLFdBQVdBLENBQUNDLFlBQVksRUFBRUMsR0FBRyxFQUFFO0VBQ3RDRCxZQUFZLEdBQUdBLFlBQVksSUFBSSxFQUFFO0VBQ2pDLE1BQU1FLEtBQUssR0FBRyxJQUFJQyxLQUFLLENBQUNILFlBQVksQ0FBQztFQUNyQyxNQUFNSSxVQUFVLEdBQUcsSUFBSUQsS0FBSyxDQUFDSCxZQUFZLENBQUM7RUFDMUMsSUFBSUssSUFBSSxHQUFHLENBQUM7RUFDWixJQUFJQyxJQUFJLEdBQUcsQ0FBQztFQUNaLElBQUlDLGFBQWE7RUFFakJOLEdBQUcsR0FBR0EsR0FBRyxLQUFLTyxTQUFTLEdBQUdQLEdBQUcsR0FBRyxJQUFJO0VBRXBDLE9BQU8sU0FBU1EsSUFBSUEsQ0FBQ0MsV0FBVyxFQUFFO0lBQ2hDLE1BQU1DLEdBQUcsR0FBR0MsSUFBSSxDQUFDRCxHQUFHLENBQUMsQ0FBQztJQUV0QixNQUFNRSxTQUFTLEdBQUdULFVBQVUsQ0FBQ0UsSUFBSSxDQUFDO0lBRWxDLElBQUksQ0FBQ0MsYUFBYSxFQUFFO01BQ2xCQSxhQUFhLEdBQUdJLEdBQUc7SUFDckI7SUFFQVQsS0FBSyxDQUFDRyxJQUFJLENBQUMsR0FBR0ssV0FBVztJQUN6Qk4sVUFBVSxDQUFDQyxJQUFJLENBQUMsR0FBR00sR0FBRztJQUV0QixJQUFJRyxDQUFDLEdBQUdSLElBQUk7SUFDWixJQUFJUyxVQUFVLEdBQUcsQ0FBQztJQUVsQixPQUFPRCxDQUFDLEtBQUtULElBQUksRUFBRTtNQUNqQlUsVUFBVSxJQUFJYixLQUFLLENBQUNZLENBQUMsRUFBRSxDQUFDO01BQ3hCQSxDQUFDLEdBQUdBLENBQUMsR0FBR2QsWUFBWTtJQUN0QjtJQUVBSyxJQUFJLEdBQUcsQ0FBQ0EsSUFBSSxHQUFHLENBQUMsSUFBSUwsWUFBWTtJQUVoQyxJQUFJSyxJQUFJLEtBQUtDLElBQUksRUFBRTtNQUNqQkEsSUFBSSxHQUFHLENBQUNBLElBQUksR0FBRyxDQUFDLElBQUlOLFlBQVk7SUFDbEM7SUFFQSxJQUFJVyxHQUFHLEdBQUdKLGFBQWEsR0FBR04sR0FBRyxFQUFFO01BQzdCO0lBQ0Y7SUFFQSxNQUFNZSxNQUFNLEdBQUdILFNBQVMsSUFBSUYsR0FBRyxHQUFHRSxTQUFTO0lBRTNDLE9BQU9HLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNILFVBQVUsR0FBRyxJQUFJLEdBQUdDLE1BQU0sQ0FBQyxHQUFHUixTQUFTO0VBQ3BFLENBQUM7QUFDSDtBQUVBLCtEQUFlVCxXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcGVlZG9tZXRlci5qcz81OWMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDYWxjdWxhdGUgZGF0YSBtYXhSYXRlXG4gKiBAcGFyYW0ge051bWJlcn0gW3NhbXBsZXNDb3VudD0gMTBdXG4gKiBAcGFyYW0ge051bWJlcn0gW21pbj0gMTAwMF1cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZnVuY3Rpb24gc3BlZWRvbWV0ZXIoc2FtcGxlc0NvdW50LCBtaW4pIHtcbiAgc2FtcGxlc0NvdW50ID0gc2FtcGxlc0NvdW50IHx8IDEwO1xuICBjb25zdCBieXRlcyA9IG5ldyBBcnJheShzYW1wbGVzQ291bnQpO1xuICBjb25zdCB0aW1lc3RhbXBzID0gbmV3IEFycmF5KHNhbXBsZXNDb3VudCk7XG4gIGxldCBoZWFkID0gMDtcbiAgbGV0IHRhaWwgPSAwO1xuICBsZXQgZmlyc3RTYW1wbGVUUztcblxuICBtaW4gPSBtaW4gIT09IHVuZGVmaW5lZCA/IG1pbiA6IDEwMDA7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHB1c2goY2h1bmtMZW5ndGgpIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuXG4gICAgY29uc3Qgc3RhcnRlZEF0ID0gdGltZXN0YW1wc1t0YWlsXTtcblxuICAgIGlmICghZmlyc3RTYW1wbGVUUykge1xuICAgICAgZmlyc3RTYW1wbGVUUyA9IG5vdztcbiAgICB9XG5cbiAgICBieXRlc1toZWFkXSA9IGNodW5rTGVuZ3RoO1xuICAgIHRpbWVzdGFtcHNbaGVhZF0gPSBub3c7XG5cbiAgICBsZXQgaSA9IHRhaWw7XG4gICAgbGV0IGJ5dGVzQ291bnQgPSAwO1xuXG4gICAgd2hpbGUgKGkgIT09IGhlYWQpIHtcbiAgICAgIGJ5dGVzQ291bnQgKz0gYnl0ZXNbaSsrXTtcbiAgICAgIGkgPSBpICUgc2FtcGxlc0NvdW50O1xuICAgIH1cblxuICAgIGhlYWQgPSAoaGVhZCArIDEpICUgc2FtcGxlc0NvdW50O1xuXG4gICAgaWYgKGhlYWQgPT09IHRhaWwpIHtcbiAgICAgIHRhaWwgPSAodGFpbCArIDEpICUgc2FtcGxlc0NvdW50O1xuICAgIH1cblxuICAgIGlmIChub3cgLSBmaXJzdFNhbXBsZVRTIDwgbWluKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcGFzc2VkID0gc3RhcnRlZEF0ICYmIG5vdyAtIHN0YXJ0ZWRBdDtcblxuICAgIHJldHVybiBwYXNzZWQgPyBNYXRoLnJvdW5kKGJ5dGVzQ291bnQgKiAxMDAwIC8gcGFzc2VkKSA6IHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3BlZWRvbWV0ZXI7XG4iXSwibmFtZXMiOlsic3BlZWRvbWV0ZXIiLCJzYW1wbGVzQ291bnQiLCJtaW4iLCJieXRlcyIsIkFycmF5IiwidGltZXN0YW1wcyIsImhlYWQiLCJ0YWlsIiwiZmlyc3RTYW1wbGVUUyIsInVuZGVmaW5lZCIsInB1c2giLCJjaHVua0xlbmd0aCIsIm5vdyIsIkRhdGUiLCJzdGFydGVkQXQiLCJpIiwiYnl0ZXNDb3VudCIsInBhc3NlZCIsIk1hdGgiLCJyb3VuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/speedometer.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ spread; }\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZSxTQUFTQSxNQUFNQSxDQUFDQyxRQUFRLEVBQUU7RUFDdkMsT0FBTyxTQUFTQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFDeEIsT0FBT0YsUUFBUSxDQUFDRyxLQUFLLENBQUMsSUFBSSxFQUFFRCxHQUFHLENBQUM7RUFDbEMsQ0FBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanM/MjcyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbInNwcmVhZCIsImNhbGxiYWNrIiwid3JhcCIsImFyciIsImFwcGx5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/throttle.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/throttle.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  };\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if (passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n  const flush = () => lastArgs && invoke(lastArgs);\n  return [throttled, flush];\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (throttle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdGhyb3R0bGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLFFBQVFBLENBQUNDLEVBQUUsRUFBRUMsSUFBSSxFQUFFO0VBQzFCLElBQUlDLFNBQVMsR0FBRyxDQUFDO0VBQ2pCLElBQUlDLFNBQVMsR0FBRyxJQUFJLEdBQUdGLElBQUk7RUFDM0IsSUFBSUcsUUFBUTtFQUNaLElBQUlDLEtBQUs7RUFFVCxNQUFNQyxNQUFNLEdBQUdBLENBQUNDLElBQUksRUFBRUMsR0FBRyxHQUFHQyxJQUFJLENBQUNELEdBQUcsQ0FBQyxDQUFDLEtBQUs7SUFDekNOLFNBQVMsR0FBR00sR0FBRztJQUNmSixRQUFRLEdBQUcsSUFBSTtJQUNmLElBQUlDLEtBQUssRUFBRTtNQUNUSyxZQUFZLENBQUNMLEtBQUssQ0FBQztNQUNuQkEsS0FBSyxHQUFHLElBQUk7SUFDZDtJQUNBTCxFQUFFLENBQUNXLEtBQUssQ0FBQyxJQUFJLEVBQUVKLElBQUksQ0FBQztFQUN0QixDQUFDO0VBRUQsTUFBTUssU0FBUyxHQUFHQSxDQUFDLEdBQUdMLElBQUksS0FBSztJQUM3QixNQUFNQyxHQUFHLEdBQUdDLElBQUksQ0FBQ0QsR0FBRyxDQUFDLENBQUM7SUFDdEIsTUFBTUssTUFBTSxHQUFHTCxHQUFHLEdBQUdOLFNBQVM7SUFDOUIsSUFBS1csTUFBTSxJQUFJVixTQUFTLEVBQUU7TUFDeEJHLE1BQU0sQ0FBQ0MsSUFBSSxFQUFFQyxHQUFHLENBQUM7SUFDbkIsQ0FBQyxNQUFNO01BQ0xKLFFBQVEsR0FBR0csSUFBSTtNQUNmLElBQUksQ0FBQ0YsS0FBSyxFQUFFO1FBQ1ZBLEtBQUssR0FBR1MsVUFBVSxDQUFDLE1BQU07VUFDdkJULEtBQUssR0FBRyxJQUFJO1VBQ1pDLE1BQU0sQ0FBQ0YsUUFBUSxDQUFDO1FBQ2xCLENBQUMsRUFBRUQsU0FBUyxHQUFHVSxNQUFNLENBQUM7TUFDeEI7SUFDRjtFQUNGLENBQUM7RUFFRCxNQUFNRSxLQUFLLEdBQUdBLENBQUEsS0FBTVgsUUFBUSxJQUFJRSxNQUFNLENBQUNGLFFBQVEsQ0FBQztFQUVoRCxPQUFPLENBQUNRLFNBQVMsRUFBRUcsS0FBSyxDQUFDO0FBQzNCO0FBRUEsK0RBQWVoQixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90aHJvdHRsZS5qcz80YmNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhyb3R0bGUgZGVjb3JhdG9yXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHBhcmFtIHtOdW1iZXJ9IGZyZXFcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICovXG5mdW5jdGlvbiB0aHJvdHRsZShmbiwgZnJlcSkge1xuICBsZXQgdGltZXN0YW1wID0gMDtcbiAgbGV0IHRocmVzaG9sZCA9IDEwMDAgLyBmcmVxO1xuICBsZXQgbGFzdEFyZ3M7XG4gIGxldCB0aW1lcjtcblxuICBjb25zdCBpbnZva2UgPSAoYXJncywgbm93ID0gRGF0ZS5ub3coKSkgPT4ge1xuICAgIHRpbWVzdGFtcCA9IG5vdztcbiAgICBsYXN0QXJncyA9IG51bGw7XG4gICAgaWYgKHRpbWVyKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBudWxsO1xuICAgIH1cbiAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgfVxuXG4gIGNvbnN0IHRocm90dGxlZCA9ICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCBwYXNzZWQgPSBub3cgLSB0aW1lc3RhbXA7XG4gICAgaWYgKCBwYXNzZWQgPj0gdGhyZXNob2xkKSB7XG4gICAgICBpbnZva2UoYXJncywgbm93KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGFzdEFyZ3MgPSBhcmdzO1xuICAgICAgaWYgKCF0aW1lcikge1xuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRpbWVyID0gbnVsbDtcbiAgICAgICAgICBpbnZva2UobGFzdEFyZ3MpXG4gICAgICAgIH0sIHRocmVzaG9sZCAtIHBhc3NlZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc3QgZmx1c2ggPSAoKSA9PiBsYXN0QXJncyAmJiBpbnZva2UobGFzdEFyZ3MpO1xuXG4gIHJldHVybiBbdGhyb3R0bGVkLCBmbHVzaF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRocm90dGxlO1xuIl0sIm5hbWVzIjpbInRocm90dGxlIiwiZm4iLCJmcmVxIiwidGltZXN0YW1wIiwidGhyZXNob2xkIiwibGFzdEFyZ3MiLCJ0aW1lciIsImludm9rZSIsImFyZ3MiLCJub3ciLCJEYXRlIiwiY2xlYXJUaW1lb3V0IiwiYXBwbHkiLCJ0aHJvdHRsZWQiLCJwYXNzZWQiLCJzZXRUaW1lb3V0IiwiZmx1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/throttle.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toFormData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toFormData.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ \"./node_modules/axios/lib/helpers/null.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(arr) && !arr.some(isVisitable);\n}\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(source[option]);\n  });\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isSpecCompliantForm(formData);\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n  function convertValue(value) {\n    if (value === null) return '';\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(value)) {\n      return value.toISOString();\n    }\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Blob is not supported. Use a Buffer instead.');\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n    if (value && !path && typeof value === 'object') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) && isFlatArray(value) || (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toArray(value))) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && formData.append(\n          // eslint-disable-next-line no-nested-ternary\n          indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + '[]', convertValue(el));\n        });\n        return false;\n      }\n    }\n    if (isVisitable(value)) {\n      return true;\n    }\n    formData.append(renderKey(path, key, dots), convertValue(value));\n    return false;\n  }\n  const stack = [];\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(value)) return;\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n    stack.push(value);\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && visitor.call(formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(key) ? key.trim() : key, path, exposedHelpers);\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n    stack.pop();\n  }\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n  build(obj);\n  return formData;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (toFormData);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/toFormData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ toURLEncodedForm; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classes.URLSearchParams(), Object.assign({\n    visitor: function (value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdG9VUkxFbmNvZGVkRm9ybS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRW1CO0FBQ1M7QUFDRztBQUU3QixTQUFTRyxnQkFBZ0JBLENBQUNDLElBQUksRUFBRUMsT0FBTyxFQUFFO0VBQ3RELE9BQU9KLDBEQUFVLENBQUNHLElBQUksRUFBRSxJQUFJRixrRUFBZ0IsQ0FBQ0ssZUFBZSxDQUFDLENBQUMsRUFBRUMsTUFBTSxDQUFDQyxNQUFNLENBQUM7SUFDNUVDLE9BQU8sRUFBRSxTQUFBQSxDQUFTQyxLQUFLLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7TUFDM0MsSUFBSVosaUVBQWUsSUFBSUYsMERBQWMsQ0FBQ1csS0FBSyxDQUFDLEVBQUU7UUFDNUMsSUFBSSxDQUFDTSxNQUFNLENBQUNMLEdBQUcsRUFBRUQsS0FBSyxDQUFDTyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUMsT0FBTyxLQUFLO01BQ2Q7TUFFQSxPQUFPSixPQUFPLENBQUNLLGNBQWMsQ0FBQ0MsS0FBSyxDQUFDLElBQUksRUFBRUMsU0FBUyxDQUFDO0lBQ3REO0VBQ0YsQ0FBQyxFQUFFaEIsT0FBTyxDQUFDLENBQUM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdG9VUkxFbmNvZGVkRm9ybS5qcz84ZmU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB0b0Zvcm1EYXRhIGZyb20gJy4vdG9Gb3JtRGF0YS5qcyc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0vaW5kZXguanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b1VSTEVuY29kZWRGb3JtKGRhdGEsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvRm9ybURhdGEoZGF0YSwgbmV3IHBsYXRmb3JtLmNsYXNzZXMuVVJMU2VhcmNoUGFyYW1zKCksIE9iamVjdC5hc3NpZ24oe1xuICAgIHZpc2l0b3I6IGZ1bmN0aW9uKHZhbHVlLCBrZXksIHBhdGgsIGhlbHBlcnMpIHtcbiAgICAgIGlmIChwbGF0Zm9ybS5pc05vZGUgJiYgdXRpbHMuaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kKGtleSwgdmFsdWUudG9TdHJpbmcoJ2Jhc2U2NCcpKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaGVscGVycy5kZWZhdWx0VmlzaXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfSwgb3B0aW9ucykpO1xufVxuIl0sIm5hbWVzIjpbInV0aWxzIiwidG9Gb3JtRGF0YSIsInBsYXRmb3JtIiwidG9VUkxFbmNvZGVkRm9ybSIsImRhdGEiLCJvcHRpb25zIiwiY2xhc3NlcyIsIlVSTFNlYXJjaFBhcmFtcyIsIk9iamVjdCIsImFzc2lnbiIsInZpc2l0b3IiLCJ2YWx1ZSIsImtleSIsInBhdGgiLCJoZWxwZXJzIiwiaXNOb2RlIiwiaXNCdWZmZXIiLCJhcHBlbmQiLCJ0b1N0cmluZyIsImRlZmF1bHRWaXNpdG9yIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/toURLEncodedForm.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/trackStream.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/trackStream.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readBytes: function() { return /* binding */ readBytes; },\n/* harmony export */   streamChunk: function() { return /* binding */ streamChunk; },\n/* harmony export */   trackStream: function() { return /* binding */ trackStream; }\n/* harmony export */ });\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n  let pos = 0;\n  let end;\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n};\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {\n        done,\n        value\n      } = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n};\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n  let bytes = 0;\n  let done;\n  let _onFinish = e => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {\n          done,\n          value\n        } = await iterator.next();\n        if (done) {\n          _onFinish();\n          controller.close();\n          return;\n        }\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdHJhY2tTdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ08sTUFBTUEsV0FBVyxHQUFHLFVBQUFBLENBQVdDLEtBQUssRUFBRUMsU0FBUyxFQUFFO0VBQ3RELElBQUlDLEdBQUcsR0FBR0YsS0FBSyxDQUFDRyxVQUFVO0VBRTFCLElBQUksQ0FBQ0YsU0FBUyxJQUFJQyxHQUFHLEdBQUdELFNBQVMsRUFBRTtJQUNqQyxNQUFNRCxLQUFLO0lBQ1g7RUFDRjtFQUVBLElBQUlJLEdBQUcsR0FBRyxDQUFDO0VBQ1gsSUFBSUMsR0FBRztFQUVQLE9BQU9ELEdBQUcsR0FBR0YsR0FBRyxFQUFFO0lBQ2hCRyxHQUFHLEdBQUdELEdBQUcsR0FBR0gsU0FBUztJQUNyQixNQUFNRCxLQUFLLENBQUNNLEtBQUssQ0FBQ0YsR0FBRyxFQUFFQyxHQUFHLENBQUM7SUFDM0JELEdBQUcsR0FBR0MsR0FBRztFQUNYO0FBQ0YsQ0FBQztBQUVNLE1BQU1FLFNBQVMsR0FBRyxnQkFBQUEsQ0FBaUJDLFFBQVEsRUFBRVAsU0FBUyxFQUFFO0VBQzdELFdBQVcsTUFBTUQsS0FBSyxJQUFJUyxVQUFVLENBQUNELFFBQVEsQ0FBQyxFQUFFO0lBQzlDLE9BQU9ULFdBQVcsQ0FBQ0MsS0FBSyxFQUFFQyxTQUFTLENBQUM7RUFDdEM7QUFDRixDQUFDO0FBRUQsTUFBTVEsVUFBVSxHQUFHLGdCQUFBQSxDQUFpQkMsTUFBTSxFQUFFO0VBQzFDLElBQUlBLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxhQUFhLENBQUMsRUFBRTtJQUNoQyxPQUFPRixNQUFNO0lBQ2I7RUFDRjtFQUVBLE1BQU1HLE1BQU0sR0FBR0gsTUFBTSxDQUFDSSxTQUFTLENBQUMsQ0FBQztFQUNqQyxJQUFJO0lBQ0YsU0FBUztNQUNQLE1BQU07UUFBQ0MsSUFBSTtRQUFFQztNQUFLLENBQUMsR0FBRyxNQUFNSCxNQUFNLENBQUNJLElBQUksQ0FBQyxDQUFDO01BQ3pDLElBQUlGLElBQUksRUFBRTtRQUNSO01BQ0Y7TUFDQSxNQUFNQyxLQUFLO0lBQ2I7RUFDRixDQUFDLFNBQVM7SUFDUixNQUFNSCxNQUFNLENBQUNLLE1BQU0sQ0FBQyxDQUFDO0VBQ3ZCO0FBQ0YsQ0FBQztBQUVNLE1BQU1DLFdBQVcsR0FBR0EsQ0FBQ1QsTUFBTSxFQUFFVCxTQUFTLEVBQUVtQixVQUFVLEVBQUVDLFFBQVEsS0FBSztFQUN0RSxNQUFNQyxRQUFRLEdBQUdmLFNBQVMsQ0FBQ0csTUFBTSxFQUFFVCxTQUFTLENBQUM7RUFFN0MsSUFBSXNCLEtBQUssR0FBRyxDQUFDO0VBQ2IsSUFBSVIsSUFBSTtFQUNSLElBQUlTLFNBQVMsR0FBSUMsQ0FBQyxJQUFLO0lBQ3JCLElBQUksQ0FBQ1YsSUFBSSxFQUFFO01BQ1RBLElBQUksR0FBRyxJQUFJO01BQ1hNLFFBQVEsSUFBSUEsUUFBUSxDQUFDSSxDQUFDLENBQUM7SUFDekI7RUFDRixDQUFDO0VBRUQsT0FBTyxJQUFJQyxjQUFjLENBQUM7SUFDeEIsTUFBTUMsSUFBSUEsQ0FBQ0MsVUFBVSxFQUFFO01BQ3JCLElBQUk7UUFDRixNQUFNO1VBQUNiLElBQUk7VUFBRUM7UUFBSyxDQUFDLEdBQUcsTUFBTU0sUUFBUSxDQUFDTyxJQUFJLENBQUMsQ0FBQztRQUUzQyxJQUFJZCxJQUFJLEVBQUU7VUFDVFMsU0FBUyxDQUFDLENBQUM7VUFDVkksVUFBVSxDQUFDRSxLQUFLLENBQUMsQ0FBQztVQUNsQjtRQUNGO1FBRUEsSUFBSTVCLEdBQUcsR0FBR2MsS0FBSyxDQUFDYixVQUFVO1FBQzFCLElBQUlpQixVQUFVLEVBQUU7VUFDZCxJQUFJVyxXQUFXLEdBQUdSLEtBQUssSUFBSXJCLEdBQUc7VUFDOUJrQixVQUFVLENBQUNXLFdBQVcsQ0FBQztRQUN6QjtRQUNBSCxVQUFVLENBQUNJLE9BQU8sQ0FBQyxJQUFJQyxVQUFVLENBQUNqQixLQUFLLENBQUMsQ0FBQztNQUMzQyxDQUFDLENBQUMsT0FBT2tCLEdBQUcsRUFBRTtRQUNaVixTQUFTLENBQUNVLEdBQUcsQ0FBQztRQUNkLE1BQU1BLEdBQUc7TUFDWDtJQUNGLENBQUM7SUFDRGhCLE1BQU1BLENBQUNpQixNQUFNLEVBQUU7TUFDYlgsU0FBUyxDQUFDVyxNQUFNLENBQUM7TUFDakIsT0FBT2IsUUFBUSxDQUFDYyxNQUFNLENBQUMsQ0FBQztJQUMxQjtFQUNGLENBQUMsRUFBRTtJQUNEQyxhQUFhLEVBQUU7RUFDakIsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdHJhY2tTdHJlYW0uanM/ZTdkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBjb25zdCBzdHJlYW1DaHVuayA9IGZ1bmN0aW9uKiAoY2h1bmssIGNodW5rU2l6ZSkge1xuICBsZXQgbGVuID0gY2h1bmsuYnl0ZUxlbmd0aDtcblxuICBpZiAoIWNodW5rU2l6ZSB8fCBsZW4gPCBjaHVua1NpemUpIHtcbiAgICB5aWVsZCBjaHVuaztcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgcG9zID0gMDtcbiAgbGV0IGVuZDtcblxuICB3aGlsZSAocG9zIDwgbGVuKSB7XG4gICAgZW5kID0gcG9zICsgY2h1bmtTaXplO1xuICAgIHlpZWxkIGNodW5rLnNsaWNlKHBvcywgZW5kKTtcbiAgICBwb3MgPSBlbmQ7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJlYWRCeXRlcyA9IGFzeW5jIGZ1bmN0aW9uKiAoaXRlcmFibGUsIGNodW5rU2l6ZSkge1xuICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHJlYWRTdHJlYW0oaXRlcmFibGUpKSB7XG4gICAgeWllbGQqIHN0cmVhbUNodW5rKGNodW5rLCBjaHVua1NpemUpO1xuICB9XG59XG5cbmNvbnN0IHJlYWRTdHJlYW0gPSBhc3luYyBmdW5jdGlvbiogKHN0cmVhbSkge1xuICBpZiAoc3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSkge1xuICAgIHlpZWxkKiBzdHJlYW07XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgcmVhZGVyID0gc3RyZWFtLmdldFJlYWRlcigpO1xuICB0cnkge1xuICAgIGZvciAoOzspIHtcbiAgICAgIGNvbnN0IHtkb25lLCB2YWx1ZX0gPSBhd2FpdCByZWFkZXIucmVhZCgpO1xuICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB5aWVsZCB2YWx1ZTtcbiAgICB9XG4gIH0gZmluYWxseSB7XG4gICAgYXdhaXQgcmVhZGVyLmNhbmNlbCgpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCB0cmFja1N0cmVhbSA9IChzdHJlYW0sIGNodW5rU2l6ZSwgb25Qcm9ncmVzcywgb25GaW5pc2gpID0+IHtcbiAgY29uc3QgaXRlcmF0b3IgPSByZWFkQnl0ZXMoc3RyZWFtLCBjaHVua1NpemUpO1xuXG4gIGxldCBieXRlcyA9IDA7XG4gIGxldCBkb25lO1xuICBsZXQgX29uRmluaXNoID0gKGUpID0+IHtcbiAgICBpZiAoIWRvbmUpIHtcbiAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgb25GaW5pc2ggJiYgb25GaW5pc2goZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbSh7XG4gICAgYXN5bmMgcHVsbChjb250cm9sbGVyKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB7ZG9uZSwgdmFsdWV9ID0gYXdhaXQgaXRlcmF0b3IubmV4dCgpO1xuXG4gICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICBfb25GaW5pc2goKTtcbiAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGxlbiA9IHZhbHVlLmJ5dGVMZW5ndGg7XG4gICAgICAgIGlmIChvblByb2dyZXNzKSB7XG4gICAgICAgICAgbGV0IGxvYWRlZEJ5dGVzID0gYnl0ZXMgKz0gbGVuO1xuICAgICAgICAgIG9uUHJvZ3Jlc3MobG9hZGVkQnl0ZXMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShuZXcgVWludDhBcnJheSh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9vbkZpbmlzaChlcnIpO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfSxcbiAgICBjYW5jZWwocmVhc29uKSB7XG4gICAgICBfb25GaW5pc2gocmVhc29uKTtcbiAgICAgIHJldHVybiBpdGVyYXRvci5yZXR1cm4oKTtcbiAgICB9XG4gIH0sIHtcbiAgICBoaWdoV2F0ZXJNYXJrOiAyXG4gIH0pXG59XG4iXSwibmFtZXMiOlsic3RyZWFtQ2h1bmsiLCJjaHVuayIsImNodW5rU2l6ZSIsImxlbiIsImJ5dGVMZW5ndGgiLCJwb3MiLCJlbmQiLCJzbGljZSIsInJlYWRCeXRlcyIsIml0ZXJhYmxlIiwicmVhZFN0cmVhbSIsInN0cmVhbSIsIlN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJyZWFkZXIiLCJnZXRSZWFkZXIiLCJkb25lIiwidmFsdWUiLCJyZWFkIiwiY2FuY2VsIiwidHJhY2tTdHJlYW0iLCJvblByb2dyZXNzIiwib25GaW5pc2giLCJpdGVyYXRvciIsImJ5dGVzIiwiX29uRmluaXNoIiwiZSIsIlJlYWRhYmxlU3RyZWFtIiwicHVsbCIsImNvbnRyb2xsZXIiLCJuZXh0IiwiY2xvc2UiLCJsb2FkZWRCeXRlcyIsImVucXVldWUiLCJVaW50OEFycmF5IiwiZXJyIiwicmVhc29uIiwicmV0dXJuIiwiaGlnaFdhdGVyTWFyayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/trackStream.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED);\n    }\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n    }\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  assertOptions,\n  validators\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFhOztBQUUwQjtBQUNRO0FBRS9DLE1BQU1FLFVBQVUsR0FBRyxDQUFDLENBQUM7O0FBRXJCO0FBQ0EsQ0FBQyxRQUFRLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDQyxPQUFPLENBQUMsQ0FBQ0MsSUFBSSxFQUFFQyxDQUFDLEtBQUs7RUFDbkZILFVBQVUsQ0FBQ0UsSUFBSSxDQUFDLEdBQUcsU0FBU0UsU0FBU0EsQ0FBQ0MsS0FBSyxFQUFFO0lBQzNDLE9BQU8sT0FBT0EsS0FBSyxLQUFLSCxJQUFJLElBQUksR0FBRyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsR0FBR0QsSUFBSTtFQUNuRSxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTUksa0JBQWtCLEdBQUcsQ0FBQyxDQUFDOztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQU4sVUFBVSxDQUFDTyxZQUFZLEdBQUcsU0FBU0EsWUFBWUEsQ0FBQ0gsU0FBUyxFQUFFSSxPQUFPLEVBQUVDLE9BQU8sRUFBRTtFQUMzRSxTQUFTQyxhQUFhQSxDQUFDQyxHQUFHLEVBQUVDLElBQUksRUFBRTtJQUNoQyxPQUFPLFVBQVUsR0FBR2QsaURBQU8sR0FBRywwQkFBMEIsR0FBR2EsR0FBRyxHQUFHLElBQUksR0FBR0MsSUFBSSxJQUFJSCxPQUFPLEdBQUcsSUFBSSxHQUFHQSxPQUFPLEdBQUcsRUFBRSxDQUFDO0VBQ2hIOztFQUVBO0VBQ0EsT0FBTyxDQUFDSSxLQUFLLEVBQUVGLEdBQUcsRUFBRUcsSUFBSSxLQUFLO0lBQzNCLElBQUlWLFNBQVMsS0FBSyxLQUFLLEVBQUU7TUFDdkIsTUFBTSxJQUFJTCwyREFBVSxDQUNsQlcsYUFBYSxDQUFDQyxHQUFHLEVBQUUsbUJBQW1CLElBQUlILE9BQU8sR0FBRyxNQUFNLEdBQUdBLE9BQU8sR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUMzRVQsMEVBQ0YsQ0FBQztJQUNIO0lBRUEsSUFBSVMsT0FBTyxJQUFJLENBQUNGLGtCQUFrQixDQUFDSyxHQUFHLENBQUMsRUFBRTtNQUN2Q0wsa0JBQWtCLENBQUNLLEdBQUcsQ0FBQyxHQUFHLElBQUk7TUFDOUI7TUFDQUssT0FBTyxDQUFDQyxJQUFJLENBQ1ZQLGFBQWEsQ0FDWEMsR0FBRyxFQUNILDhCQUE4QixHQUFHSCxPQUFPLEdBQUcseUNBQzdDLENBQ0YsQ0FBQztJQUNIO0lBRUEsT0FBT0osU0FBUyxHQUFHQSxTQUFTLENBQUNTLEtBQUssRUFBRUYsR0FBRyxFQUFFRyxJQUFJLENBQUMsR0FBRyxJQUFJO0VBQ3ZELENBQUM7QUFDSCxDQUFDO0FBRURkLFVBQVUsQ0FBQ2tCLFFBQVEsR0FBRyxTQUFTQSxRQUFRQSxDQUFDQyxlQUFlLEVBQUU7RUFDdkQsT0FBTyxDQUFDTixLQUFLLEVBQUVGLEdBQUcsS0FBSztJQUNyQjtJQUNBSyxPQUFPLENBQUNDLElBQUksQ0FBQyxHQUFHTixHQUFHLCtCQUErQlEsZUFBZSxFQUFFLENBQUM7SUFDcEUsT0FBTyxJQUFJO0VBQ2IsQ0FBQztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNDLGFBQWFBLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxZQUFZLEVBQUU7RUFDcEQsSUFBSSxPQUFPRixPQUFPLEtBQUssUUFBUSxFQUFFO0lBQy9CLE1BQU0sSUFBSXRCLDJEQUFVLENBQUMsMkJBQTJCLEVBQUVBLGdGQUErQixDQUFDO0VBQ3BGO0VBQ0EsTUFBTTBCLElBQUksR0FBR0MsTUFBTSxDQUFDRCxJQUFJLENBQUNKLE9BQU8sQ0FBQztFQUNqQyxJQUFJbEIsQ0FBQyxHQUFHc0IsSUFBSSxDQUFDRSxNQUFNO0VBQ25CLE9BQU94QixDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7SUFDZCxNQUFNUSxHQUFHLEdBQUdjLElBQUksQ0FBQ3RCLENBQUMsQ0FBQztJQUNuQixNQUFNQyxTQUFTLEdBQUdrQixNQUFNLENBQUNYLEdBQUcsQ0FBQztJQUM3QixJQUFJUCxTQUFTLEVBQUU7TUFDYixNQUFNUyxLQUFLLEdBQUdRLE9BQU8sQ0FBQ1YsR0FBRyxDQUFDO01BQzFCLE1BQU1pQixNQUFNLEdBQUdmLEtBQUssS0FBS2dCLFNBQVMsSUFBSXpCLFNBQVMsQ0FBQ1MsS0FBSyxFQUFFRixHQUFHLEVBQUVVLE9BQU8sQ0FBQztNQUNwRSxJQUFJTyxNQUFNLEtBQUssSUFBSSxFQUFFO1FBQ25CLE1BQU0sSUFBSTdCLDJEQUFVLENBQUMsU0FBUyxHQUFHWSxHQUFHLEdBQUcsV0FBVyxHQUFHaUIsTUFBTSxFQUFFN0IsZ0ZBQStCLENBQUM7TUFDL0Y7TUFDQTtJQUNGO0lBQ0EsSUFBSXdCLFlBQVksS0FBSyxJQUFJLEVBQUU7TUFDekIsTUFBTSxJQUFJeEIsMkRBQVUsQ0FBQyxpQkFBaUIsR0FBR1ksR0FBRyxFQUFFWiwwRUFBeUIsQ0FBQztJQUMxRTtFQUNGO0FBQ0Y7QUFFQSwrREFBZTtFQUNicUIsYUFBYTtFQUNicEI7QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanM/MDEzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7VkVSU0lPTn0gZnJvbSAnLi4vZW52L2RhdGEuanMnO1xuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi4vY29yZS9BeGlvc0Vycm9yLmpzJztcblxuY29uc3QgdmFsaWRhdG9ycyA9IHt9O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuWydvYmplY3QnLCAnYm9vbGVhbicsICdudW1iZXInLCAnZnVuY3Rpb24nLCAnc3RyaW5nJywgJ3N5bWJvbCddLmZvckVhY2goKHR5cGUsIGkpID0+IHtcbiAgdmFsaWRhdG9yc1t0eXBlXSA9IGZ1bmN0aW9uIHZhbGlkYXRvcih0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgPT09IHR5cGUgfHwgJ2EnICsgKGkgPCAxID8gJ24gJyA6ICcgJykgKyB0eXBlO1xuICB9O1xufSk7XG5cbmNvbnN0IGRlcHJlY2F0ZWRXYXJuaW5ncyA9IHt9O1xuXG4vKipcbiAqIFRyYW5zaXRpb25hbCBvcHRpb24gdmFsaWRhdG9yXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbnxib29sZWFuP30gdmFsaWRhdG9yIC0gc2V0IHRvIGZhbHNlIGlmIHRoZSB0cmFuc2l0aW9uYWwgb3B0aW9uIGhhcyBiZWVuIHJlbW92ZWRcbiAqIEBwYXJhbSB7c3RyaW5nP30gdmVyc2lvbiAtIGRlcHJlY2F0ZWQgdmVyc2lvbiAvIHJlbW92ZWQgc2luY2UgdmVyc2lvblxuICogQHBhcmFtIHtzdHJpbmc/fSBtZXNzYWdlIC0gc29tZSBtZXNzYWdlIHdpdGggYWRkaXRpb25hbCBpbmZvXG4gKlxuICogQHJldHVybnMge2Z1bmN0aW9ufVxuICovXG52YWxpZGF0b3JzLnRyYW5zaXRpb25hbCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25hbCh2YWxpZGF0b3IsIHZlcnNpb24sIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShvcHQsIGRlc2MpIHtcbiAgICByZXR1cm4gJ1tBeGlvcyB2JyArIFZFUlNJT04gKyAnXSBUcmFuc2l0aW9uYWwgb3B0aW9uIFxcJycgKyBvcHQgKyAnXFwnJyArIGRlc2MgKyAobWVzc2FnZSA/ICcuICcgKyBtZXNzYWdlIDogJycpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgcmV0dXJuICh2YWx1ZSwgb3B0LCBvcHRzKSA9PiB7XG4gICAgaWYgKHZhbGlkYXRvciA9PT0gZmFsc2UpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKG9wdCwgJyBoYXMgYmVlbiByZW1vdmVkJyArICh2ZXJzaW9uID8gJyBpbiAnICsgdmVyc2lvbiA6ICcnKSksXG4gICAgICAgIEF4aW9zRXJyb3IuRVJSX0RFUFJFQ0FURURcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHZlcnNpb24gJiYgIWRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdKSB7XG4gICAgICBkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSA9IHRydWU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKFxuICAgICAgICAgIG9wdCxcbiAgICAgICAgICAnIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdicgKyB2ZXJzaW9uICsgJyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSdcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsaWRhdG9yID8gdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdHMpIDogdHJ1ZTtcbiAgfTtcbn07XG5cbnZhbGlkYXRvcnMuc3BlbGxpbmcgPSBmdW5jdGlvbiBzcGVsbGluZyhjb3JyZWN0U3BlbGxpbmcpIHtcbiAgcmV0dXJuICh2YWx1ZSwgb3B0KSA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLndhcm4oYCR7b3B0fSBpcyBsaWtlbHkgYSBtaXNzcGVsbGluZyBvZiAke2NvcnJlY3RTcGVsbGluZ31gKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcblxuLyoqXG4gKiBBc3NlcnQgb2JqZWN0J3MgcHJvcGVydGllcyB0eXBlXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBzY2hlbWFcbiAqIEBwYXJhbSB7Ym9vbGVhbj99IGFsbG93VW5rbm93blxuICpcbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cblxuZnVuY3Rpb24gYXNzZXJ0T3B0aW9ucyhvcHRpb25zLCBzY2hlbWEsIGFsbG93VW5rbm93bikge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QnLCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtcbiAgfVxuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob3B0aW9ucyk7XG4gIGxldCBpID0ga2V5cy5sZW5ndGg7XG4gIHdoaWxlIChpLS0gPiAwKSB7XG4gICAgY29uc3Qgb3B0ID0ga2V5c1tpXTtcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBzY2hlbWFbb3B0XTtcbiAgICBpZiAodmFsaWRhdG9yKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IG9wdGlvbnNbb3B0XTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdGlvbnMpO1xuICAgICAgaWYgKHJlc3VsdCAhPT0gdHJ1ZSkge1xuICAgICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcignb3B0aW9uICcgKyBvcHQgKyAnIG11c3QgYmUgJyArIHJlc3VsdCwgQXhpb3NFcnJvci5FUlJfQkFEX09QVElPTl9WQUxVRSk7XG4gICAgICB9XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGFsbG93VW5rbm93biAhPT0gdHJ1ZSkge1xuICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ1Vua25vd24gb3B0aW9uICcgKyBvcHQsIEF4aW9zRXJyb3IuRVJSX0JBRF9PUFRJT04pO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFzc2VydE9wdGlvbnMsXG4gIHZhbGlkYXRvcnNcbn07XG4iXSwibmFtZXMiOlsiVkVSU0lPTiIsIkF4aW9zRXJyb3IiLCJ2YWxpZGF0b3JzIiwiZm9yRWFjaCIsInR5cGUiLCJpIiwidmFsaWRhdG9yIiwidGhpbmciLCJkZXByZWNhdGVkV2FybmluZ3MiLCJ0cmFuc2l0aW9uYWwiLCJ2ZXJzaW9uIiwibWVzc2FnZSIsImZvcm1hdE1lc3NhZ2UiLCJvcHQiLCJkZXNjIiwidmFsdWUiLCJvcHRzIiwiRVJSX0RFUFJFQ0FURUQiLCJjb25zb2xlIiwid2FybiIsInNwZWxsaW5nIiwiY29ycmVjdFNwZWxsaW5nIiwiYXNzZXJ0T3B0aW9ucyIsIm9wdGlvbnMiLCJzY2hlbWEiLCJhbGxvd1Vua25vd24iLCJFUlJfQkFEX09QVElPTl9WQUxVRSIsImtleXMiLCJPYmplY3QiLCJsZW5ndGgiLCJyZXN1bHQiLCJ1bmRlZmluZWQiLCJFUlJfQkFEX09QVElPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/validator.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/Blob.js":
/*!*****************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/Blob.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof Blob !== 'undefined' ? Blob : null);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9CbG9iLmpzIiwibWFwcGluZ3MiOiI7QUFBWTs7QUFFWiwrREFBZSxPQUFPQSxJQUFJLEtBQUssV0FBVyxHQUFHQSxJQUFJLEdBQUcsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9CbG9iLmpzPzZkNzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVvZiBCbG9iICE9PSAndW5kZWZpbmVkJyA/IEJsb2IgOiBudWxsXG4iXSwibmFtZXMiOlsiQmxvYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/classes/Blob.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!*********************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof FormData !== 'undefined' ? FormData : null);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9Gb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWIsK0RBQWUsT0FBT0EsUUFBUSxLQUFLLFdBQVcsR0FBR0EsUUFBUSxHQUFHLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvRm9ybURhdGEuanM/MWRiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVvZiBGb3JtRGF0YSAhPT0gJ3VuZGVmaW5lZCcgPyBGb3JtRGF0YSA6IG51bGw7XG4iXSwibmFtZXMiOlsiRm9ybURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/classes/FormData.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!****************************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9VUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBYTs7QUFFK0Q7QUFDNUUsK0RBQWUsT0FBT0MsZUFBZSxLQUFLLFdBQVcsR0FBR0EsZUFBZSxHQUFHRCx3RUFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvVVJMU2VhcmNoUGFyYW1zLmpzP2EwZWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQXhpb3NVUkxTZWFyY2hQYXJhbXMgZnJvbSAnLi4vLi4vLi4vaGVscGVycy9BeGlvc1VSTFNlYXJjaFBhcmFtcy5qcyc7XG5leHBvcnQgZGVmYXVsdCB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyA/IFVSTFNlYXJjaFBhcmFtcyA6IEF4aW9zVVJMU2VhcmNoUGFyYW1zO1xuIl0sIm5hbWVzIjpbIkF4aW9zVVJMU2VhcmNoUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ \"./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ \"./node_modules/axios/lib/platform/browser/classes/FormData.js\");\n/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ \"./node_modules/axios/lib/platform/browser/classes/Blob.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUEwRDtBQUNkO0FBQ1I7QUFFcEMsK0RBQWU7RUFDYkcsU0FBUyxFQUFFLElBQUk7RUFDZkMsT0FBTyxFQUFFO0lBQ1BKLGVBQWU7SUFDZkMsUUFBUTtJQUNSQyxJQUFJQSwwREFBQUE7RUFDTixDQUFDO0VBQ0RHLFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTTtBQUM1RCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz9iMmU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVUkxTZWFyY2hQYXJhbXMgZnJvbSAnLi9jbGFzc2VzL1VSTFNlYXJjaFBhcmFtcy5qcydcbmltcG9ydCBGb3JtRGF0YSBmcm9tICcuL2NsYXNzZXMvRm9ybURhdGEuanMnXG5pbXBvcnQgQmxvYiBmcm9tICcuL2NsYXNzZXMvQmxvYi5qcydcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpc0Jyb3dzZXI6IHRydWUsXG4gIGNsYXNzZXM6IHtcbiAgICBVUkxTZWFyY2hQYXJhbXMsXG4gICAgRm9ybURhdGEsXG4gICAgQmxvYlxuICB9LFxuICBwcm90b2NvbHM6IFsnaHR0cCcsICdodHRwcycsICdmaWxlJywgJ2Jsb2InLCAndXJsJywgJ2RhdGEnXVxufTtcbiJdLCJuYW1lcyI6WyJVUkxTZWFyY2hQYXJhbXMiLCJGb3JtRGF0YSIsIkJsb2IiLCJpc0Jyb3dzZXIiLCJjbGFzc2VzIiwicHJvdG9jb2xzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/browser/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/common/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/platform/common/utils.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBrowserEnv: function() { return /* binding */ hasBrowserEnv; },\n/* harmony export */   hasStandardBrowserEnv: function() { return /* binding */ hasStandardBrowserEnv; },\n/* harmony export */   hasStandardBrowserWebWorkerEnv: function() { return /* binding */ hasStandardBrowserWebWorkerEnv; },\n/* harmony export */   navigator: function() { return /* binding */ _navigator; },\n/* harmony export */   origin: function() { return /* binding */ origin; }\n/* harmony export */ });\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return typeof WorkerGlobalScope !== 'undefined' &&\n  // eslint-disable-next-line no-undef\n  self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';\n})();\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2NvbW1vbi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLE1BQU1BLGFBQWEsR0FBRyxPQUFPQyxNQUFNLEtBQUssV0FBVyxJQUFJLE9BQU9DLFFBQVEsS0FBSyxXQUFXO0FBRXRGLE1BQU1DLFVBQVUsR0FBRyxPQUFPQyxTQUFTLEtBQUssUUFBUSxJQUFJQSxTQUFTLElBQUlDLFNBQVM7O0FBRTFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQyxxQkFBcUIsR0FBR04sYUFBYSxLQUN4QyxDQUFDRyxVQUFVLElBQUksQ0FBQyxhQUFhLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDSSxPQUFPLENBQUNKLFVBQVUsQ0FBQ0ssT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDOztBQUV4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQyw4QkFBOEIsR0FBRyxDQUFDLE1BQU07RUFDNUMsT0FDRSxPQUFPQyxpQkFBaUIsS0FBSyxXQUFXO0VBQ3hDO0VBQ0FDLElBQUksWUFBWUQsaUJBQWlCLElBQ2pDLE9BQU9DLElBQUksQ0FBQ0MsYUFBYSxLQUFLLFVBQVU7QUFFNUMsQ0FBQyxFQUFFLENBQUM7QUFFSixNQUFNQyxNQUFNLEdBQUdiLGFBQWEsSUFBSUMsTUFBTSxDQUFDYSxRQUFRLENBQUNDLElBQUksSUFBSSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9jb21tb24vdXRpbHMuanM/YmY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoYXNCcm93c2VyRW52ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJztcblxuY29uc3QgX25hdmlnYXRvciA9IHR5cGVvZiBuYXZpZ2F0b3IgPT09ICdvYmplY3QnICYmIG5hdmlnYXRvciB8fCB1bmRlZmluZWQ7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICogbmF0aXZlc2NyaXB0XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ05hdGl2ZVNjcmlwdCcgb3IgJ05TJ1xuICpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5jb25zdCBoYXNTdGFuZGFyZEJyb3dzZXJFbnYgPSBoYXNCcm93c2VyRW52ICYmXG4gICghX25hdmlnYXRvciB8fCBbJ1JlYWN0TmF0aXZlJywgJ05hdGl2ZVNjcmlwdCcsICdOUyddLmluZGV4T2YoX25hdmlnYXRvci5wcm9kdWN0KSA8IDApO1xuXG4vKipcbiAqIERldGVybWluZSBpZiB3ZSdyZSBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciB3ZWJXb3JrZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBBbHRob3VnaCB0aGUgYGlzU3RhbmRhcmRCcm93c2VyRW52YCBtZXRob2QgaW5kaWNhdGVzIHRoYXRcbiAqIGBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlcmAsIHRoZSBXZWJXb3JrZXIgd2lsbCBzdGlsbCBiZVxuICogZmlsdGVyZWQgb3V0IGR1ZSB0byBpdHMganVkZ21lbnQgc3RhbmRhcmRcbiAqIGB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnYC5cbiAqIFRoaXMgbGVhZHMgdG8gYSBwcm9ibGVtIHdoZW4gYXhpb3MgcG9zdCBgRm9ybURhdGFgIGluIHdlYldvcmtlclxuICovXG5jb25zdCBoYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnYgPSAoKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICBzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGUgJiZcbiAgICB0eXBlb2Ygc2VsZi5pbXBvcnRTY3JpcHRzID09PSAnZnVuY3Rpb24nXG4gICk7XG59KSgpO1xuXG5jb25zdCBvcmlnaW4gPSBoYXNCcm93c2VyRW52ICYmIHdpbmRvdy5sb2NhdGlvbi5ocmVmIHx8ICdodHRwOi8vbG9jYWxob3N0JztcblxuZXhwb3J0IHtcbiAgaGFzQnJvd3NlckVudixcbiAgaGFzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52LFxuICBoYXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIF9uYXZpZ2F0b3IgYXMgbmF2aWdhdG9yLFxuICBvcmlnaW5cbn1cbiJdLCJuYW1lcyI6WyJoYXNCcm93c2VyRW52Iiwid2luZG93IiwiZG9jdW1lbnQiLCJfbmF2aWdhdG9yIiwibmF2aWdhdG9yIiwidW5kZWZpbmVkIiwiaGFzU3RhbmRhcmRCcm93c2VyRW52IiwiaW5kZXhPZiIsInByb2R1Y3QiLCJoYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnYiLCJXb3JrZXJHbG9iYWxTY29wZSIsInNlbGYiLCJpbXBvcnRTY3JpcHRzIiwib3JpZ2luIiwibG9jYXRpb24iLCJocmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/common/utils.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/platform/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/platform/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils.js */ \"./node_modules/axios/lib/platform/common/utils.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  ..._common_utils_js__WEBPACK_IMPORTED_MODULE_0__,\n  ..._node_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7OztBQUF1QztBQUNJO0FBRTNDLCtEQUFlO0VBQ2IsR0FBR0MsNkNBQUs7RUFDUixHQUFHRCxzREFBUUE7QUFDYixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vaW5kZXguanM/NzhmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi9ub2RlL2luZGV4LmpzJztcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vY29tbW9uL3V0aWxzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAuLi51dGlscyxcbiAgLi4ucGxhdGZvcm1cbn1cbiJdLCJuYW1lcyI6WyJwbGF0Zm9ybSIsInV0aWxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/platform/index.js\n"));

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {\n  toString\n} = Object.prototype;\nconst {\n  getPrototypeOf\n} = Object;\nconst kindOf = (cache => thing => {\n  const str = toString.call(thing);\n  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\nconst kindOfTest = type => {\n  type = type.toLowerCase();\n  return thing => kindOf(thing) === type;\n};\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {\n  isArray\n} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && isArrayBuffer(val.buffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = thing => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = val => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = val => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = thing => {\n  let kind;\n  return thing && (typeof FormData === 'function' && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === 'formdata' ||\n  // detect form-data instance\n  kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]'));\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = str => str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {\n  allOwnKeys = false\n} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : typeof window !== 'undefined' ? window : global;\n})();\nconst isContextDefined = context => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */\n) {\n  const {\n    caseless\n  } = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {\n  allOwnKeys\n} = {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {\n    allOwnKeys\n  });\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = content => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = thing => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n  const iterator = generator.call(obj);\n  let result;\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g, function replacer(m, p1, p2) {\n    return p1.toUpperCase() + p2;\n  });\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({\n  hasOwnProperty\n}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = obj => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n    const value = obj[name];\n    if (!isFunction(value)) return;\n    descriptor.enumerable = false;\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n  const define = arr => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n  return obj;\n};\nconst noop = () => {};\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\nconst DIGIT = '0123456789';\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {\n    length\n  } = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length | 0];\n  }\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\nconst toJSONObject = obj => {\n  const stack = new Array(10);\n  const visit = (source, i) => {\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n      if (!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n        stack[i] = undefined;\n        return target;\n      }\n    }\n    return source;\n  };\n  return visit(obj, 0);\n};\nconst isAsyncFn = kindOfTest('AsyncFunction');\nconst isThenable = thing => thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({\n      source,\n      data\n    }) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n    return cb => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    };\n  })(`axios@${Math.random()}`, []) : cb => setTimeout(cb);\n})(typeof setImmediate === 'function', isFunction(_global.postMessage));\nconst asap = typeof queueMicrotask !== 'undefined' ? queueMicrotask.bind(_global) : typeof process !== 'undefined' && process.nextTick || _setImmediate;\n\n// *********************\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty,\n  // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/has-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/has-cors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasCORS: function() { return /* binding */ hasCORS; }\n/* harmony export */ });\n// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n  value = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n}\nconst hasCORS = value;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9oYXMtY29ycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxJQUFJQSxLQUFLLEdBQUcsS0FBSztBQUNqQixJQUFJO0VBQ0FBLEtBQUssR0FBRyxPQUFPQyxjQUFjLEtBQUssV0FBVyxJQUN6QyxpQkFBaUIsSUFBSSxJQUFJQSxjQUFjLENBQUMsQ0FBQztBQUNqRCxDQUFDLENBQ0QsT0FBT0MsR0FBRyxFQUFFO0VBQ1I7RUFDQTtBQUFBO0FBRUcsTUFBTUMsT0FBTyxHQUFHSCxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2J1aWxkL2VzbS9jb250cmliL2hhcy1jb3JzLmpzPzExYzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vY29tcG9uZW50L2hhcy1jb3JzXG5sZXQgdmFsdWUgPSBmYWxzZTtcbnRyeSB7XG4gICAgdmFsdWUgPSB0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgICd3aXRoQ3JlZGVudGlhbHMnIGluIG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xufVxuY2F0Y2ggKGVycikge1xuICAgIC8vIGlmIFhNTEh0dHAgc3VwcG9ydCBpcyBkaXNhYmxlZCBpbiBJRSB0aGVuIGl0IHdpbGwgdGhyb3dcbiAgICAvLyB3aGVuIHRyeWluZyB0byBjcmVhdGVcbn1cbmV4cG9ydCBjb25zdCBoYXNDT1JTID0gdmFsdWU7XG4iXSwibmFtZXMiOlsidmFsdWUiLCJYTUxIdHRwUmVxdWVzdCIsImVyciIsImhhc0NPUlMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseqs.js":
/*!********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseqs.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: function() { return /* binding */ decode; },\n/* harmony export */   encode: function() { return /* binding */ encode; }\n/* harmony export */ });\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nfunction encode(obj) {\n  let str = '';\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n  return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nfunction decode(qs) {\n  let qry = {};\n  let pairs = qs.split('&');\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    let pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXFzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNBLE1BQU1BLENBQUNDLEdBQUcsRUFBRTtFQUN4QixJQUFJQyxHQUFHLEdBQUcsRUFBRTtFQUNaLEtBQUssSUFBSUMsQ0FBQyxJQUFJRixHQUFHLEVBQUU7SUFDZixJQUFJQSxHQUFHLENBQUNHLGNBQWMsQ0FBQ0QsQ0FBQyxDQUFDLEVBQUU7TUFDdkIsSUFBSUQsR0FBRyxDQUFDRyxNQUFNLEVBQ1ZILEdBQUcsSUFBSSxHQUFHO01BQ2RBLEdBQUcsSUFBSUksa0JBQWtCLENBQUNILENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBR0csa0JBQWtCLENBQUNMLEdBQUcsQ0FBQ0UsQ0FBQyxDQUFDLENBQUM7SUFDbkU7RUFDSjtFQUNBLE9BQU9ELEdBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNLLE1BQU1BLENBQUNDLEVBQUUsRUFBRTtFQUN2QixJQUFJQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0VBQ1osSUFBSUMsS0FBSyxHQUFHRixFQUFFLENBQUNHLEtBQUssQ0FBQyxHQUFHLENBQUM7RUFDekIsS0FBSyxJQUFJUixDQUFDLEdBQUcsQ0FBQyxFQUFFUyxDQUFDLEdBQUdGLEtBQUssQ0FBQ0wsTUFBTSxFQUFFRixDQUFDLEdBQUdTLENBQUMsRUFBRVQsQ0FBQyxFQUFFLEVBQUU7SUFDMUMsSUFBSVUsSUFBSSxHQUFHSCxLQUFLLENBQUNQLENBQUMsQ0FBQyxDQUFDUSxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQzlCRixHQUFHLENBQUNLLGtCQUFrQixDQUFDRCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHQyxrQkFBa0IsQ0FBQ0QsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ2xFO0VBQ0EsT0FBT0osR0FBRztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2J1aWxkL2VzbS9jb250cmliL3BhcnNlcXMuanM/MzM1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nYWxrbi9xdWVyeXN0cmluZ1xuLyoqXG4gKiBDb21waWxlcyBhIHF1ZXJ5c3RyaW5nXG4gKiBSZXR1cm5zIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShvYmopIHtcbiAgICBsZXQgc3RyID0gJyc7XG4gICAgZm9yIChsZXQgaSBpbiBvYmopIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgICAgICAgaWYgKHN0ci5sZW5ndGgpXG4gICAgICAgICAgICAgICAgc3RyICs9ICcmJztcbiAgICAgICAgICAgIHN0ciArPSBlbmNvZGVVUklDb21wb25lbnQoaSkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQob2JqW2ldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufVxuLyoqXG4gKiBQYXJzZXMgYSBzaW1wbGUgcXVlcnlzdHJpbmcgaW50byBhbiBvYmplY3RcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKHFzKSB7XG4gICAgbGV0IHFyeSA9IHt9O1xuICAgIGxldCBwYWlycyA9IHFzLnNwbGl0KCcmJyk7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBwYWlycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgbGV0IHBhaXIgPSBwYWlyc1tpXS5zcGxpdCgnPScpO1xuICAgICAgICBxcnlbZGVjb2RlVVJJQ29tcG9uZW50KHBhaXJbMF0pXSA9IGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzFdKTtcbiAgICB9XG4gICAgcmV0dXJuIHFyeTtcbn1cbiJdLCJuYW1lcyI6WyJlbmNvZGUiLCJvYmoiLCJzdHIiLCJpIiwiaGFzT3duUHJvcGVydHkiLCJsZW5ndGgiLCJlbmNvZGVVUklDb21wb25lbnQiLCJkZWNvZGUiLCJxcyIsInFyeSIsInBhaXJzIiwic3BsaXQiLCJsIiwicGFpciIsImRlY29kZVVSSUNvbXBvbmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseuri.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseuri.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: function() { return /* binding */ parse; }\n/* harmony export */ });\n// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\nfunction parse(str) {\n  const src = str,\n    b = str.indexOf('['),\n    e = str.indexOf(']');\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n  let m = re.exec(str || ''),\n    uri = {},\n    i = 14;\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n  uri.pathNames = pathNames(uri, uri['path']);\n  uri.queryKey = queryKey(uri, uri['query']);\n  return uri;\n}\nfunction pathNames(obj, path) {\n  const regx = /\\/{2,9}/g,\n    names = path.replace(regx, \"/\").split(\"/\");\n  if (path.slice(0, 1) == '/' || path.length === 0) {\n    names.splice(0, 1);\n  }\n  if (path.slice(-1) == '/') {\n    names.splice(names.length - 1, 1);\n  }\n  return names;\n}\nfunction queryKey(uri, query) {\n  const data = {};\n  query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n    if ($1) {\n      data[$1] = $2;\n    }\n  });\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXVyaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQSxFQUFFLEdBQUcscVBBQXFQO0FBQ2hRLE1BQU1DLEtBQUssR0FBRyxDQUNWLFFBQVEsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQ2hKO0FBQ00sU0FBU0MsS0FBS0EsQ0FBQ0MsR0FBRyxFQUFFO0VBQ3ZCLE1BQU1DLEdBQUcsR0FBR0QsR0FBRztJQUFFRSxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0csT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUFFQyxDQUFDLEdBQUdKLEdBQUcsQ0FBQ0csT0FBTyxDQUFDLEdBQUcsQ0FBQztFQUMzRCxJQUFJRCxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUlFLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtJQUNwQkosR0FBRyxHQUFHQSxHQUFHLENBQUNLLFNBQVMsQ0FBQyxDQUFDLEVBQUVILENBQUMsQ0FBQyxHQUFHRixHQUFHLENBQUNLLFNBQVMsQ0FBQ0gsQ0FBQyxFQUFFRSxDQUFDLENBQUMsQ0FBQ0UsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsR0FBR04sR0FBRyxDQUFDSyxTQUFTLENBQUNELENBQUMsRUFBRUosR0FBRyxDQUFDTyxNQUFNLENBQUM7RUFDckc7RUFDQSxJQUFJQyxDQUFDLEdBQUdYLEVBQUUsQ0FBQ1ksSUFBSSxDQUFDVCxHQUFHLElBQUksRUFBRSxDQUFDO0lBQUVVLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFBRUMsQ0FBQyxHQUFHLEVBQUU7RUFDNUMsT0FBT0EsQ0FBQyxFQUFFLEVBQUU7SUFDUkQsR0FBRyxDQUFDWixLQUFLLENBQUNhLENBQUMsQ0FBQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0csQ0FBQyxDQUFDLElBQUksRUFBRTtFQUM5QjtFQUNBLElBQUlULENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFO0lBQ3BCTSxHQUFHLENBQUNFLE1BQU0sR0FBR1gsR0FBRztJQUNoQlMsR0FBRyxDQUFDRyxJQUFJLEdBQUdILEdBQUcsQ0FBQ0csSUFBSSxDQUFDUixTQUFTLENBQUMsQ0FBQyxFQUFFSyxHQUFHLENBQUNHLElBQUksQ0FBQ04sTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDRCxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQztJQUN4RUksR0FBRyxDQUFDSSxTQUFTLEdBQUdKLEdBQUcsQ0FBQ0ksU0FBUyxDQUFDUixPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDQSxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDQSxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQztJQUNsRkksR0FBRyxDQUFDSyxPQUFPLEdBQUcsSUFBSTtFQUN0QjtFQUNBTCxHQUFHLENBQUNNLFNBQVMsR0FBR0EsU0FBUyxDQUFDTixHQUFHLEVBQUVBLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztFQUMzQ0EsR0FBRyxDQUFDTyxRQUFRLEdBQUdBLFFBQVEsQ0FBQ1AsR0FBRyxFQUFFQSxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDMUMsT0FBT0EsR0FBRztBQUNkO0FBQ0EsU0FBU00sU0FBU0EsQ0FBQ0UsR0FBRyxFQUFFQyxJQUFJLEVBQUU7RUFDMUIsTUFBTUMsSUFBSSxHQUFHLFVBQVU7SUFBRUMsS0FBSyxHQUFHRixJQUFJLENBQUNiLE9BQU8sQ0FBQ2MsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDRSxLQUFLLENBQUMsR0FBRyxDQUFDO0VBQ25FLElBQUlILElBQUksQ0FBQ0ksS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUlKLElBQUksQ0FBQ1osTUFBTSxLQUFLLENBQUMsRUFBRTtJQUM5Q2MsS0FBSyxDQUFDRyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUN0QjtFQUNBLElBQUlMLElBQUksQ0FBQ0ksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxFQUFFO0lBQ3ZCRixLQUFLLENBQUNHLE1BQU0sQ0FBQ0gsS0FBSyxDQUFDZCxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNyQztFQUNBLE9BQU9jLEtBQUs7QUFDaEI7QUFDQSxTQUFTSixRQUFRQSxDQUFDUCxHQUFHLEVBQUVlLEtBQUssRUFBRTtFQUMxQixNQUFNQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0VBQ2ZELEtBQUssQ0FBQ25CLE9BQU8sQ0FBQywyQkFBMkIsRUFBRSxVQUFVcUIsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRTtJQUM3RCxJQUFJRCxFQUFFLEVBQUU7TUFDSkYsSUFBSSxDQUFDRSxFQUFFLENBQUMsR0FBR0MsRUFBRTtJQUNqQjtFQUNKLENBQUMsQ0FBQztFQUNGLE9BQU9ILElBQUk7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXVyaS5qcz8zYTVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2dhbGtuL3BhcnNldXJpXG4vKipcbiAqIFBhcnNlcyBhIFVSSVxuICpcbiAqIE5vdGU6IHdlIGNvdWxkIGFsc28gaGF2ZSB1c2VkIHRoZSBidWlsdC1pbiBVUkwgb2JqZWN0LCBidXQgaXQgaXNuJ3Qgc3VwcG9ydGVkIG9uIGFsbCBwbGF0Zm9ybXMuXG4gKlxuICogU2VlOlxuICogLSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvVVJMXG4gKiAtIGh0dHBzOi8vY2FuaXVzZS5jb20vdXJsXG4gKiAtIGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL3JmYy9yZmMzOTg2I2FwcGVuZGl4LUJcbiAqXG4gKiBIaXN0b3J5IG9mIHRoZSBwYXJzZSgpIG1ldGhvZDpcbiAqIC0gZmlyc3QgY29tbWl0OiBodHRwczovL2dpdGh1Yi5jb20vc29ja2V0aW8vc29ja2V0LmlvLWNsaWVudC9jb21taXQvNGVlMWQ1ZDk0YjM5MDZhOWMwNTJiNDU5ZjFhODE4YjE1ZjM4ZjkxY1xuICogLSBleHBvcnQgaW50byBpdHMgb3duIG1vZHVsZTogaHR0cHM6Ly9naXRodWIuY29tL3NvY2tldGlvL2VuZ2luZS5pby1jbGllbnQvY29tbWl0L2RlMmM1NjFlNDU2NGVmZWI3OGYxYmRiMWJhMzllZjgxYjI4MjJjYjNcbiAqIC0gcmVpbXBvcnQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9zb2NrZXRpby9lbmdpbmUuaW8tY2xpZW50L2NvbW1pdC9kZjMyMjc3YzNmNmQ2MjJlZWM1ZWQwOWY0OTNjYWUzZjMzOTFkMjQyXG4gKlxuICogQGF1dGhvciBTdGV2ZW4gTGV2aXRoYW4gPHN0ZXZlbmxldml0aGFuLmNvbT4gKE1JVCBsaWNlbnNlKVxuICogQGFwaSBwcml2YXRlXG4gKi9cbmNvbnN0IHJlID0gL14oPzooPyFbXjpAXFwvPyNdKzpbXjpAXFwvXSpAKShodHRwfGh0dHBzfHdzfHdzcyk6XFwvXFwvKT8oKD86KChbXjpAXFwvPyNdKikoPzo6KFteOkBcXC8/I10qKSk/KT9AKT8oKD86W2EtZjAtOV17MCw0fTopezIsN31bYS1mMC05XXswLDR9fFteOlxcLz8jXSopKD86OihcXGQqKSk/KSgoKFxcLyg/OltePyNdKD8hW14/I1xcL10qXFwuW14/I1xcLy5dKyg/Ols/I118JCkpKSpcXC8/KT8oW14/I1xcL10qKSkoPzpcXD8oW14jXSopKT8oPzojKC4qKSk/KS87XG5jb25zdCBwYXJ0cyA9IFtcbiAgICAnc291cmNlJywgJ3Byb3RvY29sJywgJ2F1dGhvcml0eScsICd1c2VySW5mbycsICd1c2VyJywgJ3Bhc3N3b3JkJywgJ2hvc3QnLCAncG9ydCcsICdyZWxhdGl2ZScsICdwYXRoJywgJ2RpcmVjdG9yeScsICdmaWxlJywgJ3F1ZXJ5JywgJ2FuY2hvcidcbl07XG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gICAgY29uc3Qgc3JjID0gc3RyLCBiID0gc3RyLmluZGV4T2YoJ1snKSwgZSA9IHN0ci5pbmRleE9mKCddJyk7XG4gICAgaWYgKGIgIT0gLTEgJiYgZSAhPSAtMSkge1xuICAgICAgICBzdHIgPSBzdHIuc3Vic3RyaW5nKDAsIGIpICsgc3RyLnN1YnN0cmluZyhiLCBlKS5yZXBsYWNlKC86L2csICc7JykgKyBzdHIuc3Vic3RyaW5nKGUsIHN0ci5sZW5ndGgpO1xuICAgIH1cbiAgICBsZXQgbSA9IHJlLmV4ZWMoc3RyIHx8ICcnKSwgdXJpID0ge30sIGkgPSAxNDtcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgIHVyaVtwYXJ0c1tpXV0gPSBtW2ldIHx8ICcnO1xuICAgIH1cbiAgICBpZiAoYiAhPSAtMSAmJiBlICE9IC0xKSB7XG4gICAgICAgIHVyaS5zb3VyY2UgPSBzcmM7XG4gICAgICAgIHVyaS5ob3N0ID0gdXJpLmhvc3Quc3Vic3RyaW5nKDEsIHVyaS5ob3N0Lmxlbmd0aCAtIDEpLnJlcGxhY2UoLzsvZywgJzonKTtcbiAgICAgICAgdXJpLmF1dGhvcml0eSA9IHVyaS5hdXRob3JpdHkucmVwbGFjZSgnWycsICcnKS5yZXBsYWNlKCddJywgJycpLnJlcGxhY2UoLzsvZywgJzonKTtcbiAgICAgICAgdXJpLmlwdjZ1cmkgPSB0cnVlO1xuICAgIH1cbiAgICB1cmkucGF0aE5hbWVzID0gcGF0aE5hbWVzKHVyaSwgdXJpWydwYXRoJ10pO1xuICAgIHVyaS5xdWVyeUtleSA9IHF1ZXJ5S2V5KHVyaSwgdXJpWydxdWVyeSddKTtcbiAgICByZXR1cm4gdXJpO1xufVxuZnVuY3Rpb24gcGF0aE5hbWVzKG9iaiwgcGF0aCkge1xuICAgIGNvbnN0IHJlZ3ggPSAvXFwvezIsOX0vZywgbmFtZXMgPSBwYXRoLnJlcGxhY2UocmVneCwgXCIvXCIpLnNwbGl0KFwiL1wiKTtcbiAgICBpZiAocGF0aC5zbGljZSgwLCAxKSA9PSAnLycgfHwgcGF0aC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbmFtZXMuc3BsaWNlKDAsIDEpO1xuICAgIH1cbiAgICBpZiAocGF0aC5zbGljZSgtMSkgPT0gJy8nKSB7XG4gICAgICAgIG5hbWVzLnNwbGljZShuYW1lcy5sZW5ndGggLSAxLCAxKTtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWVzO1xufVxuZnVuY3Rpb24gcXVlcnlLZXkodXJpLCBxdWVyeSkge1xuICAgIGNvbnN0IGRhdGEgPSB7fTtcbiAgICBxdWVyeS5yZXBsYWNlKC8oPzpefCYpKFteJj1dKik9PyhbXiZdKikvZywgZnVuY3Rpb24gKCQwLCAkMSwgJDIpIHtcbiAgICAgICAgaWYgKCQxKSB7XG4gICAgICAgICAgICBkYXRhWyQxXSA9ICQyO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOlsicmUiLCJwYXJ0cyIsInBhcnNlIiwic3RyIiwic3JjIiwiYiIsImluZGV4T2YiLCJlIiwic3Vic3RyaW5nIiwicmVwbGFjZSIsImxlbmd0aCIsIm0iLCJleGVjIiwidXJpIiwiaSIsInNvdXJjZSIsImhvc3QiLCJhdXRob3JpdHkiLCJpcHY2dXJpIiwicGF0aE5hbWVzIiwicXVlcnlLZXkiLCJvYmoiLCJwYXRoIiwicmVneCIsIm5hbWVzIiwic3BsaXQiLCJzbGljZSIsInNwbGljZSIsInF1ZXJ5IiwiZGF0YSIsIiQwIiwiJDEiLCIkMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/yeast.js":
/*!******************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/yeast.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: function() { return /* binding */ decode; },\n/* harmony export */   encode: function() { return /* binding */ encode; },\n/* harmony export */   yeast: function() { return /* binding */ yeast; }\n/* harmony export */ });\n// imported from https://github.com/unshiftio/yeast\n\n\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n  length = 64,\n  map = {};\nlet seed = 0,\n  i = 0,\n  prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  let encoded = '';\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  let decoded = 0;\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  const now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi95ZWFzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhOztBQUNiLE1BQU1BLFFBQVEsR0FBRyxrRUFBa0UsQ0FBQ0MsS0FBSyxDQUFDLEVBQUUsQ0FBQztFQUFFQyxNQUFNLEdBQUcsRUFBRTtFQUFFQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQ3BILElBQUlDLElBQUksR0FBRyxDQUFDO0VBQUVDLENBQUMsR0FBRyxDQUFDO0VBQUVDLElBQUk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxNQUFNQSxDQUFDQyxHQUFHLEVBQUU7RUFDeEIsSUFBSUMsT0FBTyxHQUFHLEVBQUU7RUFDaEIsR0FBRztJQUNDQSxPQUFPLEdBQUdULFFBQVEsQ0FBQ1EsR0FBRyxHQUFHTixNQUFNLENBQUMsR0FBR08sT0FBTztJQUMxQ0QsR0FBRyxHQUFHRSxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsR0FBRyxHQUFHTixNQUFNLENBQUM7RUFDbEMsQ0FBQyxRQUFRTSxHQUFHLEdBQUcsQ0FBQztFQUNoQixPQUFPQyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTRyxNQUFNQSxDQUFDQyxHQUFHLEVBQUU7RUFDeEIsSUFBSUMsT0FBTyxHQUFHLENBQUM7RUFDZixLQUFLVCxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdRLEdBQUcsQ0FBQ1gsTUFBTSxFQUFFRyxDQUFDLEVBQUUsRUFBRTtJQUM3QlMsT0FBTyxHQUFHQSxPQUFPLEdBQUdaLE1BQU0sR0FBR0MsR0FBRyxDQUFDVSxHQUFHLENBQUNFLE1BQU0sQ0FBQ1YsQ0FBQyxDQUFDLENBQUM7RUFDbkQ7RUFDQSxPQUFPUyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0UsS0FBS0EsQ0FBQSxFQUFHO0VBQ3BCLE1BQU1DLEdBQUcsR0FBR1YsTUFBTSxDQUFDLENBQUMsSUFBSVcsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUMvQixJQUFJRCxHQUFHLEtBQUtYLElBQUksRUFDWixPQUFPRixJQUFJLEdBQUcsQ0FBQyxFQUFFRSxJQUFJLEdBQUdXLEdBQUc7RUFDL0IsT0FBT0EsR0FBRyxHQUFHLEdBQUcsR0FBR1YsTUFBTSxDQUFDSCxJQUFJLEVBQUUsQ0FBQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU9DLENBQUMsR0FBR0gsTUFBTSxFQUFFRyxDQUFDLEVBQUUsRUFDbEJGLEdBQUcsQ0FBQ0gsUUFBUSxDQUFDSyxDQUFDLENBQUMsQ0FBQyxHQUFHQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2J1aWxkL2VzbS9jb250cmliL3llYXN0LmpzPzE4OTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vdW5zaGlmdGlvL3llYXN0XG4ndXNlIHN0cmljdCc7XG5jb25zdCBhbHBoYWJldCA9ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ei1fJy5zcGxpdCgnJyksIGxlbmd0aCA9IDY0LCBtYXAgPSB7fTtcbmxldCBzZWVkID0gMCwgaSA9IDAsIHByZXY7XG4vKipcbiAqIFJldHVybiBhIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIHNwZWNpZmllZCBudW1iZXIuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG51bSBUaGUgbnVtYmVyIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBudW1iZXIuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKG51bSkge1xuICAgIGxldCBlbmNvZGVkID0gJyc7XG4gICAgZG8ge1xuICAgICAgICBlbmNvZGVkID0gYWxwaGFiZXRbbnVtICUgbGVuZ3RoXSArIGVuY29kZWQ7XG4gICAgICAgIG51bSA9IE1hdGguZmxvb3IobnVtIC8gbGVuZ3RoKTtcbiAgICB9IHdoaWxlIChudW0gPiAwKTtcbiAgICByZXR1cm4gZW5jb2RlZDtcbn1cbi8qKlxuICogUmV0dXJuIHRoZSBpbnRlZ2VyIHZhbHVlIHNwZWNpZmllZCBieSB0aGUgZ2l2ZW4gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge051bWJlcn0gVGhlIGludGVnZXIgdmFsdWUgcmVwcmVzZW50ZWQgYnkgdGhlIHN0cmluZy5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoc3RyKSB7XG4gICAgbGV0IGRlY29kZWQgPSAwO1xuICAgIGZvciAoaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZGVjb2RlZCA9IGRlY29kZWQgKiBsZW5ndGggKyBtYXBbc3RyLmNoYXJBdChpKV07XG4gICAgfVxuICAgIHJldHVybiBkZWNvZGVkO1xufVxuLyoqXG4gKiBZZWFzdDogQSB0aW55IGdyb3dpbmcgaWQgZ2VuZXJhdG9yLlxuICpcbiAqIEByZXR1cm5zIHtTdHJpbmd9IEEgdW5pcXVlIGlkLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHllYXN0KCkge1xuICAgIGNvbnN0IG5vdyA9IGVuY29kZSgrbmV3IERhdGUoKSk7XG4gICAgaWYgKG5vdyAhPT0gcHJldilcbiAgICAgICAgcmV0dXJuIHNlZWQgPSAwLCBwcmV2ID0gbm93O1xuICAgIHJldHVybiBub3cgKyAnLicgKyBlbmNvZGUoc2VlZCsrKTtcbn1cbi8vXG4vLyBNYXAgZWFjaCBjaGFyYWN0ZXIgdG8gaXRzIGluZGV4LlxuLy9cbmZvciAoOyBpIDwgbGVuZ3RoOyBpKyspXG4gICAgbWFwW2FscGhhYmV0W2ldXSA9IGk7XG4iXSwibmFtZXMiOlsiYWxwaGFiZXQiLCJzcGxpdCIsImxlbmd0aCIsIm1hcCIsInNlZWQiLCJpIiwicHJldiIsImVuY29kZSIsIm51bSIsImVuY29kZWQiLCJNYXRoIiwiZmxvb3IiLCJkZWNvZGUiLCJzdHIiLCJkZWNvZGVkIiwiY2hhckF0IiwieWVhc3QiLCJub3ciLCJEYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/yeast.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/globalThis.browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/globalThis.browser.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   globalThisShim: function() { return /* binding */ globalThisShim; }\n/* harmony export */ });\nconst globalThisShim = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vZ2xvYmFsVGhpcy5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxjQUFjLEdBQUcsQ0FBQyxNQUFNO0VBQ2pDLElBQUksT0FBT0MsSUFBSSxLQUFLLFdBQVcsRUFBRTtJQUM3QixPQUFPQSxJQUFJO0VBQ2YsQ0FBQyxNQUNJLElBQUksT0FBT0MsTUFBTSxLQUFLLFdBQVcsRUFBRTtJQUNwQyxPQUFPQSxNQUFNO0VBQ2pCLENBQUMsTUFDSTtJQUNELE9BQU9DLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0VBQ3BDO0FBQ0osQ0FBQyxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL2dsb2JhbFRoaXMuYnJvd3Nlci5qcz9lMDMwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBnbG9iYWxUaGlzU2hpbSA9ICgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3c7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuICAgIH1cbn0pKCk7XG4iXSwibmFtZXMiOlsiZ2xvYmFsVGhpc1NoaW0iLCJzZWxmIiwid2luZG93IiwiRnVuY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/globalThis.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: function() { return /* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket; },\n/* harmony export */   Transport: function() { return /* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.Transport; },\n/* harmony export */   installTimerFunctions: function() { return /* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.installTimerFunctions; },\n/* harmony export */   nextTick: function() { return /* reexport safe */ _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_5__.nextTick; },\n/* harmony export */   parse: function() { return /* reexport safe */ _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__.parse; },\n/* harmony export */   protocol: function() { return /* binding */ protocol; },\n/* harmony export */   transports: function() { return /* reexport safe */ _transports_index_js__WEBPACK_IMPORTED_MODULE_2__.transports; }\n/* harmony export */ });\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/engine.io-client/build/esm/socket.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transports/websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n\n\nconst protocol = _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket.protocol;\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNuQjtBQUNYLE1BQU1DLFFBQVEsR0FBR0QsOENBQU0sQ0FBQ0MsUUFBUTtBQUNJO0FBQ1E7QUFDRDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2J1aWxkL2VzbS9pbmRleC5qcz85OTg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNvY2tldCB9IGZyb20gXCIuL3NvY2tldC5qc1wiO1xuZXhwb3J0IHsgU29ja2V0IH07XG5leHBvcnQgY29uc3QgcHJvdG9jb2wgPSBTb2NrZXQucHJvdG9jb2w7XG5leHBvcnQgeyBUcmFuc3BvcnQgfSBmcm9tIFwiLi90cmFuc3BvcnQuanNcIjtcbmV4cG9ydCB7IHRyYW5zcG9ydHMgfSBmcm9tIFwiLi90cmFuc3BvcnRzL2luZGV4LmpzXCI7XG5leHBvcnQgeyBpbnN0YWxsVGltZXJGdW5jdGlvbnMgfSBmcm9tIFwiLi91dGlsLmpzXCI7XG5leHBvcnQgeyBwYXJzZSB9IGZyb20gXCIuL2NvbnRyaWIvcGFyc2V1cmkuanNcIjtcbmV4cG9ydCB7IG5leHRUaWNrIH0gZnJvbSBcIi4vdHJhbnNwb3J0cy93ZWJzb2NrZXQtY29uc3RydWN0b3IuanNcIjtcbiJdLCJuYW1lcyI6WyJTb2NrZXQiLCJwcm90b2NvbCIsIlRyYW5zcG9ydCIsInRyYW5zcG9ydHMiLCJpbnN0YWxsVGltZXJGdW5jdGlvbnMiLCJwYXJzZSIsIm5leHRUaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: function() { return /* binding */ Socket; }\n/* harmony export */ });\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\n\n\n\n\n\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri - uri or options\n   * @param {Object} opts - options\n   */\n  constructor(uri, opts = {}) {\n    super();\n    this.writeBuffer = [];\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n    if (uri) {\n      uri = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(opts.host).host;\n    }\n    (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.installTimerFunctions)(this, opts);\n    this.secure = null != opts.secure ? opts.secure : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n    this.hostname = opts.hostname || (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port = opts.port || (typeof location !== \"undefined\" && location.port ? location.port : this.secure ? \"443\" : \"80\");\n    this.transports = opts.transports || [\"polling\", \"websocket\", \"webtransport\"];\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n    this.opts = Object.assign({\n      path: \"/engine.io\",\n      agent: false,\n      withCredentials: false,\n      upgrade: true,\n      timestampParam: \"t\",\n      rememberUpgrade: false,\n      addTrailingSlash: true,\n      rejectUnauthorized: true,\n      perMessageDeflate: {\n        threshold: 1024\n      },\n      transportOptions: {},\n      closeOnBeforeunload: false\n    }, opts);\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + (this.opts.addTrailingSlash ? \"/\" : \"\");\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.decode)(this.opts.query);\n    }\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n    if (typeof addEventListener === \"function\") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        this.beforeunloadEventListener = () => {\n          if (this.transport) {\n            // silently close the transport\n            this.transport.removeAllListeners();\n            this.transport.close();\n          }\n        };\n        addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n      }\n      if (this.hostname !== \"localhost\") {\n        this.offlineEventListener = () => {\n          this.onClose(\"transport close\", {\n            description: \"network connection lost\"\n          });\n        };\n        addEventListener(\"offline\", this.offlineEventListener, false);\n      }\n    }\n    this.open();\n  }\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} name - transport name\n   * @return {Transport}\n   * @private\n   */\n  createTransport(name) {\n    const query = Object.assign({}, this.opts.query);\n    // append engine.io protocol identifier\n    query.EIO = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\n    // transport name\n    query.transport = name;\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n    const opts = Object.assign({}, this.opts, {\n      query,\n      socket: this,\n      hostname: this.hostname,\n      secure: this.secure,\n      port: this.port\n    }, this.opts.transportOptions[name]);\n    return new _transports_index_js__WEBPACK_IMPORTED_MODULE_0__.transports[name](opts);\n  }\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @private\n   */\n  open() {\n    let transport;\n    if (this.opts.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf(\"websocket\") !== -1) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      this.setTimeoutFn(() => {\n        this.emitReserved(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      this.transports.shift();\n      this.open();\n      return;\n    }\n    transport.open();\n    this.setTransport(transport);\n  }\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @private\n   */\n  setTransport(transport) {\n    if (this.transport) {\n      this.transport.removeAllListeners();\n    }\n    // set up transport\n    this.transport = transport;\n    // set up transport listeners\n    transport.on(\"drain\", this.onDrain.bind(this)).on(\"packet\", this.onPacket.bind(this)).on(\"error\", this.onError.bind(this)).on(\"close\", reason => this.onClose(\"transport close\", reason));\n  }\n  /**\n   * Probes a transport.\n   *\n   * @param {String} name - transport name\n   * @private\n   */\n  probe(name) {\n    let transport = this.createTransport(name);\n    let failed = false;\n    Socket.priorWebsocketSuccess = false;\n    const onTransportOpen = () => {\n      if (failed) return;\n      transport.send([{\n        type: \"ping\",\n        data: \"probe\"\n      }]);\n      transport.once(\"packet\", msg => {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          this.upgrading = true;\n          this.emitReserved(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n          this.transport.pause(() => {\n            if (failed) return;\n            if (\"closed\" === this.readyState) return;\n            cleanup();\n            this.setTransport(transport);\n            transport.send([{\n              type: \"upgrade\"\n            }]);\n            this.emitReserved(\"upgrade\", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          const err = new Error(\"probe error\");\n          // @ts-ignore\n          err.transport = transport.name;\n          this.emitReserved(\"upgradeError\", err);\n        }\n      });\n    };\n    function freezeTransport() {\n      if (failed) return;\n      // Any callback called by transport should be ignored since now\n      failed = true;\n      cleanup();\n      transport.close();\n      transport = null;\n    }\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error(\"probe error: \" + err);\n      // @ts-ignore\n      error.transport = transport.name;\n      freezeTransport();\n      this.emitReserved(\"upgradeError\", error);\n    };\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        freezeTransport();\n      }\n    }\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      this.off(\"close\", onclose);\n      this.off(\"upgrading\", onupgrade);\n    };\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n    if (this.upgrades.indexOf(\"webtransport\") !== -1 && name !== \"webtransport\") {\n      // favor WebTransport\n      this.setTimeoutFn(() => {\n        if (!failed) {\n          transport.open();\n        }\n      }, 200);\n    } else {\n      transport.open();\n    }\n  }\n  /**\n   * Called when connection is deemed open.\n   *\n   * @private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emitReserved(\"open\");\n    this.flush();\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\"open\" === this.readyState && this.opts.upgrade) {\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n  /**\n   * Handles a packet.\n   *\n   * @private\n   */\n  onPacket(packet) {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n      this.emitReserved(\"packet\", packet);\n      // Socket is live - any packet counts\n      this.emitReserved(\"heartbeat\");\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emitReserved(\"ping\");\n          this.emitReserved(\"pong\");\n          break;\n        case \"error\":\n          const err = new Error(\"server error\");\n          // @ts-ignore\n          err.code = packet.data;\n          this.onError(err);\n          break;\n        case \"message\":\n          this.emitReserved(\"data\", packet.data);\n          this.emitReserved(\"message\", packet.data);\n          break;\n      }\n    } else {}\n  }\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} data - handshake obj\n   * @private\n   */\n  onHandshake(data) {\n    this.emitReserved(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.maxPayload = data.maxPayload;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @private\n   */\n  resetPingTimeout() {\n    this.clearTimeoutFn(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = this.setTimeoutFn(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n  /**\n   * Called on `drain` event\n   *\n   * @private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n    if (0 === this.writeBuffer.length) {\n      this.emitReserved(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n  /**\n   * Flush write buffers.\n   *\n   * @private\n   */\n  flush() {\n    if (\"closed\" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n      const packets = this.getWritablePackets();\n      this.transport.send(packets);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = packets.length;\n      this.emitReserved(\"flush\");\n    }\n  }\n  /**\n   * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n   * long-polling)\n   *\n   * @private\n   */\n  getWritablePackets() {\n    const shouldCheckPayloadSize = this.maxPayload && this.transport.name === \"polling\" && this.writeBuffer.length > 1;\n    if (!shouldCheckPayloadSize) {\n      return this.writeBuffer;\n    }\n    let payloadSize = 1; // first packet type\n    for (let i = 0; i < this.writeBuffer.length; i++) {\n      const data = this.writeBuffer[i].data;\n      if (data) {\n        payloadSize += (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.byteLength)(data);\n      }\n      if (i > 0 && payloadSize > this.maxPayload) {\n        return this.writeBuffer.slice(0, i);\n      }\n      payloadSize += 2; // separator + packet type\n    }\n    return this.writeBuffer;\n  }\n  /**\n   * Sends a message.\n   *\n   * @param {String} msg - message.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @return {Socket} for chaining.\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n  /**\n   * Sends a packet.\n   *\n   * @param {String} type: packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} fn - callback function.\n   * @private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n    options = options || {};\n    options.compress = false !== options.compress;\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emitReserved(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n  /**\n   * Closes the connection.\n   */\n  close() {\n    const close = () => {\n      this.onClose(\"forced close\");\n      this.transport.close();\n    };\n    const cleanupAndClose = () => {\n      this.off(\"upgrade\", cleanupAndClose);\n      this.off(\"upgradeError\", cleanupAndClose);\n      close();\n    };\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      this.once(\"upgrade\", cleanupAndClose);\n      this.once(\"upgradeError\", cleanupAndClose);\n    };\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n    return this;\n  }\n  /**\n   * Called upon transport error\n   *\n   * @private\n   */\n  onError(err) {\n    Socket.priorWebsocketSuccess = false;\n    this.emitReserved(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n  /**\n   * Called upon transport close.\n   *\n   * @private\n   */\n  onClose(reason, description) {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n      // clear timers\n      this.clearTimeoutFn(this.pingTimeoutTimer);\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n      // ensure transport won't stay open\n      this.transport.close();\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n      if (typeof removeEventListener === \"function\") {\n        removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n        removeEventListener(\"offline\", this.offlineEventListener, false);\n      }\n      // set ready state\n      this.readyState = \"closed\";\n      // clear session id\n      this.id = null;\n      // emit close event\n      this.emitReserved(\"close\", reason, description);\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} upgrades - server upgrades\n   * @private\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\nSocket.protocol = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/socket.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transport.js":
/*!**************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transport.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transport: function() { return /* binding */ Transport; }\n/* harmony export */ });\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n\n\n\n\nclass TransportError extends Error {\n  constructor(reason, description, context) {\n    super(reason);\n    this.description = description;\n    this.context = context;\n    this.type = \"TransportError\";\n  }\n}\nclass Transport extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} opts - options\n   * @protected\n   */\n  constructor(opts) {\n    super();\n    this.writable = false;\n    (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.installTimerFunctions)(this, opts);\n    this.opts = opts;\n    this.query = opts.query;\n    this.socket = opts.socket;\n  }\n  /**\n   * Emits an error.\n   *\n   * @param {String} reason\n   * @param description\n   * @param context - the error context\n   * @return {Transport} for chaining\n   * @protected\n   */\n  onError(reason, description, context) {\n    super.emitReserved(\"error\", new TransportError(reason, description, context));\n    return this;\n  }\n  /**\n   * Opens the transport.\n   */\n  open() {\n    this.readyState = \"opening\";\n    this.doOpen();\n    return this;\n  }\n  /**\n   * Closes the transport.\n   */\n  close() {\n    if (this.readyState === \"opening\" || this.readyState === \"open\") {\n      this.doClose();\n      this.onClose();\n    }\n    return this;\n  }\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   */\n  send(packets) {\n    if (this.readyState === \"open\") {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n    }\n  }\n  /**\n   * Called upon open\n   *\n   * @protected\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    super.emitReserved(\"open\");\n  }\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @protected\n   */\n  onData(data) {\n    const packet = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_0__.decodePacket)(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n  /**\n   * Called with a decoded packet.\n   *\n   * @protected\n   */\n  onPacket(packet) {\n    super.emitReserved(\"packet\", packet);\n  }\n  /**\n   * Called upon close.\n   *\n   * @protected\n   */\n  onClose(details) {\n    this.readyState = \"closed\";\n    super.emitReserved(\"close\", details);\n  }\n  /**\n   * Pauses the transport, in order not to lose packets during an upgrade.\n   *\n   * @param onPause\n   */\n  pause(onPause) {}\n  createUri(schema, query = {}) {\n    return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n  }\n  _hostname() {\n    const hostname = this.opts.hostname;\n    return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n  }\n  _port() {\n    if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {\n      return \":\" + this.opts.port;\n    } else {\n      return \"\";\n    }\n  }\n  _query(query) {\n    const encodedQuery = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_3__.encode)(query);\n    return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transport.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transports: function() { return /* binding */ transports; }\n/* harmony export */ });\n/* harmony import */ var _polling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polling.js */ \"./node_modules/engine.io-client/build/esm/transports/polling.js\");\n/* harmony import */ var _websocket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./websocket.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket.js\");\n/* harmony import */ var _webtransport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webtransport.js */ \"./node_modules/engine.io-client/build/esm/transports/webtransport.js\");\n\n\n\nconst transports = {\n  websocket: _websocket_js__WEBPACK_IMPORTED_MODULE_1__.WS,\n  webtransport: _webtransport_js__WEBPACK_IMPORTED_MODULE_2__.WT,\n  polling: _polling_js__WEBPACK_IMPORTED_MODULE_0__.Polling\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVDO0FBQ0g7QUFDRztBQUNoQyxNQUFNRyxVQUFVLEdBQUc7RUFDdEJDLFNBQVMsRUFBRUgsNkNBQUU7RUFDYkksWUFBWSxFQUFFSCxnREFBRTtFQUNoQkksT0FBTyxFQUFFTixnREFBT0E7QUFDcEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy9pbmRleC5qcz83MThhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvbGxpbmcgfSBmcm9tIFwiLi9wb2xsaW5nLmpzXCI7XG5pbXBvcnQgeyBXUyB9IGZyb20gXCIuL3dlYnNvY2tldC5qc1wiO1xuaW1wb3J0IHsgV1QgfSBmcm9tIFwiLi93ZWJ0cmFuc3BvcnQuanNcIjtcbmV4cG9ydCBjb25zdCB0cmFuc3BvcnRzID0ge1xuICAgIHdlYnNvY2tldDogV1MsXG4gICAgd2VidHJhbnNwb3J0OiBXVCxcbiAgICBwb2xsaW5nOiBQb2xsaW5nLFxufTtcbiJdLCJuYW1lcyI6WyJQb2xsaW5nIiwiV1MiLCJXVCIsInRyYW5zcG9ydHMiLCJ3ZWJzb2NrZXQiLCJ3ZWJ0cmFuc3BvcnQiLCJwb2xsaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/index.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/polling.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/polling.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Polling: function() { return /* binding */ Polling; },\n/* harmony export */   Request: function() { return /* binding */ Request; }\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contrib/yeast.js */ \"./node_modules/engine.io-client/build/esm/contrib/yeast.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./xmlhttprequest.js */ \"./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\n\n\n\n\n\n\nfunction empty() {}\nconst hasXHR2 = function () {\n  const xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__.XHR({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nclass Polling extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @package\n   */\n  constructor(opts) {\n    super(opts);\n    this.polling = false;\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n    if (this.opts.withCredentials) {\n      this.cookieJar = (0,_xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__.createCookieJar)();\n    }\n  }\n  get name() {\n    return \"polling\";\n  }\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @protected\n   */\n  doOpen() {\n    this.poll();\n  }\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n   * @package\n   */\n  pause(onPause) {\n    this.readyState = \"pausing\";\n    const pause = () => {\n      this.readyState = \"paused\";\n      onPause();\n    };\n    if (this.polling || !this.writable) {\n      let total = 0;\n      if (this.polling) {\n        total++;\n        this.once(\"pollComplete\", function () {\n          --total || pause();\n        });\n      }\n      if (!this.writable) {\n        total++;\n        this.once(\"drain\", function () {\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n  /**\n   * Starts polling cycle.\n   *\n   * @private\n   */\n  poll() {\n    this.polling = true;\n    this.doPoll();\n    this.emitReserved(\"poll\");\n  }\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @protected\n   */\n  onData(data) {\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if (\"opening\" === this.readyState && packet.type === \"open\") {\n        this.onOpen();\n      }\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        this.onClose({\n          description: \"transport closed by the server\"\n        });\n        return false;\n      }\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n    // decode payload\n    (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.decodePayload)(data, this.socket.binaryType).forEach(callback);\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emitReserved(\"pollComplete\");\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {}\n    }\n  }\n  /**\n   * For polling, send a close packet.\n   *\n   * @protected\n   */\n  doClose() {\n    const close = () => {\n      this.write([{\n        type: \"close\"\n      }]);\n    };\n    if (\"open\" === this.readyState) {\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      this.once(\"open\", close);\n    }\n  }\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} packets - data packets\n   * @protected\n   */\n  write(packets) {\n    this.writable = false;\n    (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.encodePayload)(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emitReserved(\"drain\");\n      });\n    });\n  }\n  /**\n   * Generates uri for connection.\n   *\n   * @private\n   */\n  uri() {\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    const query = this.query || {};\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = (0,_contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__.yeast)();\n    }\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n    return this.createUri(schema, query);\n  }\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @private\n   */\n  request(opts = {}) {\n    Object.assign(opts, {\n      xd: this.xd,\n      cookieJar: this.cookieJar\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", (xhrStatus, context) => {\n      this.onError(\"xhr post error\", xhrStatus, context);\n    });\n  }\n  /**\n   * Starts a poll cycle.\n   *\n   * @private\n   */\n  doPoll() {\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", (xhrStatus, context) => {\n      this.onError(\"xhr poll error\", xhrStatus, context);\n    });\n    this.pollXhr = req;\n  }\n}\nclass Request extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @package\n   */\n  constructor(uri, opts) {\n    super();\n    (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.installTimerFunctions)(this, opts);\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @private\n   */\n  create() {\n    var _a;\n    const opts = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this.opts.xd;\n    const xhr = this.xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__.XHR(opts);\n    try {\n      xhr.open(this.method, this.uri, true);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n      (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n      xhr.onreadystatechange = () => {\n        var _a;\n        if (xhr.readyState === 3) {\n          (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          this.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          this.setTimeoutFn(() => {\n            this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n          }, 0);\n        }\n      };\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n  /**\n   * Called upon error.\n   *\n   * @private\n   */\n  onError(err) {\n    this.emitReserved(\"error\", err, this.xhr);\n    this.cleanup(true);\n  }\n  /**\n   * Cleans up house.\n   *\n   * @private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    this.xhr.onreadystatechange = empty;\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n    this.xhr = null;\n  }\n  /**\n   * Called upon load.\n   *\n   * @private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.emitReserved(\"data\", data);\n      this.emitReserved(\"success\");\n      this.cleanup();\n    }\n  }\n  /**\n   * Aborts the request.\n   *\n   * @package\n   */\n  abort() {\n    this.cleanup();\n  }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in _globalThis_js__WEBPACK_IMPORTED_MODULE_6__.globalThisShim ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy9wb2xsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE0QztBQUNBO0FBQ29CO0FBQ2M7QUFDdkI7QUFDRTtBQUNPO0FBQ2hFLFNBQVNZLEtBQUtBLENBQUEsRUFBRyxDQUFFO0FBQ25CLE1BQU1DLE9BQU8sR0FBSSxZQUFZO0VBQ3pCLE1BQU1DLEdBQUcsR0FBRyxJQUFJUixtREFBYyxDQUFDO0lBQzNCUyxPQUFPLEVBQUU7RUFDYixDQUFDLENBQUM7RUFDRixPQUFPLElBQUksSUFBSUQsR0FBRyxDQUFDRSxZQUFZO0FBQ25DLENBQUMsQ0FBRSxDQUFDO0FBQ0csTUFBTUMsT0FBTyxTQUFTakIsb0RBQVMsQ0FBQztFQUNuQztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSWtCLFdBQVdBLENBQUNDLElBQUksRUFBRTtJQUNkLEtBQUssQ0FBQ0EsSUFBSSxDQUFDO0lBQ1gsSUFBSSxDQUFDQyxPQUFPLEdBQUcsS0FBSztJQUNwQixJQUFJLE9BQU9DLFFBQVEsS0FBSyxXQUFXLEVBQUU7TUFDakMsTUFBTUMsS0FBSyxHQUFHLFFBQVEsS0FBS0QsUUFBUSxDQUFDRSxRQUFRO01BQzVDLElBQUlDLElBQUksR0FBR0gsUUFBUSxDQUFDRyxJQUFJO01BQ3hCO01BQ0EsSUFBSSxDQUFDQSxJQUFJLEVBQUU7UUFDUEEsSUFBSSxHQUFHRixLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUk7TUFDL0I7TUFDQSxJQUFJLENBQUNHLEVBQUUsR0FDRixPQUFPSixRQUFRLEtBQUssV0FBVyxJQUM1QkYsSUFBSSxDQUFDTyxRQUFRLEtBQUtMLFFBQVEsQ0FBQ0ssUUFBUSxJQUNuQ0YsSUFBSSxLQUFLTCxJQUFJLENBQUNLLElBQUk7SUFDOUI7SUFDQTtBQUNSO0FBQ0E7SUFDUSxNQUFNRyxXQUFXLEdBQUdSLElBQUksSUFBSUEsSUFBSSxDQUFDUSxXQUFXO0lBQzVDLElBQUksQ0FBQ0MsY0FBYyxHQUFHZixPQUFPLElBQUksQ0FBQ2MsV0FBVztJQUM3QyxJQUFJLElBQUksQ0FBQ1IsSUFBSSxDQUFDVSxlQUFlLEVBQUU7TUFDM0IsSUFBSSxDQUFDQyxTQUFTLEdBQUcxQixtRUFBZSxDQUFDLENBQUM7SUFDdEM7RUFDSjtFQUNBLElBQUkyQixJQUFJQSxDQUFBLEVBQUc7SUFDUCxPQUFPLFNBQVM7RUFDcEI7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSUMsTUFBTUEsQ0FBQSxFQUFHO0lBQ0wsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQztFQUNmO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0lDLEtBQUtBLENBQUNDLE9BQU8sRUFBRTtJQUNYLElBQUksQ0FBQ0MsVUFBVSxHQUFHLFNBQVM7SUFDM0IsTUFBTUYsS0FBSyxHQUFHQSxDQUFBLEtBQU07TUFDaEIsSUFBSSxDQUFDRSxVQUFVLEdBQUcsUUFBUTtNQUMxQkQsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDO0lBQ0QsSUFBSSxJQUFJLENBQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQ2lCLFFBQVEsRUFBRTtNQUNoQyxJQUFJQyxLQUFLLEdBQUcsQ0FBQztNQUNiLElBQUksSUFBSSxDQUFDbEIsT0FBTyxFQUFFO1FBQ2RrQixLQUFLLEVBQUU7UUFDUCxJQUFJLENBQUNDLElBQUksQ0FBQyxjQUFjLEVBQUUsWUFBWTtVQUNsQyxFQUFFRCxLQUFLLElBQUlKLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUMsQ0FBQztNQUNOO01BQ0EsSUFBSSxDQUFDLElBQUksQ0FBQ0csUUFBUSxFQUFFO1FBQ2hCQyxLQUFLLEVBQUU7UUFDUCxJQUFJLENBQUNDLElBQUksQ0FBQyxPQUFPLEVBQUUsWUFBWTtVQUMzQixFQUFFRCxLQUFLLElBQUlKLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUMsQ0FBQztNQUNOO0lBQ0osQ0FBQyxNQUNJO01BQ0RBLEtBQUssQ0FBQyxDQUFDO0lBQ1g7RUFDSjtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7RUFDSUQsSUFBSUEsQ0FBQSxFQUFHO0lBQ0gsSUFBSSxDQUFDYixPQUFPLEdBQUcsSUFBSTtJQUNuQixJQUFJLENBQUNvQixNQUFNLENBQUMsQ0FBQztJQUNiLElBQUksQ0FBQ0MsWUFBWSxDQUFDLE1BQU0sQ0FBQztFQUM3QjtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7RUFDSUMsTUFBTUEsQ0FBQ0MsSUFBSSxFQUFFO0lBQ1QsTUFBTUMsUUFBUSxHQUFJQyxNQUFNLElBQUs7TUFDekI7TUFDQSxJQUFJLFNBQVMsS0FBSyxJQUFJLENBQUNULFVBQVUsSUFBSVMsTUFBTSxDQUFDQyxJQUFJLEtBQUssTUFBTSxFQUFFO1FBQ3pELElBQUksQ0FBQ0MsTUFBTSxDQUFDLENBQUM7TUFDakI7TUFDQTtNQUNBLElBQUksT0FBTyxLQUFLRixNQUFNLENBQUNDLElBQUksRUFBRTtRQUN6QixJQUFJLENBQUNFLE9BQU8sQ0FBQztVQUFFQyxXQUFXLEVBQUU7UUFBaUMsQ0FBQyxDQUFDO1FBQy9ELE9BQU8sS0FBSztNQUNoQjtNQUNBO01BQ0EsSUFBSSxDQUFDQyxRQUFRLENBQUNMLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBQ0Q7SUFDQTFDLCtEQUFhLENBQUN3QyxJQUFJLEVBQUUsSUFBSSxDQUFDUSxNQUFNLENBQUNDLFVBQVUsQ0FBQyxDQUFDQyxPQUFPLENBQUNULFFBQVEsQ0FBQztJQUM3RDtJQUNBLElBQUksUUFBUSxLQUFLLElBQUksQ0FBQ1IsVUFBVSxFQUFFO01BQzlCO01BQ0EsSUFBSSxDQUFDaEIsT0FBTyxHQUFHLEtBQUs7TUFDcEIsSUFBSSxDQUFDcUIsWUFBWSxDQUFDLGNBQWMsQ0FBQztNQUNqQyxJQUFJLE1BQU0sS0FBSyxJQUFJLENBQUNMLFVBQVUsRUFBRTtRQUM1QixJQUFJLENBQUNILElBQUksQ0FBQyxDQUFDO01BQ2YsQ0FBQyxNQUNJLENBQ0w7SUFDSjtFQUNKO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUNJcUIsT0FBT0EsQ0FBQSxFQUFHO0lBQ04sTUFBTUMsS0FBSyxHQUFHQSxDQUFBLEtBQU07TUFDaEIsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQztRQUFFVixJQUFJLEVBQUU7TUFBUSxDQUFDLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBQ0QsSUFBSSxNQUFNLEtBQUssSUFBSSxDQUFDVixVQUFVLEVBQUU7TUFDNUJtQixLQUFLLENBQUMsQ0FBQztJQUNYLENBQUMsTUFDSTtNQUNEO01BQ0E7TUFDQSxJQUFJLENBQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFZ0IsS0FBSyxDQUFDO0lBQzVCO0VBQ0o7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSUMsS0FBS0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ1gsSUFBSSxDQUFDcEIsUUFBUSxHQUFHLEtBQUs7SUFDckJuQywrREFBYSxDQUFDdUQsT0FBTyxFQUFHZCxJQUFJLElBQUs7TUFDN0IsSUFBSSxDQUFDZSxPQUFPLENBQUNmLElBQUksRUFBRSxNQUFNO1FBQ3JCLElBQUksQ0FBQ04sUUFBUSxHQUFHLElBQUk7UUFDcEIsSUFBSSxDQUFDSSxZQUFZLENBQUMsT0FBTyxDQUFDO01BQzlCLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNOO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUNJa0IsR0FBR0EsQ0FBQSxFQUFHO0lBQ0YsTUFBTUMsTUFBTSxHQUFHLElBQUksQ0FBQ3pDLElBQUksQ0FBQzBDLE1BQU0sR0FBRyxPQUFPLEdBQUcsTUFBTTtJQUNsRCxNQUFNQyxLQUFLLEdBQUcsSUFBSSxDQUFDQSxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQzlCO0lBQ0EsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDM0MsSUFBSSxDQUFDNEMsaUJBQWlCLEVBQUU7TUFDdkNELEtBQUssQ0FBQyxJQUFJLENBQUMzQyxJQUFJLENBQUM2QyxjQUFjLENBQUMsR0FBRy9ELHdEQUFLLENBQUMsQ0FBQztJQUM3QztJQUNBLElBQUksQ0FBQyxJQUFJLENBQUMyQixjQUFjLElBQUksQ0FBQ2tDLEtBQUssQ0FBQ0csR0FBRyxFQUFFO01BQ3BDSCxLQUFLLENBQUNJLEdBQUcsR0FBRyxDQUFDO0lBQ2pCO0lBQ0EsT0FBTyxJQUFJLENBQUNDLFNBQVMsQ0FBQ1AsTUFBTSxFQUFFRSxLQUFLLENBQUM7RUFDeEM7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSU0sT0FBT0EsQ0FBQ2pELElBQUksR0FBRyxDQUFDLENBQUMsRUFBRTtJQUNma0QsTUFBTSxDQUFDQyxNQUFNLENBQUNuRCxJQUFJLEVBQUU7TUFBRU0sRUFBRSxFQUFFLElBQUksQ0FBQ0EsRUFBRTtNQUFFSyxTQUFTLEVBQUUsSUFBSSxDQUFDQTtJQUFVLENBQUMsRUFBRSxJQUFJLENBQUNYLElBQUksQ0FBQztJQUMxRSxPQUFPLElBQUlvRCxPQUFPLENBQUMsSUFBSSxDQUFDWixHQUFHLENBQUMsQ0FBQyxFQUFFeEMsSUFBSSxDQUFDO0VBQ3hDO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSXVDLE9BQU9BLENBQUNmLElBQUksRUFBRTZCLEVBQUUsRUFBRTtJQUNkLE1BQU1DLEdBQUcsR0FBRyxJQUFJLENBQUNMLE9BQU8sQ0FBQztNQUNyQk0sTUFBTSxFQUFFLE1BQU07TUFDZC9CLElBQUksRUFBRUE7SUFDVixDQUFDLENBQUM7SUFDRjhCLEdBQUcsQ0FBQ0UsRUFBRSxDQUFDLFNBQVMsRUFBRUgsRUFBRSxDQUFDO0lBQ3JCQyxHQUFHLENBQUNFLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQ0MsU0FBUyxFQUFFQyxPQUFPLEtBQUs7TUFDcEMsSUFBSSxDQUFDQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUVGLFNBQVMsRUFBRUMsT0FBTyxDQUFDO0lBQ3RELENBQUMsQ0FBQztFQUNOO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUNJckMsTUFBTUEsQ0FBQSxFQUFHO0lBQ0wsTUFBTWlDLEdBQUcsR0FBRyxJQUFJLENBQUNMLE9BQU8sQ0FBQyxDQUFDO0lBQzFCSyxHQUFHLENBQUNFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDakMsTUFBTSxDQUFDcUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDTixHQUFHLENBQUNFLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQ0MsU0FBUyxFQUFFQyxPQUFPLEtBQUs7TUFDcEMsSUFBSSxDQUFDQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUVGLFNBQVMsRUFBRUMsT0FBTyxDQUFDO0lBQ3RELENBQUMsQ0FBQztJQUNGLElBQUksQ0FBQ0csT0FBTyxHQUFHUCxHQUFHO0VBQ3RCO0FBQ0o7QUFDTyxNQUFNRixPQUFPLFNBQVNoRSxpRUFBTyxDQUFDO0VBQ2pDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNJVyxXQUFXQSxDQUFDeUMsR0FBRyxFQUFFeEMsSUFBSSxFQUFFO0lBQ25CLEtBQUssQ0FBQyxDQUFDO0lBQ1BYLCtEQUFxQixDQUFDLElBQUksRUFBRVcsSUFBSSxDQUFDO0lBQ2pDLElBQUksQ0FBQ0EsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ3VELE1BQU0sR0FBR3ZELElBQUksQ0FBQ3VELE1BQU0sSUFBSSxLQUFLO0lBQ2xDLElBQUksQ0FBQ2YsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDaEIsSUFBSSxHQUFHc0MsU0FBUyxLQUFLOUQsSUFBSSxDQUFDd0IsSUFBSSxHQUFHeEIsSUFBSSxDQUFDd0IsSUFBSSxHQUFHLElBQUk7SUFDdEQsSUFBSSxDQUFDdUMsTUFBTSxDQUFDLENBQUM7RUFDakI7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0VBQ0lBLE1BQU1BLENBQUEsRUFBRztJQUNMLElBQUlDLEVBQUU7SUFDTixNQUFNaEUsSUFBSSxHQUFHViw4Q0FBSSxDQUFDLElBQUksQ0FBQ1UsSUFBSSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxvQkFBb0IsRUFBRSxXQUFXLENBQUM7SUFDN0hBLElBQUksQ0FBQ0osT0FBTyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUNJLElBQUksQ0FBQ00sRUFBRTtJQUM3QixNQUFNWCxHQUFHLEdBQUksSUFBSSxDQUFDQSxHQUFHLEdBQUcsSUFBSVIsbURBQWMsQ0FBQ2EsSUFBSSxDQUFFO0lBQ2pELElBQUk7TUFDQUwsR0FBRyxDQUFDc0UsSUFBSSxDQUFDLElBQUksQ0FBQ1YsTUFBTSxFQUFFLElBQUksQ0FBQ2YsR0FBRyxFQUFFLElBQUksQ0FBQztNQUNyQyxJQUFJO1FBQ0EsSUFBSSxJQUFJLENBQUN4QyxJQUFJLENBQUNrRSxZQUFZLEVBQUU7VUFDeEJ2RSxHQUFHLENBQUN3RSxxQkFBcUIsSUFBSXhFLEdBQUcsQ0FBQ3dFLHFCQUFxQixDQUFDLElBQUksQ0FBQztVQUM1RCxLQUFLLElBQUlDLENBQUMsSUFBSSxJQUFJLENBQUNwRSxJQUFJLENBQUNrRSxZQUFZLEVBQUU7WUFDbEMsSUFBSSxJQUFJLENBQUNsRSxJQUFJLENBQUNrRSxZQUFZLENBQUNHLGNBQWMsQ0FBQ0QsQ0FBQyxDQUFDLEVBQUU7Y0FDMUN6RSxHQUFHLENBQUMyRSxnQkFBZ0IsQ0FBQ0YsQ0FBQyxFQUFFLElBQUksQ0FBQ3BFLElBQUksQ0FBQ2tFLFlBQVksQ0FBQ0UsQ0FBQyxDQUFDLENBQUM7WUFDdEQ7VUFDSjtRQUNKO01BQ0osQ0FBQyxDQUNELE9BQU9HLENBQUMsRUFBRSxDQUFFO01BQ1osSUFBSSxNQUFNLEtBQUssSUFBSSxDQUFDaEIsTUFBTSxFQUFFO1FBQ3hCLElBQUk7VUFDQTVELEdBQUcsQ0FBQzJFLGdCQUFnQixDQUFDLGNBQWMsRUFBRSwwQkFBMEIsQ0FBQztRQUNwRSxDQUFDLENBQ0QsT0FBT0MsQ0FBQyxFQUFFLENBQUU7TUFDaEI7TUFDQSxJQUFJO1FBQ0E1RSxHQUFHLENBQUMyRSxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDO01BQ3pDLENBQUMsQ0FDRCxPQUFPQyxDQUFDLEVBQUUsQ0FBRTtNQUNaLENBQUNQLEVBQUUsR0FBRyxJQUFJLENBQUNoRSxJQUFJLENBQUNXLFNBQVMsTUFBTSxJQUFJLElBQUlxRCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLEVBQUUsQ0FBQ1EsVUFBVSxDQUFDN0UsR0FBRyxDQUFDO01BQ2xGO01BQ0EsSUFBSSxpQkFBaUIsSUFBSUEsR0FBRyxFQUFFO1FBQzFCQSxHQUFHLENBQUNlLGVBQWUsR0FBRyxJQUFJLENBQUNWLElBQUksQ0FBQ1UsZUFBZTtNQUNuRDtNQUNBLElBQUksSUFBSSxDQUFDVixJQUFJLENBQUN5RSxjQUFjLEVBQUU7UUFDMUI5RSxHQUFHLENBQUMrRSxPQUFPLEdBQUcsSUFBSSxDQUFDMUUsSUFBSSxDQUFDeUUsY0FBYztNQUMxQztNQUNBOUUsR0FBRyxDQUFDZ0Ysa0JBQWtCLEdBQUcsTUFBTTtRQUMzQixJQUFJWCxFQUFFO1FBQ04sSUFBSXJFLEdBQUcsQ0FBQ3NCLFVBQVUsS0FBSyxDQUFDLEVBQUU7VUFDdEIsQ0FBQytDLEVBQUUsR0FBRyxJQUFJLENBQUNoRSxJQUFJLENBQUNXLFNBQVMsTUFBTSxJQUFJLElBQUlxRCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLEVBQUUsQ0FBQ1ksWUFBWSxDQUFDakYsR0FBRyxDQUFDO1FBQ3hGO1FBQ0EsSUFBSSxDQUFDLEtBQUtBLEdBQUcsQ0FBQ3NCLFVBQVUsRUFDcEI7UUFDSixJQUFJLEdBQUcsS0FBS3RCLEdBQUcsQ0FBQ2tGLE1BQU0sSUFBSSxJQUFJLEtBQUtsRixHQUFHLENBQUNrRixNQUFNLEVBQUU7VUFDM0MsSUFBSSxDQUFDQyxNQUFNLENBQUMsQ0FBQztRQUNqQixDQUFDLE1BQ0k7VUFDRDtVQUNBO1VBQ0EsSUFBSSxDQUFDQyxZQUFZLENBQUMsTUFBTTtZQUNwQixJQUFJLENBQUNwQixPQUFPLENBQUMsT0FBT2hFLEdBQUcsQ0FBQ2tGLE1BQU0sS0FBSyxRQUFRLEdBQUdsRixHQUFHLENBQUNrRixNQUFNLEdBQUcsQ0FBQyxDQUFDO1VBQ2pFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDVDtNQUNKLENBQUM7TUFDRGxGLEdBQUcsQ0FBQ3FGLElBQUksQ0FBQyxJQUFJLENBQUN4RCxJQUFJLENBQUM7SUFDdkIsQ0FBQyxDQUNELE9BQU8rQyxDQUFDLEVBQUU7TUFDTjtNQUNBO01BQ0E7TUFDQSxJQUFJLENBQUNRLFlBQVksQ0FBQyxNQUFNO1FBQ3BCLElBQUksQ0FBQ3BCLE9BQU8sQ0FBQ1ksQ0FBQyxDQUFDO01BQ25CLENBQUMsRUFBRSxDQUFDLENBQUM7TUFDTDtJQUNKO0lBQ0EsSUFBSSxPQUFPVSxRQUFRLEtBQUssV0FBVyxFQUFFO01BQ2pDLElBQUksQ0FBQ0MsS0FBSyxHQUFHOUIsT0FBTyxDQUFDK0IsYUFBYSxFQUFFO01BQ3BDL0IsT0FBTyxDQUFDZ0MsUUFBUSxDQUFDLElBQUksQ0FBQ0YsS0FBSyxDQUFDLEdBQUcsSUFBSTtJQUN2QztFQUNKO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUNJdkIsT0FBT0EsQ0FBQzBCLEdBQUcsRUFBRTtJQUNULElBQUksQ0FBQy9ELFlBQVksQ0FBQyxPQUFPLEVBQUUrRCxHQUFHLEVBQUUsSUFBSSxDQUFDMUYsR0FBRyxDQUFDO0lBQ3pDLElBQUksQ0FBQzJGLE9BQU8sQ0FBQyxJQUFJLENBQUM7RUFDdEI7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0VBQ0lBLE9BQU9BLENBQUNDLFNBQVMsRUFBRTtJQUNmLElBQUksV0FBVyxLQUFLLE9BQU8sSUFBSSxDQUFDNUYsR0FBRyxJQUFJLElBQUksS0FBSyxJQUFJLENBQUNBLEdBQUcsRUFBRTtNQUN0RDtJQUNKO0lBQ0EsSUFBSSxDQUFDQSxHQUFHLENBQUNnRixrQkFBa0IsR0FBR2xGLEtBQUs7SUFDbkMsSUFBSThGLFNBQVMsRUFBRTtNQUNYLElBQUk7UUFDQSxJQUFJLENBQUM1RixHQUFHLENBQUM2RixLQUFLLENBQUMsQ0FBQztNQUNwQixDQUFDLENBQ0QsT0FBT2pCLENBQUMsRUFBRSxDQUFFO0lBQ2hCO0lBQ0EsSUFBSSxPQUFPVSxRQUFRLEtBQUssV0FBVyxFQUFFO01BQ2pDLE9BQU83QixPQUFPLENBQUNnQyxRQUFRLENBQUMsSUFBSSxDQUFDRixLQUFLLENBQUM7SUFDdkM7SUFDQSxJQUFJLENBQUN2RixHQUFHLEdBQUcsSUFBSTtFQUNuQjtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7RUFDSW1GLE1BQU1BLENBQUEsRUFBRztJQUNMLE1BQU10RCxJQUFJLEdBQUcsSUFBSSxDQUFDN0IsR0FBRyxDQUFDOEYsWUFBWTtJQUNsQyxJQUFJakUsSUFBSSxLQUFLLElBQUksRUFBRTtNQUNmLElBQUksQ0FBQ0YsWUFBWSxDQUFDLE1BQU0sRUFBRUUsSUFBSSxDQUFDO01BQy9CLElBQUksQ0FBQ0YsWUFBWSxDQUFDLFNBQVMsQ0FBQztNQUM1QixJQUFJLENBQUNnRSxPQUFPLENBQUMsQ0FBQztJQUNsQjtFQUNKO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUNJRSxLQUFLQSxDQUFBLEVBQUc7SUFDSixJQUFJLENBQUNGLE9BQU8sQ0FBQyxDQUFDO0VBQ2xCO0FBQ0o7QUFDQWxDLE9BQU8sQ0FBQytCLGFBQWEsR0FBRyxDQUFDO0FBQ3pCL0IsT0FBTyxDQUFDZ0MsUUFBUSxHQUFHLENBQUMsQ0FBQztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxPQUFPSCxRQUFRLEtBQUssV0FBVyxFQUFFO0VBQ2pDO0VBQ0EsSUFBSSxPQUFPUyxXQUFXLEtBQUssVUFBVSxFQUFFO0lBQ25DO0lBQ0FBLFdBQVcsQ0FBQyxVQUFVLEVBQUVDLGFBQWEsQ0FBQztFQUMxQyxDQUFDLE1BQ0ksSUFBSSxPQUFPQyxnQkFBZ0IsS0FBSyxVQUFVLEVBQUU7SUFDN0MsTUFBTUMsZ0JBQWdCLEdBQUcsMEVBQTBCLEdBQUcsVUFBVSxHQUFHLFFBQVE7SUFDM0VELGdCQUFnQixDQUFDQyxnQkFBZ0IsRUFBRUYsYUFBYSxFQUFFLEtBQUssQ0FBQztFQUM1RDtBQUNKO0FBQ0EsU0FBU0EsYUFBYUEsQ0FBQSxFQUFHO0VBQ3JCLEtBQUssSUFBSXZCLENBQUMsSUFBSWhCLE9BQU8sQ0FBQ2dDLFFBQVEsRUFBRTtJQUM1QixJQUFJaEMsT0FBTyxDQUFDZ0MsUUFBUSxDQUFDZixjQUFjLENBQUNELENBQUMsQ0FBQyxFQUFFO01BQ3BDaEIsT0FBTyxDQUFDZ0MsUUFBUSxDQUFDaEIsQ0FBQyxDQUFDLENBQUNvQixLQUFLLENBQUMsQ0FBQztJQUMvQjtFQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL3RyYW5zcG9ydHMvcG9sbGluZy5qcz82MDMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zcG9ydCB9IGZyb20gXCIuLi90cmFuc3BvcnQuanNcIjtcbmltcG9ydCB7IHllYXN0IH0gZnJvbSBcIi4uL2NvbnRyaWIveWVhc3QuanNcIjtcbmltcG9ydCB7IGVuY29kZVBheWxvYWQsIGRlY29kZVBheWxvYWQgfSBmcm9tIFwiZW5naW5lLmlvLXBhcnNlclwiO1xuaW1wb3J0IHsgY3JlYXRlQ29va2llSmFyLCBYSFIgYXMgWE1MSHR0cFJlcXVlc3QsIH0gZnJvbSBcIi4veG1saHR0cHJlcXVlc3QuanNcIjtcbmltcG9ydCB7IEVtaXR0ZXIgfSBmcm9tIFwiQHNvY2tldC5pby9jb21wb25lbnQtZW1pdHRlclwiO1xuaW1wb3J0IHsgaW5zdGFsbFRpbWVyRnVuY3Rpb25zLCBwaWNrIH0gZnJvbSBcIi4uL3V0aWwuanNcIjtcbmltcG9ydCB7IGdsb2JhbFRoaXNTaGltIGFzIGdsb2JhbFRoaXMgfSBmcm9tIFwiLi4vZ2xvYmFsVGhpcy5qc1wiO1xuZnVuY3Rpb24gZW1wdHkoKSB7IH1cbmNvbnN0IGhhc1hIUjIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCh7XG4gICAgICAgIHhkb21haW46IGZhbHNlLFxuICAgIH0pO1xuICAgIHJldHVybiBudWxsICE9IHhoci5yZXNwb25zZVR5cGU7XG59KSgpO1xuZXhwb3J0IGNsYXNzIFBvbGxpbmcgZXh0ZW5kcyBUcmFuc3BvcnQge1xuICAgIC8qKlxuICAgICAqIFhIUiBQb2xsaW5nIGNvbnN0cnVjdG9yLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdHNcbiAgICAgKiBAcGFja2FnZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICAgICAgc3VwZXIob3B0cyk7XG4gICAgICAgIHRoaXMucG9sbGluZyA9IGZhbHNlO1xuICAgICAgICBpZiAodHlwZW9mIGxvY2F0aW9uICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBjb25zdCBpc1NTTCA9IFwiaHR0cHM6XCIgPT09IGxvY2F0aW9uLnByb3RvY29sO1xuICAgICAgICAgICAgbGV0IHBvcnQgPSBsb2NhdGlvbi5wb3J0O1xuICAgICAgICAgICAgLy8gc29tZSB1c2VyIGFnZW50cyBoYXZlIGVtcHR5IGBsb2NhdGlvbi5wb3J0YFxuICAgICAgICAgICAgaWYgKCFwb3J0KSB7XG4gICAgICAgICAgICAgICAgcG9ydCA9IGlzU1NMID8gXCI0NDNcIiA6IFwiODBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMueGQgPVxuICAgICAgICAgICAgICAgICh0eXBlb2YgbG9jYXRpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5ob3N0bmFtZSAhPT0gbG9jYXRpb24uaG9zdG5hbWUpIHx8XG4gICAgICAgICAgICAgICAgICAgIHBvcnQgIT09IG9wdHMucG9ydDtcbiAgICAgICAgfVxuICAgICAgICAvKipcbiAgICAgICAgICogWEhSIHN1cHBvcnRzIGJpbmFyeVxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3QgZm9yY2VCYXNlNjQgPSBvcHRzICYmIG9wdHMuZm9yY2VCYXNlNjQ7XG4gICAgICAgIHRoaXMuc3VwcG9ydHNCaW5hcnkgPSBoYXNYSFIyICYmICFmb3JjZUJhc2U2NDtcbiAgICAgICAgaWYgKHRoaXMub3B0cy53aXRoQ3JlZGVudGlhbHMpIHtcbiAgICAgICAgICAgIHRoaXMuY29va2llSmFyID0gY3JlYXRlQ29va2llSmFyKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiBcInBvbGxpbmdcIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3BlbnMgdGhlIHNvY2tldCAodHJpZ2dlcnMgcG9sbGluZykuIFdlIHdyaXRlIGEgUElORyBtZXNzYWdlIHRvIGRldGVybWluZVxuICAgICAqIHdoZW4gdGhlIHRyYW5zcG9ydCBpcyBvcGVuLlxuICAgICAqXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIGRvT3BlbigpIHtcbiAgICAgICAgdGhpcy5wb2xsKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhdXNlcyBwb2xsaW5nLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb25QYXVzZSAtIGNhbGxiYWNrIHVwb24gYnVmZmVycyBhcmUgZmx1c2hlZCBhbmQgdHJhbnNwb3J0IGlzIHBhdXNlZFxuICAgICAqIEBwYWNrYWdlXG4gICAgICovXG4gICAgcGF1c2Uob25QYXVzZSkge1xuICAgICAgICB0aGlzLnJlYWR5U3RhdGUgPSBcInBhdXNpbmdcIjtcbiAgICAgICAgY29uc3QgcGF1c2UgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlYWR5U3RhdGUgPSBcInBhdXNlZFwiO1xuICAgICAgICAgICAgb25QYXVzZSgpO1xuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5wb2xsaW5nIHx8ICF0aGlzLndyaXRhYmxlKSB7XG4gICAgICAgICAgICBsZXQgdG90YWwgPSAwO1xuICAgICAgICAgICAgaWYgKHRoaXMucG9sbGluZykge1xuICAgICAgICAgICAgICAgIHRvdGFsKys7XG4gICAgICAgICAgICAgICAgdGhpcy5vbmNlKFwicG9sbENvbXBsZXRlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgLS10b3RhbCB8fCBwYXVzZSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCF0aGlzLndyaXRhYmxlKSB7XG4gICAgICAgICAgICAgICAgdG90YWwrKztcbiAgICAgICAgICAgICAgICB0aGlzLm9uY2UoXCJkcmFpblwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC0tdG90YWwgfHwgcGF1c2UoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBhdXNlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RhcnRzIHBvbGxpbmcgY3ljbGUuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHBvbGwoKSB7XG4gICAgICAgIHRoaXMucG9sbGluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuZG9Qb2xsKCk7XG4gICAgICAgIHRoaXMuZW1pdFJlc2VydmVkKFwicG9sbFwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcmxvYWRzIG9uRGF0YSB0byBkZXRlY3QgcGF5bG9hZHMuXG4gICAgICpcbiAgICAgKiBAcHJvdGVjdGVkXG4gICAgICovXG4gICAgb25EYXRhKGRhdGEpIHtcbiAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAocGFja2V0KSA9PiB7XG4gICAgICAgICAgICAvLyBpZiBpdHMgdGhlIGZpcnN0IG1lc3NhZ2Ugd2UgY29uc2lkZXIgdGhlIHRyYW5zcG9ydCBvcGVuXG4gICAgICAgICAgICBpZiAoXCJvcGVuaW5nXCIgPT09IHRoaXMucmVhZHlTdGF0ZSAmJiBwYWNrZXQudHlwZSA9PT0gXCJvcGVuXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9uT3BlbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaWYgaXRzIGEgY2xvc2UgcGFja2V0LCB3ZSBjbG9zZSB0aGUgb25nb2luZyByZXF1ZXN0c1xuICAgICAgICAgICAgaWYgKFwiY2xvc2VcIiA9PT0gcGFja2V0LnR5cGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9uQ2xvc2UoeyBkZXNjcmlwdGlvbjogXCJ0cmFuc3BvcnQgY2xvc2VkIGJ5IHRoZSBzZXJ2ZXJcIiB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBvdGhlcndpc2UgYnlwYXNzIG9uRGF0YSBhbmQgaGFuZGxlIHRoZSBtZXNzYWdlXG4gICAgICAgICAgICB0aGlzLm9uUGFja2V0KHBhY2tldCk7XG4gICAgICAgIH07XG4gICAgICAgIC8vIGRlY29kZSBwYXlsb2FkXG4gICAgICAgIGRlY29kZVBheWxvYWQoZGF0YSwgdGhpcy5zb2NrZXQuYmluYXJ5VHlwZSkuZm9yRWFjaChjYWxsYmFjayk7XG4gICAgICAgIC8vIGlmIGFuIGV2ZW50IGRpZCBub3QgdHJpZ2dlciBjbG9zaW5nXG4gICAgICAgIGlmIChcImNsb3NlZFwiICE9PSB0aGlzLnJlYWR5U3RhdGUpIHtcbiAgICAgICAgICAgIC8vIGlmIHdlIGdvdCBkYXRhIHdlJ3JlIG5vdCBwb2xsaW5nXG4gICAgICAgICAgICB0aGlzLnBvbGxpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuZW1pdFJlc2VydmVkKFwicG9sbENvbXBsZXRlXCIpO1xuICAgICAgICAgICAgaWYgKFwib3BlblwiID09PSB0aGlzLnJlYWR5U3RhdGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvbGwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZvciBwb2xsaW5nLCBzZW5kIGEgY2xvc2UgcGFja2V0LlxuICAgICAqXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIGRvQ2xvc2UoKSB7XG4gICAgICAgIGNvbnN0IGNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy53cml0ZShbeyB0eXBlOiBcImNsb3NlXCIgfV0pO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoXCJvcGVuXCIgPT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgICAgICAgICAgY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGluIGNhc2Ugd2UncmUgdHJ5aW5nIHRvIGNsb3NlIHdoaWxlXG4gICAgICAgICAgICAvLyBoYW5kc2hha2luZyBpcyBpbiBwcm9ncmVzcyAoR0gtMTY0KVxuICAgICAgICAgICAgdGhpcy5vbmNlKFwib3BlblwiLCBjbG9zZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGVzIGEgcGFja2V0cyBwYXlsb2FkLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtBcnJheX0gcGFja2V0cyAtIGRhdGEgcGFja2V0c1xuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKi9cbiAgICB3cml0ZShwYWNrZXRzKSB7XG4gICAgICAgIHRoaXMud3JpdGFibGUgPSBmYWxzZTtcbiAgICAgICAgZW5jb2RlUGF5bG9hZChwYWNrZXRzLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5kb1dyaXRlKGRhdGEsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXRSZXNlcnZlZChcImRyYWluXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgdXJpIGZvciBjb25uZWN0aW9uLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICB1cmkoKSB7XG4gICAgICAgIGNvbnN0IHNjaGVtYSA9IHRoaXMub3B0cy5zZWN1cmUgPyBcImh0dHBzXCIgOiBcImh0dHBcIjtcbiAgICAgICAgY29uc3QgcXVlcnkgPSB0aGlzLnF1ZXJ5IHx8IHt9O1xuICAgICAgICAvLyBjYWNoZSBidXN0aW5nIGlzIGZvcmNlZFxuICAgICAgICBpZiAoZmFsc2UgIT09IHRoaXMub3B0cy50aW1lc3RhbXBSZXF1ZXN0cykge1xuICAgICAgICAgICAgcXVlcnlbdGhpcy5vcHRzLnRpbWVzdGFtcFBhcmFtXSA9IHllYXN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnN1cHBvcnRzQmluYXJ5ICYmICFxdWVyeS5zaWQpIHtcbiAgICAgICAgICAgIHF1ZXJ5LmI2NCA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlVXJpKHNjaGVtYSwgcXVlcnkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgcmVxdWVzdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBtZXRob2RcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHJlcXVlc3Qob3B0cyA9IHt9KSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24ob3B0cywgeyB4ZDogdGhpcy54ZCwgY29va2llSmFyOiB0aGlzLmNvb2tpZUphciB9LCB0aGlzLm9wdHMpO1xuICAgICAgICByZXR1cm4gbmV3IFJlcXVlc3QodGhpcy51cmkoKSwgb3B0cyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmRzIGRhdGEuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZGF0YSB0byBzZW5kLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxlZCB1cG9uIGZsdXNoLlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgZG9Xcml0ZShkYXRhLCBmbikge1xuICAgICAgICBjb25zdCByZXEgPSB0aGlzLnJlcXVlc3Qoe1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIH0pO1xuICAgICAgICByZXEub24oXCJzdWNjZXNzXCIsIGZuKTtcbiAgICAgICAgcmVxLm9uKFwiZXJyb3JcIiwgKHhoclN0YXR1cywgY29udGV4dCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5vbkVycm9yKFwieGhyIHBvc3QgZXJyb3JcIiwgeGhyU3RhdHVzLCBjb250ZXh0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXJ0cyBhIHBvbGwgY3ljbGUuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGRvUG9sbCgpIHtcbiAgICAgICAgY29uc3QgcmVxID0gdGhpcy5yZXF1ZXN0KCk7XG4gICAgICAgIHJlcS5vbihcImRhdGFcIiwgdGhpcy5vbkRhdGEuYmluZCh0aGlzKSk7XG4gICAgICAgIHJlcS5vbihcImVycm9yXCIsICh4aHJTdGF0dXMsIGNvbnRleHQpID0+IHtcbiAgICAgICAgICAgIHRoaXMub25FcnJvcihcInhociBwb2xsIGVycm9yXCIsIHhoclN0YXR1cywgY29udGV4dCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnBvbGxYaHIgPSByZXE7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJlcXVlc3QgZXh0ZW5kcyBFbWl0dGVyIHtcbiAgICAvKipcbiAgICAgKiBSZXF1ZXN0IGNvbnN0cnVjdG9yXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgICAqIEBwYWNrYWdlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodXJpLCBvcHRzKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGluc3RhbGxUaW1lckZ1bmN0aW9ucyh0aGlzLCBvcHRzKTtcbiAgICAgICAgdGhpcy5vcHRzID0gb3B0cztcbiAgICAgICAgdGhpcy5tZXRob2QgPSBvcHRzLm1ldGhvZCB8fCBcIkdFVFwiO1xuICAgICAgICB0aGlzLnVyaSA9IHVyaTtcbiAgICAgICAgdGhpcy5kYXRhID0gdW5kZWZpbmVkICE9PSBvcHRzLmRhdGEgPyBvcHRzLmRhdGEgOiBudWxsO1xuICAgICAgICB0aGlzLmNyZWF0ZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIHRoZSBYSFIgb2JqZWN0IGFuZCBzZW5kcyB0aGUgcmVxdWVzdC5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgY3JlYXRlKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IG9wdHMgPSBwaWNrKHRoaXMub3B0cywgXCJhZ2VudFwiLCBcInBmeFwiLCBcImtleVwiLCBcInBhc3NwaHJhc2VcIiwgXCJjZXJ0XCIsIFwiY2FcIiwgXCJjaXBoZXJzXCIsIFwicmVqZWN0VW5hdXRob3JpemVkXCIsIFwiYXV0b1VucmVmXCIpO1xuICAgICAgICBvcHRzLnhkb21haW4gPSAhIXRoaXMub3B0cy54ZDtcbiAgICAgICAgY29uc3QgeGhyID0gKHRoaXMueGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KG9wdHMpKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHhoci5vcGVuKHRoaXMubWV0aG9kLCB0aGlzLnVyaSwgdHJ1ZSk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdHMuZXh0cmFIZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIHhoci5zZXREaXNhYmxlSGVhZGVyQ2hlY2sgJiYgeGhyLnNldERpc2FibGVIZWFkZXJDaGVjayh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLm9wdHMuZXh0cmFIZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRzLmV4dHJhSGVhZGVycy5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKGksIHRoaXMub3B0cy5leHRyYUhlYWRlcnNbaV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICAgICAgaWYgKFwiUE9TVFwiID09PSB0aGlzLm1ldGhvZCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC10eXBlXCIsIFwidGV4dC9wbGFpbjtjaGFyc2V0PVVURi04XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsIFwiKi8qXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICAgICAgKF9hID0gdGhpcy5vcHRzLmNvb2tpZUphcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFkZENvb2tpZXMoeGhyKTtcbiAgICAgICAgICAgIC8vIGllNiBjaGVja1xuICAgICAgICAgICAgaWYgKFwid2l0aENyZWRlbnRpYWxzXCIgaW4geGhyKSB7XG4gICAgICAgICAgICAgICAgeGhyLndpdGhDcmVkZW50aWFscyA9IHRoaXMub3B0cy53aXRoQ3JlZGVudGlhbHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRzLnJlcXVlc3RUaW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgeGhyLnRpbWVvdXQgPSB0aGlzLm9wdHMucmVxdWVzdFRpbWVvdXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9hID0gdGhpcy5vcHRzLmNvb2tpZUphcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnBhcnNlQ29va2llcyh4aHIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoNCAhPT0geGhyLnJlYWR5U3RhdGUpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAoMjAwID09PSB4aHIuc3RhdHVzIHx8IDEyMjMgPT09IHhoci5zdGF0dXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkxvYWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSB0aGUgYGVycm9yYCBldmVudCBoYW5kbGVyIHRoYXQncyB1c2VyLXNldFxuICAgICAgICAgICAgICAgICAgICAvLyBkb2VzIG5vdCB0aHJvdyBpbiB0aGUgc2FtZSB0aWNrIGFuZCBnZXRzIGNhdWdodCBoZXJlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0VGltZW91dEZuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25FcnJvcih0eXBlb2YgeGhyLnN0YXR1cyA9PT0gXCJudW1iZXJcIiA/IHhoci5zdGF0dXMgOiAwKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHhoci5zZW5kKHRoaXMuZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIC8vIE5lZWQgdG8gZGVmZXIgc2luY2UgLmNyZWF0ZSgpIGlzIGNhbGxlZCBkaXJlY3RseSBmcm9tIHRoZSBjb25zdHJ1Y3RvclxuICAgICAgICAgICAgLy8gYW5kIHRodXMgdGhlICdlcnJvcicgZXZlbnQgY2FuIG9ubHkgYmUgb25seSBib3VuZCAqYWZ0ZXIqIHRoaXMgZXhjZXB0aW9uXG4gICAgICAgICAgICAvLyBvY2N1cnMuICBUaGVyZWZvcmUsIGFsc28sIHdlIGNhbm5vdCB0aHJvdyBoZXJlIGF0IGFsbC5cbiAgICAgICAgICAgIHRoaXMuc2V0VGltZW91dEZuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLm9uRXJyb3IoZSk7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aGlzLmluZGV4ID0gUmVxdWVzdC5yZXF1ZXN0c0NvdW50Kys7XG4gICAgICAgICAgICBSZXF1ZXN0LnJlcXVlc3RzW3RoaXMuaW5kZXhdID0gdGhpcztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgdXBvbiBlcnJvci5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgb25FcnJvcihlcnIpIHtcbiAgICAgICAgdGhpcy5lbWl0UmVzZXJ2ZWQoXCJlcnJvclwiLCBlcnIsIHRoaXMueGhyKTtcbiAgICAgICAgdGhpcy5jbGVhbnVwKHRydWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbGVhbnMgdXAgaG91c2UuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGNsZWFudXAoZnJvbUVycm9yKSB7XG4gICAgICAgIGlmIChcInVuZGVmaW5lZFwiID09PSB0eXBlb2YgdGhpcy54aHIgfHwgbnVsbCA9PT0gdGhpcy54aHIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBlbXB0eTtcbiAgICAgICAgaWYgKGZyb21FcnJvcikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLnhoci5hYm9ydCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBSZXF1ZXN0LnJlcXVlc3RzW3RoaXMuaW5kZXhdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMueGhyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbGVkIHVwb24gbG9hZC5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgb25Mb2FkKCkge1xuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy54aHIucmVzcG9uc2VUZXh0O1xuICAgICAgICBpZiAoZGF0YSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0UmVzZXJ2ZWQoXCJkYXRhXCIsIGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5lbWl0UmVzZXJ2ZWQoXCJzdWNjZXNzXCIpO1xuICAgICAgICAgICAgdGhpcy5jbGVhbnVwKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQWJvcnRzIHRoZSByZXF1ZXN0LlxuICAgICAqXG4gICAgICogQHBhY2thZ2VcbiAgICAgKi9cbiAgICBhYm9ydCgpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwKCk7XG4gICAgfVxufVxuUmVxdWVzdC5yZXF1ZXN0c0NvdW50ID0gMDtcblJlcXVlc3QucmVxdWVzdHMgPSB7fTtcbi8qKlxuICogQWJvcnRzIHBlbmRpbmcgcmVxdWVzdHMgd2hlbiB1bmxvYWRpbmcgdGhlIHdpbmRvdy4gVGhpcyBpcyBuZWVkZWQgdG8gcHJldmVudFxuICogbWVtb3J5IGxlYWtzIChlLmcuIHdoZW4gdXNpbmcgSUUpIGFuZCB0byBlbnN1cmUgdGhhdCBubyBzcHVyaW91cyBlcnJvciBpc1xuICogZW1pdHRlZC5cbiAqL1xuaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAodHlwZW9mIGF0dGFjaEV2ZW50ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBhdHRhY2hFdmVudChcIm9udW5sb2FkXCIsIHVubG9hZEhhbmRsZXIpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgYWRkRXZlbnRMaXN0ZW5lciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNvbnN0IHRlcm1pbmF0aW9uRXZlbnQgPSBcIm9ucGFnZWhpZGVcIiBpbiBnbG9iYWxUaGlzID8gXCJwYWdlaGlkZVwiIDogXCJ1bmxvYWRcIjtcbiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcih0ZXJtaW5hdGlvbkV2ZW50LCB1bmxvYWRIYW5kbGVyLCBmYWxzZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gdW5sb2FkSGFuZGxlcigpIHtcbiAgICBmb3IgKGxldCBpIGluIFJlcXVlc3QucmVxdWVzdHMpIHtcbiAgICAgICAgaWYgKFJlcXVlc3QucmVxdWVzdHMuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgIFJlcXVlc3QucmVxdWVzdHNbaV0uYWJvcnQoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJUcmFuc3BvcnQiLCJ5ZWFzdCIsImVuY29kZVBheWxvYWQiLCJkZWNvZGVQYXlsb2FkIiwiY3JlYXRlQ29va2llSmFyIiwiWEhSIiwiWE1MSHR0cFJlcXVlc3QiLCJFbWl0dGVyIiwiaW5zdGFsbFRpbWVyRnVuY3Rpb25zIiwicGljayIsImdsb2JhbFRoaXNTaGltIiwiZ2xvYmFsVGhpcyIsImVtcHR5IiwiaGFzWEhSMiIsInhociIsInhkb21haW4iLCJyZXNwb25zZVR5cGUiLCJQb2xsaW5nIiwiY29uc3RydWN0b3IiLCJvcHRzIiwicG9sbGluZyIsImxvY2F0aW9uIiwiaXNTU0wiLCJwcm90b2NvbCIsInBvcnQiLCJ4ZCIsImhvc3RuYW1lIiwiZm9yY2VCYXNlNjQiLCJzdXBwb3J0c0JpbmFyeSIsIndpdGhDcmVkZW50aWFscyIsImNvb2tpZUphciIsIm5hbWUiLCJkb09wZW4iLCJwb2xsIiwicGF1c2UiLCJvblBhdXNlIiwicmVhZHlTdGF0ZSIsIndyaXRhYmxlIiwidG90YWwiLCJvbmNlIiwiZG9Qb2xsIiwiZW1pdFJlc2VydmVkIiwib25EYXRhIiwiZGF0YSIsImNhbGxiYWNrIiwicGFja2V0IiwidHlwZSIsIm9uT3BlbiIsIm9uQ2xvc2UiLCJkZXNjcmlwdGlvbiIsIm9uUGFja2V0Iiwic29ja2V0IiwiYmluYXJ5VHlwZSIsImZvckVhY2giLCJkb0Nsb3NlIiwiY2xvc2UiLCJ3cml0ZSIsInBhY2tldHMiLCJkb1dyaXRlIiwidXJpIiwic2NoZW1hIiwic2VjdXJlIiwicXVlcnkiLCJ0aW1lc3RhbXBSZXF1ZXN0cyIsInRpbWVzdGFtcFBhcmFtIiwic2lkIiwiYjY0IiwiY3JlYXRlVXJpIiwicmVxdWVzdCIsIk9iamVjdCIsImFzc2lnbiIsIlJlcXVlc3QiLCJmbiIsInJlcSIsIm1ldGhvZCIsIm9uIiwieGhyU3RhdHVzIiwiY29udGV4dCIsIm9uRXJyb3IiLCJiaW5kIiwicG9sbFhociIsInVuZGVmaW5lZCIsImNyZWF0ZSIsIl9hIiwib3BlbiIsImV4dHJhSGVhZGVycyIsInNldERpc2FibGVIZWFkZXJDaGVjayIsImkiLCJoYXNPd25Qcm9wZXJ0eSIsInNldFJlcXVlc3RIZWFkZXIiLCJlIiwiYWRkQ29va2llcyIsInJlcXVlc3RUaW1lb3V0IiwidGltZW91dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInBhcnNlQ29va2llcyIsInN0YXR1cyIsIm9uTG9hZCIsInNldFRpbWVvdXRGbiIsInNlbmQiLCJkb2N1bWVudCIsImluZGV4IiwicmVxdWVzdHNDb3VudCIsInJlcXVlc3RzIiwiZXJyIiwiY2xlYW51cCIsImZyb21FcnJvciIsImFib3J0IiwicmVzcG9uc2VUZXh0IiwiYXR0YWNoRXZlbnQiLCJ1bmxvYWRIYW5kbGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRlcm1pbmF0aW9uRXZlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/polling.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocket: function() { return /* binding */ WebSocket; },\n/* harmony export */   defaultBinaryType: function() { return /* binding */ defaultBinaryType; },\n/* harmony export */   nextTick: function() { return /* binding */ nextTick; },\n/* harmony export */   usingBrowserWebSocket: function() { return /* binding */ usingBrowserWebSocket; }\n/* harmony export */ });\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\nconst nextTick = (() => {\n  const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n  }\n})();\nconst WebSocket = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.WebSocket || _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.MozWebSocket;\nconst usingBrowserWebSocket = true;\nconst defaultBinaryType = \"arraybuffer\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy93ZWJzb2NrZXQtY29uc3RydWN0b3IuYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRTtBQUN6RCxNQUFNRSxRQUFRLEdBQUcsQ0FBQyxNQUFNO0VBQzNCLE1BQU1DLGtCQUFrQixHQUFHLE9BQU9DLE9BQU8sS0FBSyxVQUFVLElBQUksT0FBT0EsT0FBTyxDQUFDQyxPQUFPLEtBQUssVUFBVTtFQUNqRyxJQUFJRixrQkFBa0IsRUFBRTtJQUNwQixPQUFRRyxFQUFFLElBQUtGLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQ0UsSUFBSSxDQUFDRCxFQUFFLENBQUM7RUFDN0MsQ0FBQyxNQUNJO0lBQ0QsT0FBTyxDQUFDQSxFQUFFLEVBQUVFLFlBQVksS0FBS0EsWUFBWSxDQUFDRixFQUFFLEVBQUUsQ0FBQyxDQUFDO0VBQ3BEO0FBQ0osQ0FBQyxFQUFFLENBQUM7QUFDRyxNQUFNRyxTQUFTLEdBQUdSLDBEQUFVLENBQUNRLFNBQVMsSUFBSVIsMERBQVUsQ0FBQ1MsWUFBWTtBQUNqRSxNQUFNQyxxQkFBcUIsR0FBRyxJQUFJO0FBQ2xDLE1BQU1DLGlCQUFpQixHQUFHLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL3RyYW5zcG9ydHMvd2Vic29ja2V0LWNvbnN0cnVjdG9yLmJyb3dzZXIuanM/ZjE3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnbG9iYWxUaGlzU2hpbSBhcyBnbG9iYWxUaGlzIH0gZnJvbSBcIi4uL2dsb2JhbFRoaXMuanNcIjtcbmV4cG9ydCBjb25zdCBuZXh0VGljayA9ICgoKSA9PiB7XG4gICAgY29uc3QgaXNQcm9taXNlQXZhaWxhYmxlID0gdHlwZW9mIFByb21pc2UgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgUHJvbWlzZS5yZXNvbHZlID09PSBcImZ1bmN0aW9uXCI7XG4gICAgaWYgKGlzUHJvbWlzZUF2YWlsYWJsZSkge1xuICAgICAgICByZXR1cm4gKGNiKSA9PiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGNiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAoY2IsIHNldFRpbWVvdXRGbikgPT4gc2V0VGltZW91dEZuKGNiLCAwKTtcbiAgICB9XG59KSgpO1xuZXhwb3J0IGNvbnN0IFdlYlNvY2tldCA9IGdsb2JhbFRoaXMuV2ViU29ja2V0IHx8IGdsb2JhbFRoaXMuTW96V2ViU29ja2V0O1xuZXhwb3J0IGNvbnN0IHVzaW5nQnJvd3NlcldlYlNvY2tldCA9IHRydWU7XG5leHBvcnQgY29uc3QgZGVmYXVsdEJpbmFyeVR5cGUgPSBcImFycmF5YnVmZmVyXCI7XG4iXSwibmFtZXMiOlsiZ2xvYmFsVGhpc1NoaW0iLCJnbG9iYWxUaGlzIiwibmV4dFRpY2siLCJpc1Byb21pc2VBdmFpbGFibGUiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNiIiwidGhlbiIsInNldFRpbWVvdXRGbiIsIldlYlNvY2tldCIsIk1veldlYlNvY2tldCIsInVzaW5nQnJvd3NlcldlYlNvY2tldCIsImRlZmF1bHRCaW5hcnlUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WS: function() { return /* binding */ WS; }\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contrib/yeast.js */ \"./node_modules/engine.io-client/build/esm/contrib/yeast.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\nclass WS extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @param {Object} opts - connection options\n   * @protected\n   */\n  constructor(opts) {\n    super(opts);\n    this.supportsBinary = !opts.forceBase64;\n  }\n  get name() {\n    return \"websocket\";\n  }\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative ? {} : (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n    try {\n      this.ws = _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.usingBrowserWebSocket && !isReactNative ? protocols ? new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket(uri, protocols) : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket(uri) : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emitReserved(\"error\", err);\n    }\n    this.ws.binaryType = this.socket.binaryType || _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.defaultBinaryType;\n    this.addEventListeners();\n  }\n  /**\n   * Adds event listeners to the socket\n   *\n   * @private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = closeEvent => this.onClose({\n      description: \"websocket connection closed\",\n      context: closeEvent\n    });\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n  write(packets) {\n    this.writable = false;\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n      (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_4__.encodePacket)(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n          if (this.opts.perMessageDeflate) {\n            const len =\n            // @ts-ignore\n            \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {}\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          (0,_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.nextTick)(() => {\n            this.writable = true;\n            this.emitReserved(\"drain\");\n          }, this.setTimeoutFn);\n        }\n      });\n    }\n  }\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n  /**\n   * Generates uri for connection.\n   *\n   * @private\n   */\n  uri() {\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    const query = this.query || {};\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = (0,_contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__.yeast)();\n    }\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n    return this.createUri(schema, query);\n  }\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @private\n   */\n  check() {\n    return !!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/websocket.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/webtransport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/webtransport.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WT: function() { return /* binding */ WT; }\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\n\n\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n  // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n  // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n  return packet.type === \"message\" && typeof packet.data !== \"string\" && encoded[0] >= 48 && encoded[0] <= 54;\n}\nclass WT extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n  get name() {\n    return \"webtransport\";\n  }\n  doOpen() {\n    // @ts-ignore\n    if (typeof WebTransport !== \"function\") {\n      return;\n    }\n    // @ts-ignore\n    this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n    this.transport.closed.then(() => {\n      this.onClose();\n    }).catch(err => {\n      this.onError(\"webtransport error\", err);\n    });\n    // note: we could have used async/await, but that would require some additional polyfills\n    this.transport.ready.then(() => {\n      this.transport.createBidirectionalStream().then(stream => {\n        const reader = stream.readable.getReader();\n        this.writer = stream.writable.getWriter();\n        let binaryFlag;\n        const read = () => {\n          reader.read().then(({\n            done,\n            value\n          }) => {\n            if (done) {\n              return;\n            }\n            if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n              binaryFlag = true;\n            } else {\n              // TODO expose binarytype\n              this.onPacket((0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.decodePacketFromBinary)(value, binaryFlag, \"arraybuffer\"));\n              binaryFlag = false;\n            }\n            read();\n          }).catch(err => {});\n        };\n        read();\n        const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n        this.writer.write(new TextEncoder().encode(handshake)).then(() => this.onOpen());\n      });\n    });\n  }\n  write(packets) {\n    this.writable = false;\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n      (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.encodePacketToBinary)(packet, data => {\n        if (shouldIncludeBinaryHeader(packet, data)) {\n          this.writer.write(Uint8Array.of(54));\n        }\n        this.writer.write(data).then(() => {\n          if (lastPacket) {\n            (0,_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {\n              this.writable = true;\n              this.emitReserved(\"drain\");\n            }, this.setTimeoutFn);\n          }\n        });\n      });\n    }\n  }\n  doClose() {\n    var _a;\n    (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/webtransport.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XHR: function() { return /* binding */ XHR; },\n/* harmony export */   createCookieJar: function() { return /* binding */ createCookieJar; }\n/* harmony export */ });\n/* harmony import */ var _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../contrib/has-cors.js */ \"./node_modules/engine.io-client/build/esm/contrib/has-cors.js\");\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n// browser shim for xmlhttprequest module\n\n\nfunction XHR(opts) {\n  const xdomain = opts.xdomain;\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__.hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n  if (!xdomain) {\n    try {\n      return new _globalThis_js__WEBPACK_IMPORTED_MODULE_1__.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n    } catch (e) {}\n  }\n}\nfunction createCookieJar() {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy94bWxodHRwcmVxdWVzdC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNlO0FBQ3pELFNBQVNHLEdBQUdBLENBQUNDLElBQUksRUFBRTtFQUN0QixNQUFNQyxPQUFPLEdBQUdELElBQUksQ0FBQ0MsT0FBTztFQUM1QjtFQUNBLElBQUk7SUFDQSxJQUFJLFdBQVcsS0FBSyxPQUFPQyxjQUFjLEtBQUssQ0FBQ0QsT0FBTyxJQUFJTCx5REFBTyxDQUFDLEVBQUU7TUFDaEUsT0FBTyxJQUFJTSxjQUFjLENBQUMsQ0FBQztJQUMvQjtFQUNKLENBQUMsQ0FDRCxPQUFPQyxDQUFDLEVBQUUsQ0FBRTtFQUNaLElBQUksQ0FBQ0YsT0FBTyxFQUFFO0lBQ1YsSUFBSTtNQUNBLE9BQU8sSUFBSUgsMERBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDTSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUNDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDO0lBQ3JGLENBQUMsQ0FDRCxPQUFPRixDQUFDLEVBQUUsQ0FBRTtFQUNoQjtBQUNKO0FBQ08sU0FBU0csZUFBZUEsQ0FBQSxFQUFHLENBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL3RyYW5zcG9ydHMveG1saHR0cHJlcXVlc3QuYnJvd3Nlci5qcz9hNDUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGJyb3dzZXIgc2hpbSBmb3IgeG1saHR0cHJlcXVlc3QgbW9kdWxlXG5pbXBvcnQgeyBoYXNDT1JTIH0gZnJvbSBcIi4uL2NvbnRyaWIvaGFzLWNvcnMuanNcIjtcbmltcG9ydCB7IGdsb2JhbFRoaXNTaGltIGFzIGdsb2JhbFRoaXMgfSBmcm9tIFwiLi4vZ2xvYmFsVGhpcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIFhIUihvcHRzKSB7XG4gICAgY29uc3QgeGRvbWFpbiA9IG9wdHMueGRvbWFpbjtcbiAgICAvLyBYTUxIdHRwUmVxdWVzdCBjYW4gYmUgZGlzYWJsZWQgb24gSUVcbiAgICB0cnkge1xuICAgICAgICBpZiAoXCJ1bmRlZmluZWRcIiAhPT0gdHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICYmICgheGRvbWFpbiB8fCBoYXNDT1JTKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlKSB7IH1cbiAgICBpZiAoIXhkb21haW4pIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgZ2xvYmFsVGhpc1tbXCJBY3RpdmVcIl0uY29uY2F0KFwiT2JqZWN0XCIpLmpvaW4oXCJYXCIpXShcIk1pY3Jvc29mdC5YTUxIVFRQXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29va2llSmFyKCkgeyB9XG4iXSwibmFtZXMiOlsiaGFzQ09SUyIsImdsb2JhbFRoaXNTaGltIiwiZ2xvYmFsVGhpcyIsIlhIUiIsIm9wdHMiLCJ4ZG9tYWluIiwiWE1MSHR0cFJlcXVlc3QiLCJlIiwiY29uY2F0Iiwiam9pbiIsImNyZWF0ZUNvb2tpZUphciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/util.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: function() { return /* binding */ byteLength; },\n/* harmony export */   installTimerFunctions: function() { return /* binding */ installTimerFunctions; },\n/* harmony export */   pick: function() { return /* binding */ pick; }\n/* harmony export */ });\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\nfunction pick(obj, ...attr) {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.clearTimeout;\nfunction installTimerFunctions(obj, opts) {\n  if (opts.useNativeTimers) {\n    obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n    obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n  } else {\n    obj.setTimeoutFn = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.setTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n    obj.clearTimeoutFn = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.clearTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n  }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nfunction byteLength(obj) {\n  if (typeof obj === \"string\") {\n    return utf8Length(obj);\n  }\n  // arraybuffer or blob\n  return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n  let c = 0,\n    length = 0;\n  for (let i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    } else if (c < 0x800) {\n      length += 2;\n    } else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    } else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdXRpbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStEO0FBQ3hELFNBQVNFLElBQUlBLENBQUNDLEdBQUcsRUFBRSxHQUFHQyxJQUFJLEVBQUU7RUFDL0IsT0FBT0EsSUFBSSxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxDQUFDLEtBQUs7SUFDM0IsSUFBSUosR0FBRyxDQUFDSyxjQUFjLENBQUNELENBQUMsQ0FBQyxFQUFFO01BQ3ZCRCxHQUFHLENBQUNDLENBQUMsQ0FBQyxHQUFHSixHQUFHLENBQUNJLENBQUMsQ0FBQztJQUNuQjtJQUNBLE9BQU9ELEdBQUc7RUFDZCxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDVjtBQUNBO0FBQ0EsTUFBTUcsa0JBQWtCLEdBQUdSLDBEQUFVLENBQUNTLFVBQVU7QUFDaEQsTUFBTUMsb0JBQW9CLEdBQUdWLDBEQUFVLENBQUNXLFlBQVk7QUFDN0MsU0FBU0MscUJBQXFCQSxDQUFDVixHQUFHLEVBQUVXLElBQUksRUFBRTtFQUM3QyxJQUFJQSxJQUFJLENBQUNDLGVBQWUsRUFBRTtJQUN0QlosR0FBRyxDQUFDYSxZQUFZLEdBQUdQLGtCQUFrQixDQUFDUSxJQUFJLENBQUNoQiwwREFBVSxDQUFDO0lBQ3RERSxHQUFHLENBQUNlLGNBQWMsR0FBR1Asb0JBQW9CLENBQUNNLElBQUksQ0FBQ2hCLDBEQUFVLENBQUM7RUFDOUQsQ0FBQyxNQUNJO0lBQ0RFLEdBQUcsQ0FBQ2EsWUFBWSxHQUFHZiwwREFBVSxDQUFDUyxVQUFVLENBQUNPLElBQUksQ0FBQ2hCLDBEQUFVLENBQUM7SUFDekRFLEdBQUcsQ0FBQ2UsY0FBYyxHQUFHakIsMERBQVUsQ0FBQ1csWUFBWSxDQUFDSyxJQUFJLENBQUNoQiwwREFBVSxDQUFDO0VBQ2pFO0FBQ0o7QUFDQTtBQUNBLE1BQU1rQixlQUFlLEdBQUcsSUFBSTtBQUM1QjtBQUNPLFNBQVNDLFVBQVVBLENBQUNqQixHQUFHLEVBQUU7RUFDNUIsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxFQUFFO0lBQ3pCLE9BQU9rQixVQUFVLENBQUNsQixHQUFHLENBQUM7RUFDMUI7RUFDQTtFQUNBLE9BQU9tQixJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDcEIsR0FBRyxDQUFDaUIsVUFBVSxJQUFJakIsR0FBRyxDQUFDcUIsSUFBSSxJQUFJTCxlQUFlLENBQUM7QUFDcEU7QUFDQSxTQUFTRSxVQUFVQSxDQUFDSSxHQUFHLEVBQUU7RUFDckIsSUFBSUMsQ0FBQyxHQUFHLENBQUM7SUFBRUMsTUFBTSxHQUFHLENBQUM7RUFDckIsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQyxDQUFDLEdBQUdKLEdBQUcsQ0FBQ0UsTUFBTSxFQUFFQyxDQUFDLEdBQUdDLENBQUMsRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDeENGLENBQUMsR0FBR0QsR0FBRyxDQUFDSyxVQUFVLENBQUNGLENBQUMsQ0FBQztJQUNyQixJQUFJRixDQUFDLEdBQUcsSUFBSSxFQUFFO01BQ1ZDLE1BQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQyxNQUNJLElBQUlELENBQUMsR0FBRyxLQUFLLEVBQUU7TUFDaEJDLE1BQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQyxNQUNJLElBQUlELENBQUMsR0FBRyxNQUFNLElBQUlBLENBQUMsSUFBSSxNQUFNLEVBQUU7TUFDaENDLE1BQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQyxNQUNJO01BQ0RDLENBQUMsRUFBRTtNQUNIRCxNQUFNLElBQUksQ0FBQztJQUNmO0VBQ0o7RUFDQSxPQUFPQSxNQUFNO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2J1aWxkL2VzbS91dGlsLmpzPzJjZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2xvYmFsVGhpc1NoaW0gYXMgZ2xvYmFsVGhpcyB9IGZyb20gXCIuL2dsb2JhbFRoaXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwaWNrKG9iaiwgLi4uYXR0cikge1xuICAgIHJldHVybiBhdHRyLnJlZHVjZSgoYWNjLCBrKSA9PiB7XG4gICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgICAgIGFjY1trXSA9IG9ialtrXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbn1cbi8vIEtlZXAgYSByZWZlcmVuY2UgdG8gdGhlIHJlYWwgdGltZW91dCBmdW5jdGlvbnMgc28gdGhleSBjYW4gYmUgdXNlZCB3aGVuIG92ZXJyaWRkZW5cbmNvbnN0IE5BVElWRV9TRVRfVElNRU9VVCA9IGdsb2JhbFRoaXMuc2V0VGltZW91dDtcbmNvbnN0IE5BVElWRV9DTEVBUl9USU1FT1VUID0gZ2xvYmFsVGhpcy5jbGVhclRpbWVvdXQ7XG5leHBvcnQgZnVuY3Rpb24gaW5zdGFsbFRpbWVyRnVuY3Rpb25zKG9iaiwgb3B0cykge1xuICAgIGlmIChvcHRzLnVzZU5hdGl2ZVRpbWVycykge1xuICAgICAgICBvYmouc2V0VGltZW91dEZuID0gTkFUSVZFX1NFVF9USU1FT1VULmJpbmQoZ2xvYmFsVGhpcyk7XG4gICAgICAgIG9iai5jbGVhclRpbWVvdXRGbiA9IE5BVElWRV9DTEVBUl9USU1FT1VULmJpbmQoZ2xvYmFsVGhpcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBvYmouc2V0VGltZW91dEZuID0gZ2xvYmFsVGhpcy5zZXRUaW1lb3V0LmJpbmQoZ2xvYmFsVGhpcyk7XG4gICAgICAgIG9iai5jbGVhclRpbWVvdXRGbiA9IGdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0LmJpbmQoZ2xvYmFsVGhpcyk7XG4gICAgfVxufVxuLy8gYmFzZTY0IGVuY29kZWQgYnVmZmVycyBhcmUgYWJvdXQgMzMlIGJpZ2dlciAoaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0KVxuY29uc3QgQkFTRTY0X09WRVJIRUFEID0gMS4zMztcbi8vIHdlIGNvdWxkIGFsc28gaGF2ZSB1c2VkIGBuZXcgQmxvYihbb2JqXSkuc2l6ZWAsIGJ1dCBpdCBpc24ndCBzdXBwb3J0ZWQgaW4gSUU5XG5leHBvcnQgZnVuY3Rpb24gYnl0ZUxlbmd0aChvYmopIHtcbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdXRmOExlbmd0aChvYmopO1xuICAgIH1cbiAgICAvLyBhcnJheWJ1ZmZlciBvciBibG9iXG4gICAgcmV0dXJuIE1hdGguY2VpbCgob2JqLmJ5dGVMZW5ndGggfHwgb2JqLnNpemUpICogQkFTRTY0X09WRVJIRUFEKTtcbn1cbmZ1bmN0aW9uIHV0ZjhMZW5ndGgoc3RyKSB7XG4gICAgbGV0IGMgPSAwLCBsZW5ndGggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gc3RyLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjIDwgMHg4MCkge1xuICAgICAgICAgICAgbGVuZ3RoICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYyA8IDB4ODAwKSB7XG4gICAgICAgICAgICBsZW5ndGggKz0gMjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjIDwgMHhkODAwIHx8IGMgPj0gMHhlMDAwKSB7XG4gICAgICAgICAgICBsZW5ndGggKz0gMztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIGxlbmd0aCArPSA0O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsZW5ndGg7XG59XG4iXSwibmFtZXMiOlsiZ2xvYmFsVGhpc1NoaW0iLCJnbG9iYWxUaGlzIiwicGljayIsIm9iaiIsImF0dHIiLCJyZWR1Y2UiLCJhY2MiLCJrIiwiaGFzT3duUHJvcGVydHkiLCJOQVRJVkVfU0VUX1RJTUVPVVQiLCJzZXRUaW1lb3V0IiwiTkFUSVZFX0NMRUFSX1RJTUVPVVQiLCJjbGVhclRpbWVvdXQiLCJpbnN0YWxsVGltZXJGdW5jdGlvbnMiLCJvcHRzIiwidXNlTmF0aXZlVGltZXJzIiwic2V0VGltZW91dEZuIiwiYmluZCIsImNsZWFyVGltZW91dEZuIiwiQkFTRTY0X09WRVJIRUFEIiwiYnl0ZUxlbmd0aCIsInV0ZjhMZW5ndGgiLCJNYXRoIiwiY2VpbCIsInNpemUiLCJzdHIiLCJjIiwibGVuZ3RoIiwiaSIsImwiLCJjaGFyQ29kZUF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/util.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/commons.js":
/*!************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/commons.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_PACKET: function() { return /* binding */ ERROR_PACKET; },\n/* harmony export */   PACKET_TYPES: function() { return /* binding */ PACKET_TYPES; },\n/* harmony export */   PACKET_TYPES_REVERSE: function() { return /* binding */ PACKET_TYPES_REVERSE; }\n/* harmony export */ });\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = {\n  type: \"error\",\n  data: \"parser error\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vY29tbW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNQSxZQUFZLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDMUNGLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHO0FBQzFCQSxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsR0FBRztBQUMzQkEsWUFBWSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUc7QUFDMUJBLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHO0FBQzFCQSxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRztBQUM3QkEsWUFBWSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUc7QUFDN0JBLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHO0FBQzFCLE1BQU1HLG9CQUFvQixHQUFHRixNQUFNLENBQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUM7QUFDaERELE1BQU0sQ0FBQ0csSUFBSSxDQUFDSixZQUFZLENBQUMsQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLElBQUk7RUFDckNILG9CQUFvQixDQUFDSCxZQUFZLENBQUNNLEdBQUcsQ0FBQyxDQUFDLEdBQUdBLEdBQUc7QUFDakQsQ0FBQyxDQUFDO0FBQ0YsTUFBTUMsWUFBWSxHQUFHO0VBQUVDLElBQUksRUFBRSxPQUFPO0VBQUVDLElBQUksRUFBRTtBQUFlLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2NvbW1vbnMuanM/MWMxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQQUNLRVRfVFlQRVMgPSBPYmplY3QuY3JlYXRlKG51bGwpOyAvLyBubyBNYXAgPSBubyBwb2x5ZmlsbFxuUEFDS0VUX1RZUEVTW1wib3BlblwiXSA9IFwiMFwiO1xuUEFDS0VUX1RZUEVTW1wiY2xvc2VcIl0gPSBcIjFcIjtcblBBQ0tFVF9UWVBFU1tcInBpbmdcIl0gPSBcIjJcIjtcblBBQ0tFVF9UWVBFU1tcInBvbmdcIl0gPSBcIjNcIjtcblBBQ0tFVF9UWVBFU1tcIm1lc3NhZ2VcIl0gPSBcIjRcIjtcblBBQ0tFVF9UWVBFU1tcInVwZ3JhZGVcIl0gPSBcIjVcIjtcblBBQ0tFVF9UWVBFU1tcIm5vb3BcIl0gPSBcIjZcIjtcbmNvbnN0IFBBQ0tFVF9UWVBFU19SRVZFUlNFID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbk9iamVjdC5rZXlzKFBBQ0tFVF9UWVBFUykuZm9yRWFjaChrZXkgPT4ge1xuICAgIFBBQ0tFVF9UWVBFU19SRVZFUlNFW1BBQ0tFVF9UWVBFU1trZXldXSA9IGtleTtcbn0pO1xuY29uc3QgRVJST1JfUEFDS0VUID0geyB0eXBlOiBcImVycm9yXCIsIGRhdGE6IFwicGFyc2VyIGVycm9yXCIgfTtcbmV4cG9ydCB7IFBBQ0tFVF9UWVBFUywgUEFDS0VUX1RZUEVTX1JFVkVSU0UsIEVSUk9SX1BBQ0tFVCB9O1xuIl0sIm5hbWVzIjpbIlBBQ0tFVF9UWVBFUyIsIk9iamVjdCIsImNyZWF0ZSIsIlBBQ0tFVF9UWVBFU19SRVZFUlNFIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJFUlJPUl9QQUNLRVQiLCJ0eXBlIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/commons.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: function() { return /* binding */ decode; },\n/* harmony export */   encode: function() { return /* binding */ encode; }\n/* harmony export */ });\n// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = arraybuffer => {\n  let bytes = new Uint8Array(arraybuffer),\n    i,\n    len = bytes.length,\n    base64 = '';\n  for (i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + '=';\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + '==';\n  }\n  return base64;\n};\nconst decode = base64 => {\n  let bufferLength = base64.length * 0.75,\n    len = base64.length,\n    i,\n    p = 0,\n    encoded1,\n    encoded2,\n    encoded3,\n    encoded4;\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n  const arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n  for (i = 0; i < len; i += 4) {\n    encoded1 = lookup[base64.charCodeAt(i)];\n    encoded2 = lookup[base64.charCodeAt(i + 1)];\n    encoded3 = lookup[base64.charCodeAt(i + 2)];\n    encoded4 = lookup[base64.charCodeAt(i + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arraybuffer;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vY29udHJpYi9iYXNlNjQtYXJyYXlidWZmZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLE1BQU1BLEtBQUssR0FBRyxrRUFBa0U7QUFDaEY7QUFDQSxNQUFNQyxNQUFNLEdBQUcsT0FBT0MsVUFBVSxLQUFLLFdBQVcsR0FBRyxFQUFFLEdBQUcsSUFBSUEsVUFBVSxDQUFDLEdBQUcsQ0FBQztBQUMzRSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0gsS0FBSyxDQUFDSSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO0VBQ25DRixNQUFNLENBQUNELEtBQUssQ0FBQ0ssVUFBVSxDQUFDRixDQUFDLENBQUMsQ0FBQyxHQUFHQSxDQUFDO0FBQ25DO0FBQ08sTUFBTUcsTUFBTSxHQUFJQyxXQUFXLElBQUs7RUFDbkMsSUFBSUMsS0FBSyxHQUFHLElBQUlOLFVBQVUsQ0FBQ0ssV0FBVyxDQUFDO0lBQUVKLENBQUM7SUFBRU0sR0FBRyxHQUFHRCxLQUFLLENBQUNKLE1BQU07SUFBRU0sTUFBTSxHQUFHLEVBQUU7RUFDM0UsS0FBS1AsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTSxHQUFHLEVBQUVOLENBQUMsSUFBSSxDQUFDLEVBQUU7SUFDekJPLE1BQU0sSUFBSVYsS0FBSyxDQUFDUSxLQUFLLENBQUNMLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5Qk8sTUFBTSxJQUFJVixLQUFLLENBQUUsQ0FBQ1EsS0FBSyxDQUFDTCxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFLSyxLQUFLLENBQUNMLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFFLENBQUM7SUFDNURPLE1BQU0sSUFBSVYsS0FBSyxDQUFFLENBQUNRLEtBQUssQ0FBQ0wsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUtLLEtBQUssQ0FBQ0wsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUUsQ0FBQztJQUNqRU8sTUFBTSxJQUFJVixLQUFLLENBQUNRLEtBQUssQ0FBQ0wsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztFQUN0QztFQUNBLElBQUlNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO0lBQ2ZDLE1BQU0sR0FBR0EsTUFBTSxDQUFDQyxTQUFTLENBQUMsQ0FBQyxFQUFFRCxNQUFNLENBQUNOLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHO0VBQ3pELENBQUMsTUFDSSxJQUFJSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtJQUNwQkMsTUFBTSxHQUFHQSxNQUFNLENBQUNDLFNBQVMsQ0FBQyxDQUFDLEVBQUVELE1BQU0sQ0FBQ04sTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUk7RUFDMUQ7RUFDQSxPQUFPTSxNQUFNO0FBQ2pCLENBQUM7QUFDTSxNQUFNRSxNQUFNLEdBQUlGLE1BQU0sSUFBSztFQUM5QixJQUFJRyxZQUFZLEdBQUdILE1BQU0sQ0FBQ04sTUFBTSxHQUFHLElBQUk7SUFBRUssR0FBRyxHQUFHQyxNQUFNLENBQUNOLE1BQU07SUFBRUQsQ0FBQztJQUFFVyxDQUFDLEdBQUcsQ0FBQztJQUFFQyxRQUFRO0lBQUVDLFFBQVE7SUFBRUMsUUFBUTtJQUFFQyxRQUFRO0VBQzlHLElBQUlSLE1BQU0sQ0FBQ0EsTUFBTSxDQUFDTixNQUFNLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO0lBQ25DUyxZQUFZLEVBQUU7SUFDZCxJQUFJSCxNQUFNLENBQUNBLE1BQU0sQ0FBQ04sTUFBTSxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFBRTtNQUNuQ1MsWUFBWSxFQUFFO0lBQ2xCO0VBQ0o7RUFDQSxNQUFNTixXQUFXLEdBQUcsSUFBSVksV0FBVyxDQUFDTixZQUFZLENBQUM7SUFBRUwsS0FBSyxHQUFHLElBQUlOLFVBQVUsQ0FBQ0ssV0FBVyxDQUFDO0VBQ3RGLEtBQUtKLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR00sR0FBRyxFQUFFTixDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ3pCWSxRQUFRLEdBQUdkLE1BQU0sQ0FBQ1MsTUFBTSxDQUFDTCxVQUFVLENBQUNGLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDYSxRQUFRLEdBQUdmLE1BQU0sQ0FBQ1MsTUFBTSxDQUFDTCxVQUFVLENBQUNGLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMzQ2MsUUFBUSxHQUFHaEIsTUFBTSxDQUFDUyxNQUFNLENBQUNMLFVBQVUsQ0FBQ0YsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzNDZSxRQUFRLEdBQUdqQixNQUFNLENBQUNTLE1BQU0sQ0FBQ0wsVUFBVSxDQUFDRixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0NLLEtBQUssQ0FBQ00sQ0FBQyxFQUFFLENBQUMsR0FBSUMsUUFBUSxJQUFJLENBQUMsR0FBS0MsUUFBUSxJQUFJLENBQUU7SUFDOUNSLEtBQUssQ0FBQ00sQ0FBQyxFQUFFLENBQUMsR0FBSSxDQUFDRSxRQUFRLEdBQUcsRUFBRSxLQUFLLENBQUMsR0FBS0MsUUFBUSxJQUFJLENBQUU7SUFDckRULEtBQUssQ0FBQ00sQ0FBQyxFQUFFLENBQUMsR0FBSSxDQUFDRyxRQUFRLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBS0MsUUFBUSxHQUFHLEVBQUc7RUFDeEQ7RUFDQSxPQUFPWCxXQUFXO0FBQ3RCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2NvbnRyaWIvYmFzZTY0LWFycmF5YnVmZmVyLmpzPzRjZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vc29ja2V0aW8vYmFzZTY0LWFycmF5YnVmZmVyXG5jb25zdCBjaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJztcbi8vIFVzZSBhIGxvb2t1cCB0YWJsZSB0byBmaW5kIHRoZSBpbmRleC5cbmNvbnN0IGxvb2t1cCA9IHR5cGVvZiBVaW50OEFycmF5ID09PSAndW5kZWZpbmVkJyA/IFtdIDogbmV3IFVpbnQ4QXJyYXkoMjU2KTtcbmZvciAobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHtcbiAgICBsb29rdXBbY2hhcnMuY2hhckNvZGVBdChpKV0gPSBpO1xufVxuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChhcnJheWJ1ZmZlcikgPT4ge1xuICAgIGxldCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKSwgaSwgbGVuID0gYnl0ZXMubGVuZ3RoLCBiYXNlNjQgPSAnJztcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDMpIHtcbiAgICAgICAgYmFzZTY0ICs9IGNoYXJzW2J5dGVzW2ldID4+IDJdO1xuICAgICAgICBiYXNlNjQgKz0gY2hhcnNbKChieXRlc1tpXSAmIDMpIDw8IDQpIHwgKGJ5dGVzW2kgKyAxXSA+PiA0KV07XG4gICAgICAgIGJhc2U2NCArPSBjaGFyc1soKGJ5dGVzW2kgKyAxXSAmIDE1KSA8PCAyKSB8IChieXRlc1tpICsgMl0gPj4gNildO1xuICAgICAgICBiYXNlNjQgKz0gY2hhcnNbYnl0ZXNbaSArIDJdICYgNjNdO1xuICAgIH1cbiAgICBpZiAobGVuICUgMyA9PT0gMikge1xuICAgICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAxKSArICc9JztcbiAgICB9XG4gICAgZWxzZSBpZiAobGVuICUgMyA9PT0gMSkge1xuICAgICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAyKSArICc9PSc7XG4gICAgfVxuICAgIHJldHVybiBiYXNlNjQ7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChiYXNlNjQpID0+IHtcbiAgICBsZXQgYnVmZmVyTGVuZ3RoID0gYmFzZTY0Lmxlbmd0aCAqIDAuNzUsIGxlbiA9IGJhc2U2NC5sZW5ndGgsIGksIHAgPSAwLCBlbmNvZGVkMSwgZW5jb2RlZDIsIGVuY29kZWQzLCBlbmNvZGVkNDtcbiAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAxXSA9PT0gJz0nKSB7XG4gICAgICAgIGJ1ZmZlckxlbmd0aC0tO1xuICAgICAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAyXSA9PT0gJz0nKSB7XG4gICAgICAgICAgICBidWZmZXJMZW5ndGgtLTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhcnJheWJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXJMZW5ndGgpLCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICAgICAgZW5jb2RlZDEgPSBsb29rdXBbYmFzZTY0LmNoYXJDb2RlQXQoaSldO1xuICAgICAgICBlbmNvZGVkMiA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMSldO1xuICAgICAgICBlbmNvZGVkMyA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMildO1xuICAgICAgICBlbmNvZGVkNCA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMyldO1xuICAgICAgICBieXRlc1twKytdID0gKGVuY29kZWQxIDw8IDIpIHwgKGVuY29kZWQyID4+IDQpO1xuICAgICAgICBieXRlc1twKytdID0gKChlbmNvZGVkMiAmIDE1KSA8PCA0KSB8IChlbmNvZGVkMyA+PiAyKTtcbiAgICAgICAgYnl0ZXNbcCsrXSA9ICgoZW5jb2RlZDMgJiAzKSA8PCA2KSB8IChlbmNvZGVkNCAmIDYzKTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5YnVmZmVyO1xufTtcbiJdLCJuYW1lcyI6WyJjaGFycyIsImxvb2t1cCIsIlVpbnQ4QXJyYXkiLCJpIiwibGVuZ3RoIiwiY2hhckNvZGVBdCIsImVuY29kZSIsImFycmF5YnVmZmVyIiwiYnl0ZXMiLCJsZW4iLCJiYXNlNjQiLCJzdWJzdHJpbmciLCJkZWNvZGUiLCJidWZmZXJMZW5ndGgiLCJwIiwiZW5jb2RlZDEiLCJlbmNvZGVkMiIsImVuY29kZWQzIiwiZW5jb2RlZDQiLCJBcnJheUJ1ZmZlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/decodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodePacket: function() { return /* binding */ decodePacket; }\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n/* harmony import */ var _contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contrib/base64-arraybuffer.js */ \"./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\");\n\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return _commons_js__WEBPACK_IMPORTED_MODULE_0__.ERROR_PACKET;\n  }\n  return encodedPacket.length > 1 ? {\n    type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],\n    data: encodedPacket.substring(1)\n  } : {\n    type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type]\n  };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n  if (withNativeArrayBuffer) {\n    const decoded = (0,_contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__.decode)(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return {\n      base64: true,\n      data\n    }; // fallback for old browsers\n  }\n};\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      if (data instanceof Blob) {\n        // from WebSocket + binaryType \"blob\"\n        return data;\n      } else {\n        // from HTTP long-polling or WebTransport\n        return new Blob([data]);\n      }\n    case \"arraybuffer\":\n    default:\n      if (data instanceof ArrayBuffer) {\n        // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n        return data;\n      } else {\n        // from WebTransport (Uint8Array)\n        return data.buffer;\n      }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vZGVjb2RlUGFja2V0LmJyb3dzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ1Q7QUFDekQsTUFBTUcscUJBQXFCLEdBQUcsT0FBT0MsV0FBVyxLQUFLLFVBQVU7QUFDeEQsTUFBTUMsWUFBWSxHQUFHQSxDQUFDQyxhQUFhLEVBQUVDLFVBQVUsS0FBSztFQUN2RCxJQUFJLE9BQU9ELGFBQWEsS0FBSyxRQUFRLEVBQUU7SUFDbkMsT0FBTztNQUNIRSxJQUFJLEVBQUUsU0FBUztNQUNmQyxJQUFJLEVBQUVDLFNBQVMsQ0FBQ0osYUFBYSxFQUFFQyxVQUFVO0lBQzdDLENBQUM7RUFDTDtFQUNBLE1BQU1DLElBQUksR0FBR0YsYUFBYSxDQUFDSyxNQUFNLENBQUMsQ0FBQyxDQUFDO0VBQ3BDLElBQUlILElBQUksS0FBSyxHQUFHLEVBQUU7SUFDZCxPQUFPO01BQ0hBLElBQUksRUFBRSxTQUFTO01BQ2ZDLElBQUksRUFBRUcsa0JBQWtCLENBQUNOLGFBQWEsQ0FBQ08sU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFTixVQUFVO0lBQ25FLENBQUM7RUFDTDtFQUNBLE1BQU1PLFVBQVUsR0FBR2IsNkRBQW9CLENBQUNPLElBQUksQ0FBQztFQUM3QyxJQUFJLENBQUNNLFVBQVUsRUFBRTtJQUNiLE9BQU9kLHFEQUFZO0VBQ3ZCO0VBQ0EsT0FBT00sYUFBYSxDQUFDUyxNQUFNLEdBQUcsQ0FBQyxHQUN6QjtJQUNFUCxJQUFJLEVBQUVQLDZEQUFvQixDQUFDTyxJQUFJLENBQUM7SUFDaENDLElBQUksRUFBRUgsYUFBYSxDQUFDTyxTQUFTLENBQUMsQ0FBQztFQUNuQyxDQUFDLEdBQ0M7SUFDRUwsSUFBSSxFQUFFUCw2REFBb0IsQ0FBQ08sSUFBSTtFQUNuQyxDQUFDO0FBQ1QsQ0FBQztBQUNELE1BQU1JLGtCQUFrQixHQUFHQSxDQUFDSCxJQUFJLEVBQUVGLFVBQVUsS0FBSztFQUM3QyxJQUFJSixxQkFBcUIsRUFBRTtJQUN2QixNQUFNYSxPQUFPLEdBQUdkLHNFQUFNLENBQUNPLElBQUksQ0FBQztJQUM1QixPQUFPQyxTQUFTLENBQUNNLE9BQU8sRUFBRVQsVUFBVSxDQUFDO0VBQ3pDLENBQUMsTUFDSTtJQUNELE9BQU87TUFBRVUsTUFBTSxFQUFFLElBQUk7TUFBRVI7SUFBSyxDQUFDLENBQUMsQ0FBQztFQUNuQztBQUNKLENBQUM7QUFDRCxNQUFNQyxTQUFTLEdBQUdBLENBQUNELElBQUksRUFBRUYsVUFBVSxLQUFLO0VBQ3BDLFFBQVFBLFVBQVU7SUFDZCxLQUFLLE1BQU07TUFDUCxJQUFJRSxJQUFJLFlBQVlTLElBQUksRUFBRTtRQUN0QjtRQUNBLE9BQU9ULElBQUk7TUFDZixDQUFDLE1BQ0k7UUFDRDtRQUNBLE9BQU8sSUFBSVMsSUFBSSxDQUFDLENBQUNULElBQUksQ0FBQyxDQUFDO01BQzNCO0lBQ0osS0FBSyxhQUFhO0lBQ2xCO01BQ0ksSUFBSUEsSUFBSSxZQUFZTCxXQUFXLEVBQUU7UUFDN0I7UUFDQSxPQUFPSyxJQUFJO01BQ2YsQ0FBQyxNQUNJO1FBQ0Q7UUFDQSxPQUFPQSxJQUFJLENBQUNVLE1BQU07TUFDdEI7RUFDUjtBQUNKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2RlY29kZVBhY2tldC5icm93c2VyLmpzP2I0NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRVJST1JfUEFDS0VULCBQQUNLRVRfVFlQRVNfUkVWRVJTRSB9IGZyb20gXCIuL2NvbW1vbnMuanNcIjtcbmltcG9ydCB7IGRlY29kZSB9IGZyb20gXCIuL2NvbnRyaWIvYmFzZTY0LWFycmF5YnVmZmVyLmpzXCI7XG5jb25zdCB3aXRoTmF0aXZlQXJyYXlCdWZmZXIgPSB0eXBlb2YgQXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIjtcbmV4cG9ydCBjb25zdCBkZWNvZGVQYWNrZXQgPSAoZW5jb2RlZFBhY2tldCwgYmluYXJ5VHlwZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZW5jb2RlZFBhY2tldCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJtZXNzYWdlXCIsXG4gICAgICAgICAgICBkYXRhOiBtYXBCaW5hcnkoZW5jb2RlZFBhY2tldCwgYmluYXJ5VHlwZSlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgdHlwZSA9IGVuY29kZWRQYWNrZXQuY2hhckF0KDApO1xuICAgIGlmICh0eXBlID09PSBcImJcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJtZXNzYWdlXCIsXG4gICAgICAgICAgICBkYXRhOiBkZWNvZGVCYXNlNjRQYWNrZXQoZW5jb2RlZFBhY2tldC5zdWJzdHJpbmcoMSksIGJpbmFyeVR5cGUpXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHBhY2tldFR5cGUgPSBQQUNLRVRfVFlQRVNfUkVWRVJTRVt0eXBlXTtcbiAgICBpZiAoIXBhY2tldFR5cGUpIHtcbiAgICAgICAgcmV0dXJuIEVSUk9SX1BBQ0tFVDtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZWRQYWNrZXQubGVuZ3RoID4gMVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIHR5cGU6IFBBQ0tFVF9UWVBFU19SRVZFUlNFW3R5cGVdLFxuICAgICAgICAgICAgZGF0YTogZW5jb2RlZFBhY2tldC5zdWJzdHJpbmcoMSlcbiAgICAgICAgfVxuICAgICAgICA6IHtcbiAgICAgICAgICAgIHR5cGU6IFBBQ0tFVF9UWVBFU19SRVZFUlNFW3R5cGVdXG4gICAgICAgIH07XG59O1xuY29uc3QgZGVjb2RlQmFzZTY0UGFja2V0ID0gKGRhdGEsIGJpbmFyeVR5cGUpID0+IHtcbiAgICBpZiAod2l0aE5hdGl2ZUFycmF5QnVmZmVyKSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBkZWNvZGUoZGF0YSk7XG4gICAgICAgIHJldHVybiBtYXBCaW5hcnkoZGVjb2RlZCwgYmluYXJ5VHlwZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4geyBiYXNlNjQ6IHRydWUsIGRhdGEgfTsgLy8gZmFsbGJhY2sgZm9yIG9sZCBicm93c2Vyc1xuICAgIH1cbn07XG5jb25zdCBtYXBCaW5hcnkgPSAoZGF0YSwgYmluYXJ5VHlwZSkgPT4ge1xuICAgIHN3aXRjaCAoYmluYXJ5VHlwZSkge1xuICAgICAgICBjYXNlIFwiYmxvYlwiOlxuICAgICAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBCbG9iKSB7XG4gICAgICAgICAgICAgICAgLy8gZnJvbSBXZWJTb2NrZXQgKyBiaW5hcnlUeXBlIFwiYmxvYlwiXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBmcm9tIEhUVFAgbG9uZy1wb2xsaW5nIG9yIFdlYlRyYW5zcG9ydFxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQmxvYihbZGF0YV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiYXJyYXlidWZmZXJcIjpcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgICAgICAgICAvLyBmcm9tIEhUVFAgbG9uZy1wb2xsaW5nIChiYXNlNjQpIG9yIFdlYlNvY2tldCArIGJpbmFyeVR5cGUgXCJhcnJheWJ1ZmZlclwiXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBmcm9tIFdlYlRyYW5zcG9ydCAoVWludDhBcnJheSlcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgICAgICAgICB9XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJFUlJPUl9QQUNLRVQiLCJQQUNLRVRfVFlQRVNfUkVWRVJTRSIsImRlY29kZSIsIndpdGhOYXRpdmVBcnJheUJ1ZmZlciIsIkFycmF5QnVmZmVyIiwiZGVjb2RlUGFja2V0IiwiZW5jb2RlZFBhY2tldCIsImJpbmFyeVR5cGUiLCJ0eXBlIiwiZGF0YSIsIm1hcEJpbmFyeSIsImNoYXJBdCIsImRlY29kZUJhc2U2NFBhY2tldCIsInN1YnN0cmluZyIsInBhY2tldFR5cGUiLCJsZW5ndGgiLCJkZWNvZGVkIiwiYmFzZTY0IiwiQmxvYiIsImJ1ZmZlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/encodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacket: function() { return /* binding */ encodePacket; },\n/* harmony export */   encodePacketToBinary: function() { return /* binding */ encodePacketToBinary; }\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n\nconst withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({\n  type,\n  data\n}, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function () {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + (content || \"\"));\n  };\n  return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n  if (data instanceof Uint8Array) {\n    return data;\n  } else if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data);\n  } else {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  }\n}\nlet TEXT_ENCODER;\nfunction encodePacketToBinary(packet, callback) {\n  if (withNativeBlob && packet.data instanceof Blob) {\n    return packet.data.arrayBuffer().then(toArray).then(callback);\n  } else if (withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n    return callback(toArray(packet.data));\n  }\n  encodePacket(packet, false, encoded => {\n    if (!TEXT_ENCODER) {\n      TEXT_ENCODER = new TextEncoder();\n    }\n    callback(TEXT_ENCODER.encode(encoded));\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vZW5jb2RlUGFja2V0LmJyb3dzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQzVDLE1BQU1DLGNBQWMsR0FBRyxPQUFPQyxJQUFJLEtBQUssVUFBVSxJQUM1QyxPQUFPQSxJQUFJLEtBQUssV0FBVyxJQUN4QkMsTUFBTSxDQUFDQyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDSixJQUFJLENBQUMsS0FBSywwQkFBMkI7QUFDNUUsTUFBTUsscUJBQXFCLEdBQUcsT0FBT0MsV0FBVyxLQUFLLFVBQVU7QUFDL0Q7QUFDQSxNQUFNQyxNQUFNLEdBQUdDLEdBQUcsSUFBSTtFQUNsQixPQUFPLE9BQU9GLFdBQVcsQ0FBQ0MsTUFBTSxLQUFLLFVBQVUsR0FDekNELFdBQVcsQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUMsR0FDdkJBLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxNQUFNLFlBQVlILFdBQVc7QUFDbEQsQ0FBQztBQUNELE1BQU1JLFlBQVksR0FBR0EsQ0FBQztFQUFFQyxJQUFJO0VBQUVDO0FBQUssQ0FBQyxFQUFFQyxjQUFjLEVBQUVDLFFBQVEsS0FBSztFQUMvRCxJQUFJZixjQUFjLElBQUlhLElBQUksWUFBWVosSUFBSSxFQUFFO0lBQ3hDLElBQUlhLGNBQWMsRUFBRTtNQUNoQixPQUFPQyxRQUFRLENBQUNGLElBQUksQ0FBQztJQUN6QixDQUFDLE1BQ0k7TUFDRCxPQUFPRyxrQkFBa0IsQ0FBQ0gsSUFBSSxFQUFFRSxRQUFRLENBQUM7SUFDN0M7RUFDSixDQUFDLE1BQ0ksSUFBSVQscUJBQXFCLEtBQ3pCTyxJQUFJLFlBQVlOLFdBQVcsSUFBSUMsTUFBTSxDQUFDSyxJQUFJLENBQUMsQ0FBQyxFQUFFO0lBQy9DLElBQUlDLGNBQWMsRUFBRTtNQUNoQixPQUFPQyxRQUFRLENBQUNGLElBQUksQ0FBQztJQUN6QixDQUFDLE1BQ0k7TUFDRCxPQUFPRyxrQkFBa0IsQ0FBQyxJQUFJZixJQUFJLENBQUMsQ0FBQ1ksSUFBSSxDQUFDLENBQUMsRUFBRUUsUUFBUSxDQUFDO0lBQ3pEO0VBQ0o7RUFDQTtFQUNBLE9BQU9BLFFBQVEsQ0FBQ2hCLHFEQUFZLENBQUNhLElBQUksQ0FBQyxJQUFJQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUNELE1BQU1HLGtCQUFrQixHQUFHQSxDQUFDSCxJQUFJLEVBQUVFLFFBQVEsS0FBSztFQUMzQyxNQUFNRSxVQUFVLEdBQUcsSUFBSUMsVUFBVSxDQUFDLENBQUM7RUFDbkNELFVBQVUsQ0FBQ0UsTUFBTSxHQUFHLFlBQVk7SUFDNUIsTUFBTUMsT0FBTyxHQUFHSCxVQUFVLENBQUNJLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvQ1AsUUFBUSxDQUFDLEdBQUcsSUFBSUssT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0VBQ25DLENBQUM7RUFDRCxPQUFPSCxVQUFVLENBQUNNLGFBQWEsQ0FBQ1YsSUFBSSxDQUFDO0FBQ3pDLENBQUM7QUFDRCxTQUFTVyxPQUFPQSxDQUFDWCxJQUFJLEVBQUU7RUFDbkIsSUFBSUEsSUFBSSxZQUFZWSxVQUFVLEVBQUU7SUFDNUIsT0FBT1osSUFBSTtFQUNmLENBQUMsTUFDSSxJQUFJQSxJQUFJLFlBQVlOLFdBQVcsRUFBRTtJQUNsQyxPQUFPLElBQUlrQixVQUFVLENBQUNaLElBQUksQ0FBQztFQUMvQixDQUFDLE1BQ0k7SUFDRCxPQUFPLElBQUlZLFVBQVUsQ0FBQ1osSUFBSSxDQUFDSCxNQUFNLEVBQUVHLElBQUksQ0FBQ2EsVUFBVSxFQUFFYixJQUFJLENBQUNjLFVBQVUsQ0FBQztFQUN4RTtBQUNKO0FBQ0EsSUFBSUMsWUFBWTtBQUNULFNBQVNDLG9CQUFvQkEsQ0FBQ0MsTUFBTSxFQUFFZixRQUFRLEVBQUU7RUFDbkQsSUFBSWYsY0FBYyxJQUFJOEIsTUFBTSxDQUFDakIsSUFBSSxZQUFZWixJQUFJLEVBQUU7SUFDL0MsT0FBTzZCLE1BQU0sQ0FBQ2pCLElBQUksQ0FDYmtCLFdBQVcsQ0FBQyxDQUFDLENBQ2JDLElBQUksQ0FBQ1IsT0FBTyxDQUFDLENBQ2JRLElBQUksQ0FBQ2pCLFFBQVEsQ0FBQztFQUN2QixDQUFDLE1BQ0ksSUFBSVQscUJBQXFCLEtBQ3pCd0IsTUFBTSxDQUFDakIsSUFBSSxZQUFZTixXQUFXLElBQUlDLE1BQU0sQ0FBQ3NCLE1BQU0sQ0FBQ2pCLElBQUksQ0FBQyxDQUFDLEVBQUU7SUFDN0QsT0FBT0UsUUFBUSxDQUFDUyxPQUFPLENBQUNNLE1BQU0sQ0FBQ2pCLElBQUksQ0FBQyxDQUFDO0VBQ3pDO0VBQ0FGLFlBQVksQ0FBQ21CLE1BQU0sRUFBRSxLQUFLLEVBQUVHLE9BQU8sSUFBSTtJQUNuQyxJQUFJLENBQUNMLFlBQVksRUFBRTtNQUNmQSxZQUFZLEdBQUcsSUFBSU0sV0FBVyxDQUFDLENBQUM7SUFDcEM7SUFDQW5CLFFBQVEsQ0FBQ2EsWUFBWSxDQUFDTyxNQUFNLENBQUNGLE9BQU8sQ0FBQyxDQUFDO0VBQzFDLENBQUMsQ0FBQztBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tcGFyc2VyL2J1aWxkL2VzbS9lbmNvZGVQYWNrZXQuYnJvd3Nlci5qcz83NTZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBBQ0tFVF9UWVBFUyB9IGZyb20gXCIuL2NvbW1vbnMuanNcIjtcbmNvbnN0IHdpdGhOYXRpdmVCbG9iID0gdHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiB8fFxuICAgICh0eXBlb2YgQmxvYiAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoQmxvYikgPT09IFwiW29iamVjdCBCbG9iQ29uc3RydWN0b3JdXCIpO1xuY29uc3Qgd2l0aE5hdGl2ZUFycmF5QnVmZmVyID0gdHlwZW9mIEFycmF5QnVmZmVyID09PSBcImZ1bmN0aW9uXCI7XG4vLyBBcnJheUJ1ZmZlci5pc1ZpZXcgbWV0aG9kIGlzIG5vdCBkZWZpbmVkIGluIElFMTBcbmNvbnN0IGlzVmlldyA9IG9iaiA9PiB7XG4gICAgcmV0dXJuIHR5cGVvZiBBcnJheUJ1ZmZlci5pc1ZpZXcgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICA/IEFycmF5QnVmZmVyLmlzVmlldyhvYmopXG4gICAgICAgIDogb2JqICYmIG9iai5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcjtcbn07XG5jb25zdCBlbmNvZGVQYWNrZXQgPSAoeyB0eXBlLCBkYXRhIH0sIHN1cHBvcnRzQmluYXJ5LCBjYWxsYmFjaykgPT4ge1xuICAgIGlmICh3aXRoTmF0aXZlQmxvYiAmJiBkYXRhIGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICBpZiAoc3VwcG9ydHNCaW5hcnkpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBlbmNvZGVCbG9iQXNCYXNlNjQoZGF0YSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHdpdGhOYXRpdmVBcnJheUJ1ZmZlciAmJlxuICAgICAgICAoZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IGlzVmlldyhkYXRhKSkpIHtcbiAgICAgICAgaWYgKHN1cHBvcnRzQmluYXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZW5jb2RlQmxvYkFzQmFzZTY0KG5ldyBCbG9iKFtkYXRhXSksIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBwbGFpbiBzdHJpbmdcbiAgICByZXR1cm4gY2FsbGJhY2soUEFDS0VUX1RZUEVTW3R5cGVdICsgKGRhdGEgfHwgXCJcIikpO1xufTtcbmNvbnN0IGVuY29kZUJsb2JBc0Jhc2U2NCA9IChkYXRhLCBjYWxsYmFjaykgPT4ge1xuICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBjb250ZW50ID0gZmlsZVJlYWRlci5yZXN1bHQuc3BsaXQoXCIsXCIpWzFdO1xuICAgICAgICBjYWxsYmFjayhcImJcIiArIChjb250ZW50IHx8IFwiXCIpKTtcbiAgICB9O1xuICAgIHJldHVybiBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZGF0YSk7XG59O1xuZnVuY3Rpb24gdG9BcnJheShkYXRhKSB7XG4gICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBlbHNlIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGRhdGEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGRhdGEuYnVmZmVyLCBkYXRhLmJ5dGVPZmZzZXQsIGRhdGEuYnl0ZUxlbmd0aCk7XG4gICAgfVxufVxubGV0IFRFWFRfRU5DT0RFUjtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVQYWNrZXRUb0JpbmFyeShwYWNrZXQsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHdpdGhOYXRpdmVCbG9iICYmIHBhY2tldC5kYXRhIGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICByZXR1cm4gcGFja2V0LmRhdGFcbiAgICAgICAgICAgIC5hcnJheUJ1ZmZlcigpXG4gICAgICAgICAgICAudGhlbih0b0FycmF5KVxuICAgICAgICAgICAgLnRoZW4oY2FsbGJhY2spO1xuICAgIH1cbiAgICBlbHNlIGlmICh3aXRoTmF0aXZlQXJyYXlCdWZmZXIgJiZcbiAgICAgICAgKHBhY2tldC5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgaXNWaWV3KHBhY2tldC5kYXRhKSkpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHRvQXJyYXkocGFja2V0LmRhdGEpKTtcbiAgICB9XG4gICAgZW5jb2RlUGFja2V0KHBhY2tldCwgZmFsc2UsIGVuY29kZWQgPT4ge1xuICAgICAgICBpZiAoIVRFWFRfRU5DT0RFUikge1xuICAgICAgICAgICAgVEVYVF9FTkNPREVSID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FsbGJhY2soVEVYVF9FTkNPREVSLmVuY29kZShlbmNvZGVkKSk7XG4gICAgfSk7XG59XG5leHBvcnQgeyBlbmNvZGVQYWNrZXQgfTtcbiJdLCJuYW1lcyI6WyJQQUNLRVRfVFlQRVMiLCJ3aXRoTmF0aXZlQmxvYiIsIkJsb2IiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJ3aXRoTmF0aXZlQXJyYXlCdWZmZXIiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsIm9iaiIsImJ1ZmZlciIsImVuY29kZVBhY2tldCIsInR5cGUiLCJkYXRhIiwic3VwcG9ydHNCaW5hcnkiLCJjYWxsYmFjayIsImVuY29kZUJsb2JBc0Jhc2U2NCIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkIiwiY29udGVudCIsInJlc3VsdCIsInNwbGl0IiwicmVhZEFzRGF0YVVSTCIsInRvQXJyYXkiLCJVaW50OEFycmF5IiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJURVhUX0VOQ09ERVIiLCJlbmNvZGVQYWNrZXRUb0JpbmFyeSIsInBhY2tldCIsImFycmF5QnVmZmVyIiwidGhlbiIsImVuY29kZWQiLCJUZXh0RW5jb2RlciIsImVuY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodePacket: function() { return /* reexport safe */ _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket; },\n/* harmony export */   decodePacketFromBinary: function() { return /* binding */ decodePacketFromBinary; },\n/* harmony export */   decodePayload: function() { return /* binding */ decodePayload; },\n/* harmony export */   encodePacket: function() { return /* reexport safe */ _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket; },\n/* harmony export */   encodePacketToBinary: function() { return /* reexport safe */ _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacketToBinary; },\n/* harmony export */   encodePayload: function() { return /* binding */ encodePayload; },\n/* harmony export */   protocol: function() { return /* binding */ protocol; }\n/* harmony export */ });\n/* harmony import */ var _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encodePacket.js */ \"./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\");\n/* harmony import */ var _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodePacket.js */ \"./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\");\n\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket)(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = (0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\nlet TEXT_DECODER;\nfunction decodePacketFromBinary(data, isBinary, binaryType) {\n  if (!TEXT_DECODER) {\n    // lazily created for compatibility with old browser platforms\n    TEXT_DECODER = new TextDecoder();\n  }\n  // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n  // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n  const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n  return (0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nconst protocol = 4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXVFO0FBQ3RCO0FBQ2pELE1BQU1HLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMzQyxNQUFNQyxhQUFhLEdBQUdBLENBQUNDLE9BQU8sRUFBRUMsUUFBUSxLQUFLO0VBQ3pDO0VBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNFLE1BQU07RUFDN0IsTUFBTUMsY0FBYyxHQUFHLElBQUlDLEtBQUssQ0FBQ0YsTUFBTSxDQUFDO0VBQ3hDLElBQUlHLEtBQUssR0FBRyxDQUFDO0VBQ2JMLE9BQU8sQ0FBQ00sT0FBTyxDQUFDLENBQUNDLE1BQU0sRUFBRUMsQ0FBQyxLQUFLO0lBQzNCO0lBQ0FmLDhEQUFZLENBQUNjLE1BQU0sRUFBRSxLQUFLLEVBQUVFLGFBQWEsSUFBSTtNQUN6Q04sY0FBYyxDQUFDSyxDQUFDLENBQUMsR0FBR0MsYUFBYTtNQUNqQyxJQUFJLEVBQUVKLEtBQUssS0FBS0gsTUFBTSxFQUFFO1FBQ3BCRCxRQUFRLENBQUNFLGNBQWMsQ0FBQ08sSUFBSSxDQUFDZCxTQUFTLENBQUMsQ0FBQztNQUM1QztJQUNKLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztBQUNOLENBQUM7QUFDRCxNQUFNZSxhQUFhLEdBQUdBLENBQUNDLGNBQWMsRUFBRUMsVUFBVSxLQUFLO0VBQ2xELE1BQU1WLGNBQWMsR0FBR1MsY0FBYyxDQUFDRSxLQUFLLENBQUNsQixTQUFTLENBQUM7RUFDdEQsTUFBTUksT0FBTyxHQUFHLEVBQUU7RUFDbEIsS0FBSyxJQUFJUSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdMLGNBQWMsQ0FBQ0QsTUFBTSxFQUFFTSxDQUFDLEVBQUUsRUFBRTtJQUM1QyxNQUFNTyxhQUFhLEdBQUdwQiw4REFBWSxDQUFDUSxjQUFjLENBQUNLLENBQUMsQ0FBQyxFQUFFSyxVQUFVLENBQUM7SUFDakViLE9BQU8sQ0FBQ2dCLElBQUksQ0FBQ0QsYUFBYSxDQUFDO0lBQzNCLElBQUlBLGFBQWEsQ0FBQ0UsSUFBSSxLQUFLLE9BQU8sRUFBRTtNQUNoQztJQUNKO0VBQ0o7RUFDQSxPQUFPakIsT0FBTztBQUNsQixDQUFDO0FBQ0QsSUFBSWtCLFlBQVk7QUFDVCxTQUFTQyxzQkFBc0JBLENBQUNDLElBQUksRUFBRUMsUUFBUSxFQUFFUixVQUFVLEVBQUU7RUFDL0QsSUFBSSxDQUFDSyxZQUFZLEVBQUU7SUFDZjtJQUNBQSxZQUFZLEdBQUcsSUFBSUksV0FBVyxDQUFDLENBQUM7RUFDcEM7RUFDQTtFQUNBO0VBQ0EsTUFBTUMsYUFBYSxHQUFHRixRQUFRLElBQUlELElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUlBLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFO0VBQzlELE9BQU96Qiw4REFBWSxDQUFDNEIsYUFBYSxHQUFHSCxJQUFJLEdBQUdGLFlBQVksQ0FBQ00sTUFBTSxDQUFDSixJQUFJLENBQUMsRUFBRVAsVUFBVSxDQUFDO0FBQ3JGO0FBQ08sTUFBTVksUUFBUSxHQUFHLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvYnVpbGQvZXNtL2luZGV4LmpzP2RmNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlUGFja2V0LCBlbmNvZGVQYWNrZXRUb0JpbmFyeSB9IGZyb20gXCIuL2VuY29kZVBhY2tldC5qc1wiO1xuaW1wb3J0IHsgZGVjb2RlUGFja2V0IH0gZnJvbSBcIi4vZGVjb2RlUGFja2V0LmpzXCI7XG5jb25zdCBTRVBBUkFUT1IgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKDMwKTsgLy8gc2VlIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0RlbGltaXRlciNBU0NJSV9kZWxpbWl0ZWRfdGV4dFxuY29uc3QgZW5jb2RlUGF5bG9hZCA9IChwYWNrZXRzLCBjYWxsYmFjaykgPT4ge1xuICAgIC8vIHNvbWUgcGFja2V0cyBtYXkgYmUgYWRkZWQgdG8gdGhlIGFycmF5IHdoaWxlIGVuY29kaW5nLCBzbyB0aGUgaW5pdGlhbCBsZW5ndGggbXVzdCBiZSBzYXZlZFxuICAgIGNvbnN0IGxlbmd0aCA9IHBhY2tldHMubGVuZ3RoO1xuICAgIGNvbnN0IGVuY29kZWRQYWNrZXRzID0gbmV3IEFycmF5KGxlbmd0aCk7XG4gICAgbGV0IGNvdW50ID0gMDtcbiAgICBwYWNrZXRzLmZvckVhY2goKHBhY2tldCwgaSkgPT4ge1xuICAgICAgICAvLyBmb3JjZSBiYXNlNjQgZW5jb2RpbmcgZm9yIGJpbmFyeSBwYWNrZXRzXG4gICAgICAgIGVuY29kZVBhY2tldChwYWNrZXQsIGZhbHNlLCBlbmNvZGVkUGFja2V0ID0+IHtcbiAgICAgICAgICAgIGVuY29kZWRQYWNrZXRzW2ldID0gZW5jb2RlZFBhY2tldDtcbiAgICAgICAgICAgIGlmICgrK2NvdW50ID09PSBsZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhlbmNvZGVkUGFja2V0cy5qb2luKFNFUEFSQVRPUikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5jb25zdCBkZWNvZGVQYXlsb2FkID0gKGVuY29kZWRQYXlsb2FkLCBiaW5hcnlUeXBlKSA9PiB7XG4gICAgY29uc3QgZW5jb2RlZFBhY2tldHMgPSBlbmNvZGVkUGF5bG9hZC5zcGxpdChTRVBBUkFUT1IpO1xuICAgIGNvbnN0IHBhY2tldHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVuY29kZWRQYWNrZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWRQYWNrZXQgPSBkZWNvZGVQYWNrZXQoZW5jb2RlZFBhY2tldHNbaV0sIGJpbmFyeVR5cGUpO1xuICAgICAgICBwYWNrZXRzLnB1c2goZGVjb2RlZFBhY2tldCk7XG4gICAgICAgIGlmIChkZWNvZGVkUGFja2V0LnR5cGUgPT09IFwiZXJyb3JcIikge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBhY2tldHM7XG59O1xubGV0IFRFWFRfREVDT0RFUjtcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVQYWNrZXRGcm9tQmluYXJ5KGRhdGEsIGlzQmluYXJ5LCBiaW5hcnlUeXBlKSB7XG4gICAgaWYgKCFURVhUX0RFQ09ERVIpIHtcbiAgICAgICAgLy8gbGF6aWx5IGNyZWF0ZWQgZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBvbGQgYnJvd3NlciBwbGF0Zm9ybXNcbiAgICAgICAgVEVYVF9ERUNPREVSID0gbmV3IFRleHREZWNvZGVyKCk7XG4gICAgfVxuICAgIC8vIDQ4ID09PSBcIjBcIi5jaGFyQ29kZUF0KDApIChPUEVOIHBhY2tldCB0eXBlKVxuICAgIC8vIDU0ID09PSBcIjZcIi5jaGFyQ29kZUF0KDApIChOT09QIHBhY2tldCB0eXBlKVxuICAgIGNvbnN0IGlzUGxhaW5CaW5hcnkgPSBpc0JpbmFyeSB8fCBkYXRhWzBdIDwgNDggfHwgZGF0YVswXSA+IDU0O1xuICAgIHJldHVybiBkZWNvZGVQYWNrZXQoaXNQbGFpbkJpbmFyeSA/IGRhdGEgOiBURVhUX0RFQ09ERVIuZGVjb2RlKGRhdGEpLCBiaW5hcnlUeXBlKTtcbn1cbmV4cG9ydCBjb25zdCBwcm90b2NvbCA9IDQ7XG5leHBvcnQgeyBlbmNvZGVQYWNrZXQsIGVuY29kZVBhY2tldFRvQmluYXJ5LCBlbmNvZGVQYXlsb2FkLCBkZWNvZGVQYWNrZXQsIGRlY29kZVBheWxvYWQgfTtcbiJdLCJuYW1lcyI6WyJlbmNvZGVQYWNrZXQiLCJlbmNvZGVQYWNrZXRUb0JpbmFyeSIsImRlY29kZVBhY2tldCIsIlNFUEFSQVRPUiIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImVuY29kZVBheWxvYWQiLCJwYWNrZXRzIiwiY2FsbGJhY2siLCJsZW5ndGgiLCJlbmNvZGVkUGFja2V0cyIsIkFycmF5IiwiY291bnQiLCJmb3JFYWNoIiwicGFja2V0IiwiaSIsImVuY29kZWRQYWNrZXQiLCJqb2luIiwiZGVjb2RlUGF5bG9hZCIsImVuY29kZWRQYXlsb2FkIiwiYmluYXJ5VHlwZSIsInNwbGl0IiwiZGVjb2RlZFBhY2tldCIsInB1c2giLCJ0eXBlIiwiVEVYVF9ERUNPREVSIiwiZGVjb2RlUGFja2V0RnJvbUJpbmFyeSIsImRhdGEiLCJpc0JpbmFyeSIsIlRleHREZWNvZGVyIiwiaXNQbGFpbkJpbmFyeSIsImRlY29kZSIsInByb3RvY29sIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/contrib/backo2.js":
/*!*******************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/contrib/backo2.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Backoff: function() { return /* binding */ Backoff; }\n/* harmony export */ });\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9iYWNrbzIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxPQUFPQSxDQUFDQyxJQUFJLEVBQUU7RUFDMUJBLElBQUksR0FBR0EsSUFBSSxJQUFJLENBQUMsQ0FBQztFQUNqQixJQUFJLENBQUNDLEVBQUUsR0FBR0QsSUFBSSxDQUFDRSxHQUFHLElBQUksR0FBRztFQUN6QixJQUFJLENBQUNDLEdBQUcsR0FBR0gsSUFBSSxDQUFDRyxHQUFHLElBQUksS0FBSztFQUM1QixJQUFJLENBQUNDLE1BQU0sR0FBR0osSUFBSSxDQUFDSSxNQUFNLElBQUksQ0FBQztFQUM5QixJQUFJLENBQUNDLE1BQU0sR0FBR0wsSUFBSSxDQUFDSyxNQUFNLEdBQUcsQ0FBQyxJQUFJTCxJQUFJLENBQUNLLE1BQU0sSUFBSSxDQUFDLEdBQUdMLElBQUksQ0FBQ0ssTUFBTSxHQUFHLENBQUM7RUFDbkUsSUFBSSxDQUFDQyxRQUFRLEdBQUcsQ0FBQztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBUCxPQUFPLENBQUNRLFNBQVMsQ0FBQ0MsUUFBUSxHQUFHLFlBQVk7RUFDckMsSUFBSVAsRUFBRSxHQUFHLElBQUksQ0FBQ0EsRUFBRSxHQUFHUSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNOLE1BQU0sRUFBRSxJQUFJLENBQUNFLFFBQVEsRUFBRSxDQUFDO0VBQ3pELElBQUksSUFBSSxDQUFDRCxNQUFNLEVBQUU7SUFDYixJQUFJTSxJQUFJLEdBQUdGLElBQUksQ0FBQ0csTUFBTSxDQUFDLENBQUM7SUFDeEIsSUFBSUMsU0FBUyxHQUFHSixJQUFJLENBQUNLLEtBQUssQ0FBQ0gsSUFBSSxHQUFHLElBQUksQ0FBQ04sTUFBTSxHQUFHSixFQUFFLENBQUM7SUFDbkRBLEVBQUUsR0FBRyxDQUFDUSxJQUFJLENBQUNLLEtBQUssQ0FBQ0gsSUFBSSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUdWLEVBQUUsR0FBR1ksU0FBUyxHQUFHWixFQUFFLEdBQUdZLFNBQVM7RUFDM0U7RUFDQSxPQUFPSixJQUFJLENBQUNQLEdBQUcsQ0FBQ0QsRUFBRSxFQUFFLElBQUksQ0FBQ0UsR0FBRyxDQUFDLEdBQUcsQ0FBQztBQUNyQyxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSixPQUFPLENBQUNRLFNBQVMsQ0FBQ1EsS0FBSyxHQUFHLFlBQVk7RUFDbEMsSUFBSSxDQUFDVCxRQUFRLEdBQUcsQ0FBQztBQUNyQixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBUCxPQUFPLENBQUNRLFNBQVMsQ0FBQ1MsTUFBTSxHQUFHLFVBQVVkLEdBQUcsRUFBRTtFQUN0QyxJQUFJLENBQUNELEVBQUUsR0FBR0MsR0FBRztBQUNqQixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSCxPQUFPLENBQUNRLFNBQVMsQ0FBQ1UsTUFBTSxHQUFHLFVBQVVkLEdBQUcsRUFBRTtFQUN0QyxJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRztBQUNsQixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSixPQUFPLENBQUNRLFNBQVMsQ0FBQ1csU0FBUyxHQUFHLFVBQVViLE1BQU0sRUFBRTtFQUM1QyxJQUFJLENBQUNBLE1BQU0sR0FBR0EsTUFBTTtBQUN4QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2J1aWxkL2VzbS9jb250cmliL2JhY2tvMi5qcz9jOWUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW5pdGlhbGl6ZSBiYWNrb2ZmIHRpbWVyIHdpdGggYG9wdHNgLlxuICpcbiAqIC0gYG1pbmAgaW5pdGlhbCB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyBbMTAwXVxuICogLSBgbWF4YCBtYXggdGltZW91dCBbMTAwMDBdXG4gKiAtIGBqaXR0ZXJgIFswXVxuICogLSBgZmFjdG9yYCBbMl1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICogQGFwaSBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIEJhY2tvZmYob3B0cykge1xuICAgIG9wdHMgPSBvcHRzIHx8IHt9O1xuICAgIHRoaXMubXMgPSBvcHRzLm1pbiB8fCAxMDA7XG4gICAgdGhpcy5tYXggPSBvcHRzLm1heCB8fCAxMDAwMDtcbiAgICB0aGlzLmZhY3RvciA9IG9wdHMuZmFjdG9yIHx8IDI7XG4gICAgdGhpcy5qaXR0ZXIgPSBvcHRzLmppdHRlciA+IDAgJiYgb3B0cy5qaXR0ZXIgPD0gMSA/IG9wdHMuaml0dGVyIDogMDtcbiAgICB0aGlzLmF0dGVtcHRzID0gMDtcbn1cbi8qKlxuICogUmV0dXJuIHRoZSBiYWNrb2ZmIGR1cmF0aW9uLlxuICpcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cbkJhY2tvZmYucHJvdG90eXBlLmR1cmF0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBtcyA9IHRoaXMubXMgKiBNYXRoLnBvdyh0aGlzLmZhY3RvciwgdGhpcy5hdHRlbXB0cysrKTtcbiAgICBpZiAodGhpcy5qaXR0ZXIpIHtcbiAgICAgICAgdmFyIHJhbmQgPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgICB2YXIgZGV2aWF0aW9uID0gTWF0aC5mbG9vcihyYW5kICogdGhpcy5qaXR0ZXIgKiBtcyk7XG4gICAgICAgIG1zID0gKE1hdGguZmxvb3IocmFuZCAqIDEwKSAmIDEpID09IDAgPyBtcyAtIGRldmlhdGlvbiA6IG1zICsgZGV2aWF0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gTWF0aC5taW4obXMsIHRoaXMubWF4KSB8IDA7XG59O1xuLyoqXG4gKiBSZXNldCB0aGUgbnVtYmVyIG9mIGF0dGVtcHRzLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cbkJhY2tvZmYucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuYXR0ZW1wdHMgPSAwO1xufTtcbi8qKlxuICogU2V0IHRoZSBtaW5pbXVtIGR1cmF0aW9uXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuQmFja29mZi5wcm90b3R5cGUuc2V0TWluID0gZnVuY3Rpb24gKG1pbikge1xuICAgIHRoaXMubXMgPSBtaW47XG59O1xuLyoqXG4gKiBTZXQgdGhlIG1heGltdW0gZHVyYXRpb25cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5CYWNrb2ZmLnByb3RvdHlwZS5zZXRNYXggPSBmdW5jdGlvbiAobWF4KSB7XG4gICAgdGhpcy5tYXggPSBtYXg7XG59O1xuLyoqXG4gKiBTZXQgdGhlIGppdHRlclxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cbkJhY2tvZmYucHJvdG90eXBlLnNldEppdHRlciA9IGZ1bmN0aW9uIChqaXR0ZXIpIHtcbiAgICB0aGlzLmppdHRlciA9IGppdHRlcjtcbn07XG4iXSwibmFtZXMiOlsiQmFja29mZiIsIm9wdHMiLCJtcyIsIm1pbiIsIm1heCIsImZhY3RvciIsImppdHRlciIsImF0dGVtcHRzIiwicHJvdG90eXBlIiwiZHVyYXRpb24iLCJNYXRoIiwicG93IiwicmFuZCIsInJhbmRvbSIsImRldmlhdGlvbiIsImZsb29yIiwicmVzZXQiLCJzZXRNaW4iLCJzZXRNYXgiLCJzZXRKaXR0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/contrib/backo2.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Manager: function() { return /* reexport safe */ _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager; },\n/* harmony export */   Socket: function() { return /* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket; },\n/* harmony export */   connect: function() { return /* binding */ lookup; },\n/* harmony export */   \"default\": function() { return /* binding */ lookup; },\n/* harmony export */   io: function() { return /* binding */ lookup; },\n/* harmony export */   protocol: function() { return /* reexport safe */ socket_io_parser__WEBPACK_IMPORTED_MODULE_3__.protocol; }\n/* harmony export */ });\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/socket.io-client/build/esm/url.js\");\n/* harmony import */ var _manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager.js */ \"./node_modules/socket.io-client/build/esm/manager.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n\n\n\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n  if (typeof uri === \"object\") {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n  const parsed = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.url)(uri, opts.path || \"/socket.io\");\n  const source = parsed.source;\n  const id = parsed.id;\n  const path = parsed.path;\n  const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n  const newConnection = opts.forceNew || opts[\"force new connection\"] || false === opts.multiplex || sameNamespace;\n  let io;\n  if (newConnection) {\n    io = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      cache[id] = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.queryKey;\n  }\n  return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n  Manager: _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager,\n  Socket: _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket,\n  io: lookup,\n  connect: lookup\n});\n/**\n * Protocol version.\n *\n * @public\n */\n\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNRO0FBQ0Y7QUFDckM7QUFDQTtBQUNBO0FBQ0EsTUFBTUcsS0FBSyxHQUFHLENBQUMsQ0FBQztBQUNoQixTQUFTQyxNQUFNQSxDQUFDQyxHQUFHLEVBQUVDLElBQUksRUFBRTtFQUN2QixJQUFJLE9BQU9ELEdBQUcsS0FBSyxRQUFRLEVBQUU7SUFDekJDLElBQUksR0FBR0QsR0FBRztJQUNWQSxHQUFHLEdBQUdFLFNBQVM7RUFDbkI7RUFDQUQsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQyxDQUFDO0VBQ2pCLE1BQU1FLE1BQU0sR0FBR1IsNENBQUcsQ0FBQ0ssR0FBRyxFQUFFQyxJQUFJLENBQUNHLElBQUksSUFBSSxZQUFZLENBQUM7RUFDbEQsTUFBTUMsTUFBTSxHQUFHRixNQUFNLENBQUNFLE1BQU07RUFDNUIsTUFBTUMsRUFBRSxHQUFHSCxNQUFNLENBQUNHLEVBQUU7RUFDcEIsTUFBTUYsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7RUFDeEIsTUFBTUcsYUFBYSxHQUFHVCxLQUFLLENBQUNRLEVBQUUsQ0FBQyxJQUFJRixJQUFJLElBQUlOLEtBQUssQ0FBQ1EsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDO0VBQzVELE1BQU1FLGFBQWEsR0FBR1AsSUFBSSxDQUFDUSxRQUFRLElBQy9CUixJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFDNUIsS0FBSyxLQUFLQSxJQUFJLENBQUNTLFNBQVMsSUFDeEJILGFBQWE7RUFDakIsSUFBSUksRUFBRTtFQUNOLElBQUlILGFBQWEsRUFBRTtJQUNmRyxFQUFFLEdBQUcsSUFBSWYsZ0RBQU8sQ0FBQ1MsTUFBTSxFQUFFSixJQUFJLENBQUM7RUFDbEMsQ0FBQyxNQUNJO0lBQ0QsSUFBSSxDQUFDSCxLQUFLLENBQUNRLEVBQUUsQ0FBQyxFQUFFO01BQ1pSLEtBQUssQ0FBQ1EsRUFBRSxDQUFDLEdBQUcsSUFBSVYsZ0RBQU8sQ0FBQ1MsTUFBTSxFQUFFSixJQUFJLENBQUM7SUFDekM7SUFDQVUsRUFBRSxHQUFHYixLQUFLLENBQUNRLEVBQUUsQ0FBQztFQUNsQjtFQUNBLElBQUlILE1BQU0sQ0FBQ1MsS0FBSyxJQUFJLENBQUNYLElBQUksQ0FBQ1csS0FBSyxFQUFFO0lBQzdCWCxJQUFJLENBQUNXLEtBQUssR0FBR1QsTUFBTSxDQUFDVSxRQUFRO0VBQ2hDO0VBQ0EsT0FBT0YsRUFBRSxDQUFDRyxNQUFNLENBQUNYLE1BQU0sQ0FBQ0MsSUFBSSxFQUFFSCxJQUFJLENBQUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0FjLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDakIsTUFBTSxFQUFFO0VBQ2xCSCxPQUFPO0VBQ1BDLE1BQU07RUFDTmMsRUFBRSxFQUFFWixNQUFNO0VBQ1ZrQixPQUFPLEVBQUVsQjtBQUNiLENBQUMsQ0FBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vaW5kZXguanM/ZWNjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1cmwgfSBmcm9tIFwiLi91cmwuanNcIjtcbmltcG9ydCB7IE1hbmFnZXIgfSBmcm9tIFwiLi9tYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBTb2NrZXQgfSBmcm9tIFwiLi9zb2NrZXQuanNcIjtcbi8qKlxuICogTWFuYWdlcnMgY2FjaGUuXG4gKi9cbmNvbnN0IGNhY2hlID0ge307XG5mdW5jdGlvbiBsb29rdXAodXJpLCBvcHRzKSB7XG4gICAgaWYgKHR5cGVvZiB1cmkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgb3B0cyA9IHVyaTtcbiAgICAgICAgdXJpID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBvcHRzID0gb3B0cyB8fCB7fTtcbiAgICBjb25zdCBwYXJzZWQgPSB1cmwodXJpLCBvcHRzLnBhdGggfHwgXCIvc29ja2V0LmlvXCIpO1xuICAgIGNvbnN0IHNvdXJjZSA9IHBhcnNlZC5zb3VyY2U7XG4gICAgY29uc3QgaWQgPSBwYXJzZWQuaWQ7XG4gICAgY29uc3QgcGF0aCA9IHBhcnNlZC5wYXRoO1xuICAgIGNvbnN0IHNhbWVOYW1lc3BhY2UgPSBjYWNoZVtpZF0gJiYgcGF0aCBpbiBjYWNoZVtpZF1bXCJuc3BzXCJdO1xuICAgIGNvbnN0IG5ld0Nvbm5lY3Rpb24gPSBvcHRzLmZvcmNlTmV3IHx8XG4gICAgICAgIG9wdHNbXCJmb3JjZSBuZXcgY29ubmVjdGlvblwiXSB8fFxuICAgICAgICBmYWxzZSA9PT0gb3B0cy5tdWx0aXBsZXggfHxcbiAgICAgICAgc2FtZU5hbWVzcGFjZTtcbiAgICBsZXQgaW87XG4gICAgaWYgKG5ld0Nvbm5lY3Rpb24pIHtcbiAgICAgICAgaW8gPSBuZXcgTWFuYWdlcihzb3VyY2UsIG9wdHMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKCFjYWNoZVtpZF0pIHtcbiAgICAgICAgICAgIGNhY2hlW2lkXSA9IG5ldyBNYW5hZ2VyKHNvdXJjZSwgb3B0cyk7XG4gICAgICAgIH1cbiAgICAgICAgaW8gPSBjYWNoZVtpZF07XG4gICAgfVxuICAgIGlmIChwYXJzZWQucXVlcnkgJiYgIW9wdHMucXVlcnkpIHtcbiAgICAgICAgb3B0cy5xdWVyeSA9IHBhcnNlZC5xdWVyeUtleTtcbiAgICB9XG4gICAgcmV0dXJuIGlvLnNvY2tldChwYXJzZWQucGF0aCwgb3B0cyk7XG59XG4vLyBzbyB0aGF0IFwibG9va3VwXCIgY2FuIGJlIHVzZWQgYm90aCBhcyBhIGZ1bmN0aW9uIChlLmcuIGBpbyguLi4pYCkgYW5kIGFzIGFcbi8vIG5hbWVzcGFjZSAoZS5nLiBgaW8uY29ubmVjdCguLi4pYCksIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5PYmplY3QuYXNzaWduKGxvb2t1cCwge1xuICAgIE1hbmFnZXIsXG4gICAgU29ja2V0LFxuICAgIGlvOiBsb29rdXAsXG4gICAgY29ubmVjdDogbG9va3VwLFxufSk7XG4vKipcbiAqIFByb3RvY29sIHZlcnNpb24uXG4gKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgeyBwcm90b2NvbCB9IGZyb20gXCJzb2NrZXQuaW8tcGFyc2VyXCI7XG4vKipcbiAqIEV4cG9zZSBjb25zdHJ1Y3RvcnMgZm9yIHN0YW5kYWxvbmUgYnVpbGQuXG4gKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgeyBNYW5hZ2VyLCBTb2NrZXQsIGxvb2t1cCBhcyBpbywgbG9va3VwIGFzIGNvbm5lY3QsIGxvb2t1cCBhcyBkZWZhdWx0LCB9O1xuIl0sIm5hbWVzIjpbInVybCIsIk1hbmFnZXIiLCJTb2NrZXQiLCJjYWNoZSIsImxvb2t1cCIsInVyaSIsIm9wdHMiLCJ1bmRlZmluZWQiLCJwYXJzZWQiLCJwYXRoIiwic291cmNlIiwiaWQiLCJzYW1lTmFtZXNwYWNlIiwibmV3Q29ubmVjdGlvbiIsImZvcmNlTmV3IiwibXVsdGlwbGV4IiwiaW8iLCJxdWVyeSIsInF1ZXJ5S2V5Iiwic29ja2V0IiwiT2JqZWN0IiwiYXNzaWduIiwiY29ubmVjdCIsInByb3RvY29sIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/manager.js":
/*!************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/manager.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Manager: function() { return /* binding */ Manager; }\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/backo2.js */ \"./node_modules/socket.io-client/build/esm/contrib/backo2.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n\n\n\n\n\n\nclass Manager extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter {\n  constructor(uri, opts) {\n    var _a;\n    super();\n    this.nsps = {};\n    this.subs = [];\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = undefined;\n    }\n    opts = opts || {};\n    opts.path = opts.path || \"/socket.io\";\n    this.opts = opts;\n    (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.installTimerFunctions)(this, opts);\n    this.reconnection(opts.reconnection !== false);\n    this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n    this.reconnectionDelay(opts.reconnectionDelay || 1000);\n    this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n    this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n    this.backoff = new _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__.Backoff({\n      min: this.reconnectionDelay(),\n      max: this.reconnectionDelayMax(),\n      jitter: this.randomizationFactor()\n    });\n    this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n    this._readyState = \"closed\";\n    this.uri = uri;\n    const _parser = opts.parser || socket_io_parser__WEBPACK_IMPORTED_MODULE_2__;\n    this.encoder = new _parser.Encoder();\n    this.decoder = new _parser.Decoder();\n    this._autoConnect = opts.autoConnect !== false;\n    if (this._autoConnect) this.open();\n  }\n  reconnection(v) {\n    if (!arguments.length) return this._reconnection;\n    this._reconnection = !!v;\n    return this;\n  }\n  reconnectionAttempts(v) {\n    if (v === undefined) return this._reconnectionAttempts;\n    this._reconnectionAttempts = v;\n    return this;\n  }\n  reconnectionDelay(v) {\n    var _a;\n    if (v === undefined) return this._reconnectionDelay;\n    this._reconnectionDelay = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n    return this;\n  }\n  randomizationFactor(v) {\n    var _a;\n    if (v === undefined) return this._randomizationFactor;\n    this._randomizationFactor = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n    return this;\n  }\n  reconnectionDelayMax(v) {\n    var _a;\n    if (v === undefined) return this._reconnectionDelayMax;\n    this._reconnectionDelayMax = v;\n    (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n    return this;\n  }\n  timeout(v) {\n    if (!arguments.length) return this._timeout;\n    this._timeout = v;\n    return this;\n  }\n  /**\n   * Starts trying to reconnect if reconnection is enabled and we have not\n   * started reconnecting yet\n   *\n   * @private\n   */\n  maybeReconnectOnOpen() {\n    // Only try to reconnect if it's the first time we're connecting\n    if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {\n      // keeps reconnection from firing twice for the same reconnection loop\n      this.reconnect();\n    }\n  }\n  /**\n   * Sets the current transport `socket`.\n   *\n   * @param {Function} fn - optional, callback\n   * @return self\n   * @public\n   */\n  open(fn) {\n    if (~this._readyState.indexOf(\"open\")) return this;\n    this.engine = new engine_io_client__WEBPACK_IMPORTED_MODULE_0__.Socket(this.uri, this.opts);\n    const socket = this.engine;\n    const self = this;\n    this._readyState = \"opening\";\n    this.skipReconnect = false;\n    // emit `open`\n    const openSubDestroy = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"open\", function () {\n      self.onopen();\n      fn && fn();\n    });\n    const onError = err => {\n      this.cleanup();\n      this._readyState = \"closed\";\n      this.emitReserved(\"error\", err);\n      if (fn) {\n        fn(err);\n      } else {\n        // Only do this if there is no fn to handle the error\n        this.maybeReconnectOnOpen();\n      }\n    };\n    // emit `error`\n    const errorSub = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", onError);\n    if (false !== this._timeout) {\n      const timeout = this._timeout;\n      // set timer\n      const timer = this.setTimeoutFn(() => {\n        openSubDestroy();\n        onError(new Error(\"timeout\"));\n        socket.close();\n      }, timeout);\n      if (this.opts.autoUnref) {\n        timer.unref();\n      }\n      this.subs.push(() => {\n        this.clearTimeoutFn(timer);\n      });\n    }\n    this.subs.push(openSubDestroy);\n    this.subs.push(errorSub);\n    return this;\n  }\n  /**\n   * Alias for open()\n   *\n   * @return self\n   * @public\n   */\n  connect(fn) {\n    return this.open(fn);\n  }\n  /**\n   * Called upon transport open.\n   *\n   * @private\n   */\n  onopen() {\n    // clear old subs\n    this.cleanup();\n    // mark as open\n    this._readyState = \"open\";\n    this.emitReserved(\"open\");\n    // add new subs\n    const socket = this.engine;\n    this.subs.push((0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"ping\", this.onping.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"data\", this.ondata.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", this.onerror.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"close\", this.onclose.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n  }\n  /**\n   * Called upon a ping.\n   *\n   * @private\n   */\n  onping() {\n    this.emitReserved(\"ping\");\n  }\n  /**\n   * Called with data.\n   *\n   * @private\n   */\n  ondata(data) {\n    try {\n      this.decoder.add(data);\n    } catch (e) {\n      this.onclose(\"parse error\", e);\n    }\n  }\n  /**\n   * Called when parser fully decodes a packet.\n   *\n   * @private\n   */\n  ondecoded(packet) {\n    // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n    (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\n      this.emitReserved(\"packet\", packet);\n    }, this.setTimeoutFn);\n  }\n  /**\n   * Called upon socket error.\n   *\n   * @private\n   */\n  onerror(err) {\n    this.emitReserved(\"error\", err);\n  }\n  /**\n   * Creates a new socket for the given `nsp`.\n   *\n   * @return {Socket}\n   * @public\n   */\n  socket(nsp, opts) {\n    let socket = this.nsps[nsp];\n    if (!socket) {\n      socket = new _socket_js__WEBPACK_IMPORTED_MODULE_1__.Socket(this, nsp, opts);\n      this.nsps[nsp] = socket;\n    } else if (this._autoConnect && !socket.active) {\n      socket.connect();\n    }\n    return socket;\n  }\n  /**\n   * Called upon a socket close.\n   *\n   * @param socket\n   * @private\n   */\n  _destroy(socket) {\n    const nsps = Object.keys(this.nsps);\n    for (const nsp of nsps) {\n      const socket = this.nsps[nsp];\n      if (socket.active) {\n        return;\n      }\n    }\n    this._close();\n  }\n  /**\n   * Writes a packet.\n   *\n   * @param packet\n   * @private\n   */\n  _packet(packet) {\n    const encodedPackets = this.encoder.encode(packet);\n    for (let i = 0; i < encodedPackets.length; i++) {\n      this.engine.write(encodedPackets[i], packet.options);\n    }\n  }\n  /**\n   * Clean up transport subscriptions and packet buffer.\n   *\n   * @private\n   */\n  cleanup() {\n    this.subs.forEach(subDestroy => subDestroy());\n    this.subs.length = 0;\n    this.decoder.destroy();\n  }\n  /**\n   * Close the current socket.\n   *\n   * @private\n   */\n  _close() {\n    this.skipReconnect = true;\n    this._reconnecting = false;\n    this.onclose(\"forced close\");\n    if (this.engine) this.engine.close();\n  }\n  /**\n   * Alias for close()\n   *\n   * @private\n   */\n  disconnect() {\n    return this._close();\n  }\n  /**\n   * Called upon engine close.\n   *\n   * @private\n   */\n  onclose(reason, description) {\n    this.cleanup();\n    this.backoff.reset();\n    this._readyState = \"closed\";\n    this.emitReserved(\"close\", reason, description);\n    if (this._reconnection && !this.skipReconnect) {\n      this.reconnect();\n    }\n  }\n  /**\n   * Attempt a reconnection.\n   *\n   * @private\n   */\n  reconnect() {\n    if (this._reconnecting || this.skipReconnect) return this;\n    const self = this;\n    if (this.backoff.attempts >= this._reconnectionAttempts) {\n      this.backoff.reset();\n      this.emitReserved(\"reconnect_failed\");\n      this._reconnecting = false;\n    } else {\n      const delay = this.backoff.duration();\n      this._reconnecting = true;\n      const timer = this.setTimeoutFn(() => {\n        if (self.skipReconnect) return;\n        this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n        // check again for the case socket closed in above events\n        if (self.skipReconnect) return;\n        self.open(err => {\n          if (err) {\n            self._reconnecting = false;\n            self.reconnect();\n            this.emitReserved(\"reconnect_error\", err);\n          } else {\n            self.onreconnect();\n          }\n        });\n      }, delay);\n      if (this.opts.autoUnref) {\n        timer.unref();\n      }\n      this.subs.push(() => {\n        this.clearTimeoutFn(timer);\n      });\n    }\n  }\n  /**\n   * Called upon successful reconnect.\n   *\n   * @private\n   */\n  onreconnect() {\n    const attempt = this.backoff.attempts;\n    this._reconnecting = false;\n    this.backoff.reset();\n    this.emitReserved(\"reconnect\", attempt);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/manager.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/on.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   on: function() { return /* binding */ on; }\n/* harmony export */ });\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return function subDestroy() {\n    obj.off(ev, fn);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLEVBQUVBLENBQUNDLEdBQUcsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUU7RUFDNUJGLEdBQUcsQ0FBQ0QsRUFBRSxDQUFDRSxFQUFFLEVBQUVDLEVBQUUsQ0FBQztFQUNkLE9BQU8sU0FBU0MsVUFBVUEsQ0FBQSxFQUFHO0lBQ3pCSCxHQUFHLENBQUNJLEdBQUcsQ0FBQ0gsRUFBRSxFQUFFQyxFQUFFLENBQUM7RUFDbkIsQ0FBQztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2J1aWxkL2VzbS9vbi5qcz80ZjVhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBvbihvYmosIGV2LCBmbikge1xuICAgIG9iai5vbihldiwgZm4pO1xuICAgIHJldHVybiBmdW5jdGlvbiBzdWJEZXN0cm95KCkge1xuICAgICAgICBvYmoub2ZmKGV2LCBmbik7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJvbiIsIm9iaiIsImV2IiwiZm4iLCJzdWJEZXN0cm95Iiwib2ZmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/on.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: function() { return /* binding */ Socket; }\n/* harmony export */ });\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n\n\n\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n  connect: 1,\n  connect_error: 1,\n  disconnect: 1,\n  disconnecting: 1,\n  // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n  newListener: 1,\n  removeListener: 1\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__.Emitter {\n  /**\n   * `Socket` constructor.\n   */\n  constructor(io, nsp, opts) {\n    super();\n    /**\n     * Whether the socket is currently connected to the server.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.connected); // true\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.connected); // false\n     * });\n     */\n    this.connected = false;\n    /**\n     * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n     * be transmitted by the server.\n     */\n    this.recovered = false;\n    /**\n     * Buffer for packets received before the CONNECT packet\n     */\n    this.receiveBuffer = [];\n    /**\n     * Buffer for packets that will be sent once the socket is connected\n     */\n    this.sendBuffer = [];\n    /**\n     * The queue of packets to be sent with retry in case of failure.\n     *\n     * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n     * @private\n     */\n    this._queue = [];\n    /**\n     * A sequence to generate the ID of the {@link QueuedPacket}.\n     * @private\n     */\n    this._queueSeq = 0;\n    this.ids = 0;\n    this.acks = {};\n    this.flags = {};\n    this.io = io;\n    this.nsp = nsp;\n    if (opts && opts.auth) {\n      this.auth = opts.auth;\n    }\n    this._opts = Object.assign({}, opts);\n    if (this.io._autoConnect) this.open();\n  }\n  /**\n   * Whether the socket is currently disconnected\n   *\n   * @example\n   * const socket = io();\n   *\n   * socket.on(\"connect\", () => {\n   *   console.log(socket.disconnected); // false\n   * });\n   *\n   * socket.on(\"disconnect\", () => {\n   *   console.log(socket.disconnected); // true\n   * });\n   */\n  get disconnected() {\n    return !this.connected;\n  }\n  /**\n   * Subscribe to open, close and packet events\n   *\n   * @private\n   */\n  subEvents() {\n    if (this.subs) return;\n    const io = this.io;\n    this.subs = [(0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"open\", this.onopen.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"packet\", this.onpacket.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"error\", this.onerror.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"close\", this.onclose.bind(this))];\n  }\n  /**\n   * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n   *\n   * @example\n   * const socket = io();\n   *\n   * console.log(socket.active); // true\n   *\n   * socket.on(\"disconnect\", (reason) => {\n   *   if (reason === \"io server disconnect\") {\n   *     // the disconnection was initiated by the server, you need to manually reconnect\n   *     console.log(socket.active); // false\n   *   }\n   *   // else the socket will automatically try to reconnect\n   *   console.log(socket.active); // true\n   * });\n   */\n  get active() {\n    return !!this.subs;\n  }\n  /**\n   * \"Opens\" the socket.\n   *\n   * @example\n   * const socket = io({\n   *   autoConnect: false\n   * });\n   *\n   * socket.connect();\n   */\n  connect() {\n    if (this.connected) return this;\n    this.subEvents();\n    if (!this.io[\"_reconnecting\"]) this.io.open(); // ensure open\n    if (\"open\" === this.io._readyState) this.onopen();\n    return this;\n  }\n  /**\n   * Alias for {@link connect()}.\n   */\n  open() {\n    return this.connect();\n  }\n  /**\n   * Sends a `message` event.\n   *\n   * This method mimics the WebSocket.send() method.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n   *\n   * @example\n   * socket.send(\"hello\");\n   *\n   * // this is equivalent to\n   * socket.emit(\"message\", \"hello\");\n   *\n   * @return self\n   */\n  send(...args) {\n    args.unshift(\"message\");\n    this.emit.apply(this, args);\n    return this;\n  }\n  /**\n   * Override `emit`.\n   * If the event is in `events`, it's emitted normally.\n   *\n   * @example\n   * socket.emit(\"hello\", \"world\");\n   *\n   * // all serializable datastructures are supported (no need to call JSON.stringify)\n   * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n   *\n   * // with an acknowledgement from the server\n   * socket.emit(\"hello\", \"world\", (val) => {\n   *   // ...\n   * });\n   *\n   * @return self\n   */\n  emit(ev, ...args) {\n    if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n      throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n    }\n    args.unshift(ev);\n    if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n      this._addToQueue(args);\n      return this;\n    }\n    const packet = {\n      type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT,\n      data: args\n    };\n    packet.options = {};\n    packet.options.compress = this.flags.compress !== false;\n    // event ack callback\n    if (\"function\" === typeof args[args.length - 1]) {\n      const id = this.ids++;\n      const ack = args.pop();\n      this._registerAckCallback(id, ack);\n      packet.id = id;\n    }\n    const isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable;\n    const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n    if (discardPacket) {} else if (this.connected) {\n      this.notifyOutgoingListeners(packet);\n      this.packet(packet);\n    } else {\n      this.sendBuffer.push(packet);\n    }\n    this.flags = {};\n    return this;\n  }\n  /**\n   * @private\n   */\n  _registerAckCallback(id, ack) {\n    var _a;\n    const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n    if (timeout === undefined) {\n      this.acks[id] = ack;\n      return;\n    }\n    // @ts-ignore\n    const timer = this.io.setTimeoutFn(() => {\n      delete this.acks[id];\n      for (let i = 0; i < this.sendBuffer.length; i++) {\n        if (this.sendBuffer[i].id === id) {\n          this.sendBuffer.splice(i, 1);\n        }\n      }\n      ack.call(this, new Error(\"operation has timed out\"));\n    }, timeout);\n    this.acks[id] = (...args) => {\n      // @ts-ignore\n      this.io.clearTimeoutFn(timer);\n      ack.apply(this, [null, ...args]);\n    };\n  }\n  /**\n   * Emits an event and waits for an acknowledgement\n   *\n   * @example\n   * // without timeout\n   * const response = await socket.emitWithAck(\"hello\", \"world\");\n   *\n   * // with a specific timeout\n   * try {\n   *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n   * } catch (err) {\n   *   // the server did not acknowledge the event in the given delay\n   * }\n   *\n   * @return a Promise that will be fulfilled when the server acknowledges the event\n   */\n  emitWithAck(ev, ...args) {\n    // the timeout flag is optional\n    const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n    return new Promise((resolve, reject) => {\n      args.push((arg1, arg2) => {\n        if (withErr) {\n          return arg1 ? reject(arg1) : resolve(arg2);\n        } else {\n          return resolve(arg1);\n        }\n      });\n      this.emit(ev, ...args);\n    });\n  }\n  /**\n   * Add the packet to the queue.\n   * @param args\n   * @private\n   */\n  _addToQueue(args) {\n    let ack;\n    if (typeof args[args.length - 1] === \"function\") {\n      ack = args.pop();\n    }\n    const packet = {\n      id: this._queueSeq++,\n      tryCount: 0,\n      pending: false,\n      args,\n      flags: Object.assign({\n        fromQueue: true\n      }, this.flags)\n    };\n    args.push((err, ...responseArgs) => {\n      if (packet !== this._queue[0]) {\n        // the packet has already been acknowledged\n        return;\n      }\n      const hasError = err !== null;\n      if (hasError) {\n        if (packet.tryCount > this._opts.retries) {\n          this._queue.shift();\n          if (ack) {\n            ack(err);\n          }\n        }\n      } else {\n        this._queue.shift();\n        if (ack) {\n          ack(null, ...responseArgs);\n        }\n      }\n      packet.pending = false;\n      return this._drainQueue();\n    });\n    this._queue.push(packet);\n    this._drainQueue();\n  }\n  /**\n   * Send the first packet of the queue, and wait for an acknowledgement from the server.\n   * @param force - whether to resend a packet that has not been acknowledged yet\n   *\n   * @private\n   */\n  _drainQueue(force = false) {\n    if (!this.connected || this._queue.length === 0) {\n      return;\n    }\n    const packet = this._queue[0];\n    if (packet.pending && !force) {\n      return;\n    }\n    packet.pending = true;\n    packet.tryCount++;\n    this.flags = packet.flags;\n    this.emit.apply(this, packet.args);\n  }\n  /**\n   * Sends a packet.\n   *\n   * @param packet\n   * @private\n   */\n  packet(packet) {\n    packet.nsp = this.nsp;\n    this.io._packet(packet);\n  }\n  /**\n   * Called upon engine `open`.\n   *\n   * @private\n   */\n  onopen() {\n    if (typeof this.auth == \"function\") {\n      this.auth(data => {\n        this._sendConnectPacket(data);\n      });\n    } else {\n      this._sendConnectPacket(this.auth);\n    }\n  }\n  /**\n   * Sends a CONNECT packet to initiate the Socket.IO session.\n   *\n   * @param data\n   * @private\n   */\n  _sendConnectPacket(data) {\n    this.packet({\n      type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT,\n      data: this._pid ? Object.assign({\n        pid: this._pid,\n        offset: this._lastOffset\n      }, data) : data\n    });\n  }\n  /**\n   * Called upon engine or manager `error`.\n   *\n   * @param err\n   * @private\n   */\n  onerror(err) {\n    if (!this.connected) {\n      this.emitReserved(\"connect_error\", err);\n    }\n  }\n  /**\n   * Called upon engine `close`.\n   *\n   * @param reason\n   * @param description\n   * @private\n   */\n  onclose(reason, description) {\n    this.connected = false;\n    delete this.id;\n    this.emitReserved(\"disconnect\", reason, description);\n  }\n  /**\n   * Called with socket packet.\n   *\n   * @param packet\n   * @private\n   */\n  onpacket(packet) {\n    const sameNamespace = packet.nsp === this.nsp;\n    if (!sameNamespace) return;\n    switch (packet.type) {\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT:\n        if (packet.data && packet.data.sid) {\n          this.onconnect(packet.data.sid, packet.data.pid);\n        } else {\n          this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n        }\n        break;\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT:\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_EVENT:\n        this.onevent(packet);\n        break;\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK:\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_ACK:\n        this.onack(packet);\n        break;\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT:\n        this.ondisconnect();\n        break;\n      case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT_ERROR:\n        this.destroy();\n        const err = new Error(packet.data.message);\n        // @ts-ignore\n        err.data = packet.data.data;\n        this.emitReserved(\"connect_error\", err);\n        break;\n    }\n  }\n  /**\n   * Called upon a server event.\n   *\n   * @param packet\n   * @private\n   */\n  onevent(packet) {\n    const args = packet.data || [];\n    if (null != packet.id) {\n      args.push(this.ack(packet.id));\n    }\n    if (this.connected) {\n      this.emitEvent(args);\n    } else {\n      this.receiveBuffer.push(Object.freeze(args));\n    }\n  }\n  emitEvent(args) {\n    if (this._anyListeners && this._anyListeners.length) {\n      const listeners = this._anyListeners.slice();\n      for (const listener of listeners) {\n        listener.apply(this, args);\n      }\n    }\n    super.emit.apply(this, args);\n    if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n      this._lastOffset = args[args.length - 1];\n    }\n  }\n  /**\n   * Produces an ack callback to emit with an event.\n   *\n   * @private\n   */\n  ack(id) {\n    const self = this;\n    let sent = false;\n    return function (...args) {\n      // prevent double callbacks\n      if (sent) return;\n      sent = true;\n      self.packet({\n        type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK,\n        id: id,\n        data: args\n      });\n    };\n  }\n  /**\n   * Called upon a server acknowlegement.\n   *\n   * @param packet\n   * @private\n   */\n  onack(packet) {\n    const ack = this.acks[packet.id];\n    if (\"function\" === typeof ack) {\n      ack.apply(this, packet.data);\n      delete this.acks[packet.id];\n    } else {}\n  }\n  /**\n   * Called upon server connect.\n   *\n   * @private\n   */\n  onconnect(id, pid) {\n    this.id = id;\n    this.recovered = pid && this._pid === pid;\n    this._pid = pid; // defined only if connection state recovery is enabled\n    this.connected = true;\n    this.emitBuffered();\n    this.emitReserved(\"connect\");\n    this._drainQueue(true);\n  }\n  /**\n   * Emit buffered events (received and emitted).\n   *\n   * @private\n   */\n  emitBuffered() {\n    this.receiveBuffer.forEach(args => this.emitEvent(args));\n    this.receiveBuffer = [];\n    this.sendBuffer.forEach(packet => {\n      this.notifyOutgoingListeners(packet);\n      this.packet(packet);\n    });\n    this.sendBuffer = [];\n  }\n  /**\n   * Called upon server disconnect.\n   *\n   * @private\n   */\n  ondisconnect() {\n    this.destroy();\n    this.onclose(\"io server disconnect\");\n  }\n  /**\n   * Called upon forced client/server side disconnections,\n   * this method ensures the manager stops tracking us and\n   * that reconnections don't get triggered for this.\n   *\n   * @private\n   */\n  destroy() {\n    if (this.subs) {\n      // clean subscriptions to avoid reconnections\n      this.subs.forEach(subDestroy => subDestroy());\n      this.subs = undefined;\n    }\n    this.io[\"_destroy\"](this);\n  }\n  /**\n   * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n   *\n   * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n   *\n   * @example\n   * const socket = io();\n   *\n   * socket.on(\"disconnect\", (reason) => {\n   *   // console.log(reason); prints \"io client disconnect\"\n   * });\n   *\n   * socket.disconnect();\n   *\n   * @return self\n   */\n  disconnect() {\n    if (this.connected) {\n      this.packet({\n        type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT\n      });\n    }\n    // remove socket from pool\n    this.destroy();\n    if (this.connected) {\n      // fire events\n      this.onclose(\"io client disconnect\");\n    }\n    return this;\n  }\n  /**\n   * Alias for {@link disconnect()}.\n   *\n   * @return self\n   */\n  close() {\n    return this.disconnect();\n  }\n  /**\n   * Sets the compress flag.\n   *\n   * @example\n   * socket.compress(false).emit(\"hello\");\n   *\n   * @param compress - if `true`, compresses the sending data\n   * @return self\n   */\n  compress(compress) {\n    this.flags.compress = compress;\n    return this;\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n   * ready to send messages.\n   *\n   * @example\n   * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n   *\n   * @returns self\n   */\n  get volatile() {\n    this.flags.volatile = true;\n    return this;\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n   * given number of milliseconds have elapsed without an acknowledgement from the server:\n   *\n   * @example\n   * socket.timeout(5000).emit(\"my-event\", (err) => {\n   *   if (err) {\n   *     // the server did not acknowledge the event in the given delay\n   *   }\n   * });\n   *\n   * @returns self\n   */\n  timeout(timeout) {\n    this.flags.timeout = timeout;\n    return this;\n  }\n  /**\n   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n   * callback.\n   *\n   * @example\n   * socket.onAny((event, ...args) => {\n   *   console.log(`got ${event}`);\n   * });\n   *\n   * @param listener\n   */\n  onAny(listener) {\n    this._anyListeners = this._anyListeners || [];\n    this._anyListeners.push(listener);\n    return this;\n  }\n  /**\n   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n   * callback. The listener is added to the beginning of the listeners array.\n   *\n   * @example\n   * socket.prependAny((event, ...args) => {\n   *   console.log(`got event ${event}`);\n   * });\n   *\n   * @param listener\n   */\n  prependAny(listener) {\n    this._anyListeners = this._anyListeners || [];\n    this._anyListeners.unshift(listener);\n    return this;\n  }\n  /**\n   * Removes the listener that will be fired when any event is emitted.\n   *\n   * @example\n   * const catchAllListener = (event, ...args) => {\n   *   console.log(`got event ${event}`);\n   * }\n   *\n   * socket.onAny(catchAllListener);\n   *\n   * // remove a specific listener\n   * socket.offAny(catchAllListener);\n   *\n   * // or remove all listeners\n   * socket.offAny();\n   *\n   * @param listener\n   */\n  offAny(listener) {\n    if (!this._anyListeners) {\n      return this;\n    }\n    if (listener) {\n      const listeners = this._anyListeners;\n      for (let i = 0; i < listeners.length; i++) {\n        if (listener === listeners[i]) {\n          listeners.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._anyListeners = [];\n    }\n    return this;\n  }\n  /**\n   * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n   * e.g. to remove listeners.\n   */\n  listenersAny() {\n    return this._anyListeners || [];\n  }\n  /**\n   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n   * callback.\n   *\n   * Note: acknowledgements sent to the server are not included.\n   *\n   * @example\n   * socket.onAnyOutgoing((event, ...args) => {\n   *   console.log(`sent event ${event}`);\n   * });\n   *\n   * @param listener\n   */\n  onAnyOutgoing(listener) {\n    this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n    this._anyOutgoingListeners.push(listener);\n    return this;\n  }\n  /**\n   * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n   * callback. The listener is added to the beginning of the listeners array.\n   *\n   * Note: acknowledgements sent to the server are not included.\n   *\n   * @example\n   * socket.prependAnyOutgoing((event, ...args) => {\n   *   console.log(`sent event ${event}`);\n   * });\n   *\n   * @param listener\n   */\n  prependAnyOutgoing(listener) {\n    this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n    this._anyOutgoingListeners.unshift(listener);\n    return this;\n  }\n  /**\n   * Removes the listener that will be fired when any event is emitted.\n   *\n   * @example\n   * const catchAllListener = (event, ...args) => {\n   *   console.log(`sent event ${event}`);\n   * }\n   *\n   * socket.onAnyOutgoing(catchAllListener);\n   *\n   * // remove a specific listener\n   * socket.offAnyOutgoing(catchAllListener);\n   *\n   * // or remove all listeners\n   * socket.offAnyOutgoing();\n   *\n   * @param [listener] - the catch-all listener (optional)\n   */\n  offAnyOutgoing(listener) {\n    if (!this._anyOutgoingListeners) {\n      return this;\n    }\n    if (listener) {\n      const listeners = this._anyOutgoingListeners;\n      for (let i = 0; i < listeners.length; i++) {\n        if (listener === listeners[i]) {\n          listeners.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._anyOutgoingListeners = [];\n    }\n    return this;\n  }\n  /**\n   * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n   * e.g. to remove listeners.\n   */\n  listenersAnyOutgoing() {\n    return this._anyOutgoingListeners || [];\n  }\n  /**\n   * Notify the listeners for each packet sent\n   *\n   * @param packet\n   *\n   * @private\n   */\n  notifyOutgoingListeners(packet) {\n    if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n      const listeners = this._anyOutgoingListeners.slice();\n      for (const listener of listeners) {\n        listener.apply(this, packet.data);\n      }\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/socket.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/url.js":
/*!********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/url.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   url: function() { return /* binding */ url; }\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n  let obj = uri;\n  // default to window.location\n  loc = loc || typeof location !== \"undefined\" && location;\n  if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n  // relative path support\n  if (typeof uri === \"string\") {\n    if (\"/\" === uri.charAt(0)) {\n      if (\"/\" === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      if (\"undefined\" !== typeof loc) {\n        uri = loc.protocol + \"//\" + uri;\n      } else {\n        uri = \"https://\" + uri;\n      }\n    }\n    // parse\n    obj = (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.parse)(uri);\n  }\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = \"80\";\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = \"443\";\n    }\n  }\n  obj.path = obj.path || \"/\";\n  const ipv6 = obj.host.indexOf(\":\") !== -1;\n  const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n  // define unique id\n  obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n  // define href\n  obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNDLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsSUFBSSxHQUFHLEVBQUUsRUFBRUMsR0FBRyxFQUFFO0VBQ3JDLElBQUlDLEdBQUcsR0FBR0gsR0FBRztFQUNiO0VBQ0FFLEdBQUcsR0FBR0EsR0FBRyxJQUFLLE9BQU9FLFFBQVEsS0FBSyxXQUFXLElBQUlBLFFBQVM7RUFDMUQsSUFBSSxJQUFJLElBQUlKLEdBQUcsRUFDWEEsR0FBRyxHQUFHRSxHQUFHLENBQUNHLFFBQVEsR0FBRyxJQUFJLEdBQUdILEdBQUcsQ0FBQ0ksSUFBSTtFQUN4QztFQUNBLElBQUksT0FBT04sR0FBRyxLQUFLLFFBQVEsRUFBRTtJQUN6QixJQUFJLEdBQUcsS0FBS0EsR0FBRyxDQUFDTyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUU7TUFDdkIsSUFBSSxHQUFHLEtBQUtQLEdBQUcsQ0FBQ08sTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3ZCUCxHQUFHLEdBQUdFLEdBQUcsQ0FBQ0csUUFBUSxHQUFHTCxHQUFHO01BQzVCLENBQUMsTUFDSTtRQUNEQSxHQUFHLEdBQUdFLEdBQUcsQ0FBQ0ksSUFBSSxHQUFHTixHQUFHO01BQ3hCO0lBQ0o7SUFDQSxJQUFJLENBQUMscUJBQXFCLENBQUNRLElBQUksQ0FBQ1IsR0FBRyxDQUFDLEVBQUU7TUFDbEMsSUFBSSxXQUFXLEtBQUssT0FBT0UsR0FBRyxFQUFFO1FBQzVCRixHQUFHLEdBQUdFLEdBQUcsQ0FBQ0csUUFBUSxHQUFHLElBQUksR0FBR0wsR0FBRztNQUNuQyxDQUFDLE1BQ0k7UUFDREEsR0FBRyxHQUFHLFVBQVUsR0FBR0EsR0FBRztNQUMxQjtJQUNKO0lBQ0E7SUFDQUcsR0FBRyxHQUFHTCx1REFBSyxDQUFDRSxHQUFHLENBQUM7RUFDcEI7RUFDQTtFQUNBLElBQUksQ0FBQ0csR0FBRyxDQUFDTSxJQUFJLEVBQUU7SUFDWCxJQUFJLGFBQWEsQ0FBQ0QsSUFBSSxDQUFDTCxHQUFHLENBQUNFLFFBQVEsQ0FBQyxFQUFFO01BQ2xDRixHQUFHLENBQUNNLElBQUksR0FBRyxJQUFJO0lBQ25CLENBQUMsTUFDSSxJQUFJLGNBQWMsQ0FBQ0QsSUFBSSxDQUFDTCxHQUFHLENBQUNFLFFBQVEsQ0FBQyxFQUFFO01BQ3hDRixHQUFHLENBQUNNLElBQUksR0FBRyxLQUFLO0lBQ3BCO0VBQ0o7RUFDQU4sR0FBRyxDQUFDRixJQUFJLEdBQUdFLEdBQUcsQ0FBQ0YsSUFBSSxJQUFJLEdBQUc7RUFDMUIsTUFBTVMsSUFBSSxHQUFHUCxHQUFHLENBQUNHLElBQUksQ0FBQ0ssT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztFQUN6QyxNQUFNTCxJQUFJLEdBQUdJLElBQUksR0FBRyxHQUFHLEdBQUdQLEdBQUcsQ0FBQ0csSUFBSSxHQUFHLEdBQUcsR0FBR0gsR0FBRyxDQUFDRyxJQUFJO0VBQ25EO0VBQ0FILEdBQUcsQ0FBQ1MsRUFBRSxHQUFHVCxHQUFHLENBQUNFLFFBQVEsR0FBRyxLQUFLLEdBQUdDLElBQUksR0FBRyxHQUFHLEdBQUdILEdBQUcsQ0FBQ00sSUFBSSxHQUFHUixJQUFJO0VBQzVEO0VBQ0FFLEdBQUcsQ0FBQ1UsSUFBSSxHQUNKVixHQUFHLENBQUNFLFFBQVEsR0FDUixLQUFLLEdBQ0xDLElBQUksSUFDSEosR0FBRyxJQUFJQSxHQUFHLENBQUNPLElBQUksS0FBS04sR0FBRyxDQUFDTSxJQUFJLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBR04sR0FBRyxDQUFDTSxJQUFJLENBQUM7RUFDNUQsT0FBT04sR0FBRztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2J1aWxkL2VzbS91cmwuanM/ZjI4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gXCJlbmdpbmUuaW8tY2xpZW50XCI7XG4vKipcbiAqIFVSTCBwYXJzZXIuXG4gKlxuICogQHBhcmFtIHVyaSAtIHVybFxuICogQHBhcmFtIHBhdGggLSB0aGUgcmVxdWVzdCBwYXRoIG9mIHRoZSBjb25uZWN0aW9uXG4gKiBAcGFyYW0gbG9jIC0gQW4gb2JqZWN0IG1lYW50IHRvIG1pbWljIHdpbmRvdy5sb2NhdGlvbi5cbiAqICAgICAgICBEZWZhdWx0cyB0byB3aW5kb3cubG9jYXRpb24uXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1cmwodXJpLCBwYXRoID0gXCJcIiwgbG9jKSB7XG4gICAgbGV0IG9iaiA9IHVyaTtcbiAgICAvLyBkZWZhdWx0IHRvIHdpbmRvdy5sb2NhdGlvblxuICAgIGxvYyA9IGxvYyB8fCAodHlwZW9mIGxvY2F0aW9uICE9PSBcInVuZGVmaW5lZFwiICYmIGxvY2F0aW9uKTtcbiAgICBpZiAobnVsbCA9PSB1cmkpXG4gICAgICAgIHVyaSA9IGxvYy5wcm90b2NvbCArIFwiLy9cIiArIGxvYy5ob3N0O1xuICAgIC8vIHJlbGF0aXZlIHBhdGggc3VwcG9ydFxuICAgIGlmICh0eXBlb2YgdXJpID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChcIi9cIiA9PT0gdXJpLmNoYXJBdCgwKSkge1xuICAgICAgICAgICAgaWYgKFwiL1wiID09PSB1cmkuY2hhckF0KDEpKSB7XG4gICAgICAgICAgICAgICAgdXJpID0gbG9jLnByb3RvY29sICsgdXJpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXJpID0gbG9jLmhvc3QgKyB1cmk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEvXihodHRwcz98d3NzPyk6XFwvXFwvLy50ZXN0KHVyaSkpIHtcbiAgICAgICAgICAgIGlmIChcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgbG9jKSB7XG4gICAgICAgICAgICAgICAgdXJpID0gbG9jLnByb3RvY29sICsgXCIvL1wiICsgdXJpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXJpID0gXCJodHRwczovL1wiICsgdXJpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIHBhcnNlXG4gICAgICAgIG9iaiA9IHBhcnNlKHVyaSk7XG4gICAgfVxuICAgIC8vIG1ha2Ugc3VyZSB3ZSB0cmVhdCBgbG9jYWxob3N0OjgwYCBhbmQgYGxvY2FsaG9zdGAgZXF1YWxseVxuICAgIGlmICghb2JqLnBvcnQpIHtcbiAgICAgICAgaWYgKC9eKGh0dHB8d3MpJC8udGVzdChvYmoucHJvdG9jb2wpKSB7XG4gICAgICAgICAgICBvYmoucG9ydCA9IFwiODBcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgvXihodHRwfHdzKXMkLy50ZXN0KG9iai5wcm90b2NvbCkpIHtcbiAgICAgICAgICAgIG9iai5wb3J0ID0gXCI0NDNcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvYmoucGF0aCA9IG9iai5wYXRoIHx8IFwiL1wiO1xuICAgIGNvbnN0IGlwdjYgPSBvYmouaG9zdC5pbmRleE9mKFwiOlwiKSAhPT0gLTE7XG4gICAgY29uc3QgaG9zdCA9IGlwdjYgPyBcIltcIiArIG9iai5ob3N0ICsgXCJdXCIgOiBvYmouaG9zdDtcbiAgICAvLyBkZWZpbmUgdW5pcXVlIGlkXG4gICAgb2JqLmlkID0gb2JqLnByb3RvY29sICsgXCI6Ly9cIiArIGhvc3QgKyBcIjpcIiArIG9iai5wb3J0ICsgcGF0aDtcbiAgICAvLyBkZWZpbmUgaHJlZlxuICAgIG9iai5ocmVmID1cbiAgICAgICAgb2JqLnByb3RvY29sICtcbiAgICAgICAgICAgIFwiOi8vXCIgK1xuICAgICAgICAgICAgaG9zdCArXG4gICAgICAgICAgICAobG9jICYmIGxvYy5wb3J0ID09PSBvYmoucG9ydCA/IFwiXCIgOiBcIjpcIiArIG9iai5wb3J0KTtcbiAgICByZXR1cm4gb2JqO1xufVxuIl0sIm5hbWVzIjpbInBhcnNlIiwidXJsIiwidXJpIiwicGF0aCIsImxvYyIsIm9iaiIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJob3N0IiwiY2hhckF0IiwidGVzdCIsInBvcnQiLCJpcHY2IiwiaW5kZXhPZiIsImlkIiwiaHJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/url.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/binary.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/binary.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deconstructPacket: function() { return /* binding */ deconstructPacket; },\n/* harmony export */   reconstructPacket: function() { return /* binding */ reconstructPacket; }\n/* harmony export */ });\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n  const buffers = [];\n  const packetData = packet.data;\n  const pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n}\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n  if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_0__.isBinary)(data)) {\n    const placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (Array.isArray(data)) {\n    const newData = new Array(data.length);\n    for (let i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === \"object\" && !(data instanceof Date)) {\n    const newData = {};\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key)) {\n        newData[key] = _deconstructPacket(data[key], buffers);\n      }\n    }\n    return newData;\n  }\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  delete packet.attachments; // no longer useful\n  return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n  if (data && data._placeholder === true) {\n    const isIndexValid = typeof data.num === \"number\" && data.num >= 0 && data.num < buffers.length;\n    if (isIndexValid) {\n      return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    } else {\n      throw new Error(\"illegal attachments\");\n    }\n  } else if (Array.isArray(data)) {\n    for (let i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === \"object\") {\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key)) {\n        data[key] = _reconstructPacket(data[key], buffers);\n      }\n    }\n  }\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLXBhcnNlci9idWlsZC9lc20vYmluYXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVNDLGlCQUFpQkEsQ0FBQ0MsTUFBTSxFQUFFO0VBQ3RDLE1BQU1DLE9BQU8sR0FBRyxFQUFFO0VBQ2xCLE1BQU1DLFVBQVUsR0FBR0YsTUFBTSxDQUFDRyxJQUFJO0VBQzlCLE1BQU1DLElBQUksR0FBR0osTUFBTTtFQUNuQkksSUFBSSxDQUFDRCxJQUFJLEdBQUdFLGtCQUFrQixDQUFDSCxVQUFVLEVBQUVELE9BQU8sQ0FBQztFQUNuREcsSUFBSSxDQUFDRSxXQUFXLEdBQUdMLE9BQU8sQ0FBQ00sTUFBTSxDQUFDLENBQUM7RUFDbkMsT0FBTztJQUFFUCxNQUFNLEVBQUVJLElBQUk7SUFBRUgsT0FBTyxFQUFFQTtFQUFRLENBQUM7QUFDN0M7QUFDQSxTQUFTSSxrQkFBa0JBLENBQUNGLElBQUksRUFBRUYsT0FBTyxFQUFFO0VBQ3ZDLElBQUksQ0FBQ0UsSUFBSSxFQUNMLE9BQU9BLElBQUk7RUFDZixJQUFJTCx1REFBUSxDQUFDSyxJQUFJLENBQUMsRUFBRTtJQUNoQixNQUFNSyxXQUFXLEdBQUc7TUFBRUMsWUFBWSxFQUFFLElBQUk7TUFBRUMsR0FBRyxFQUFFVCxPQUFPLENBQUNNO0lBQU8sQ0FBQztJQUMvRE4sT0FBTyxDQUFDVSxJQUFJLENBQUNSLElBQUksQ0FBQztJQUNsQixPQUFPSyxXQUFXO0VBQ3RCLENBQUMsTUFDSSxJQUFJSSxLQUFLLENBQUNDLE9BQU8sQ0FBQ1YsSUFBSSxDQUFDLEVBQUU7SUFDMUIsTUFBTVcsT0FBTyxHQUFHLElBQUlGLEtBQUssQ0FBQ1QsSUFBSSxDQUFDSSxNQUFNLENBQUM7SUFDdEMsS0FBSyxJQUFJUSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdaLElBQUksQ0FBQ0ksTUFBTSxFQUFFUSxDQUFDLEVBQUUsRUFBRTtNQUNsQ0QsT0FBTyxDQUFDQyxDQUFDLENBQUMsR0FBR1Ysa0JBQWtCLENBQUNGLElBQUksQ0FBQ1ksQ0FBQyxDQUFDLEVBQUVkLE9BQU8sQ0FBQztJQUNyRDtJQUNBLE9BQU9hLE9BQU87RUFDbEIsQ0FBQyxNQUNJLElBQUksT0FBT1gsSUFBSSxLQUFLLFFBQVEsSUFBSSxFQUFFQSxJQUFJLFlBQVlhLElBQUksQ0FBQyxFQUFFO0lBQzFELE1BQU1GLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDbEIsS0FBSyxNQUFNRyxHQUFHLElBQUlkLElBQUksRUFBRTtNQUNwQixJQUFJZSxNQUFNLENBQUNDLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNsQixJQUFJLEVBQUVjLEdBQUcsQ0FBQyxFQUFFO1FBQ2pESCxPQUFPLENBQUNHLEdBQUcsQ0FBQyxHQUFHWixrQkFBa0IsQ0FBQ0YsSUFBSSxDQUFDYyxHQUFHLENBQUMsRUFBRWhCLE9BQU8sQ0FBQztNQUN6RDtJQUNKO0lBQ0EsT0FBT2EsT0FBTztFQUNsQjtFQUNBLE9BQU9YLElBQUk7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTbUIsaUJBQWlCQSxDQUFDdEIsTUFBTSxFQUFFQyxPQUFPLEVBQUU7RUFDL0NELE1BQU0sQ0FBQ0csSUFBSSxHQUFHb0Isa0JBQWtCLENBQUN2QixNQUFNLENBQUNHLElBQUksRUFBRUYsT0FBTyxDQUFDO0VBQ3RELE9BQU9ELE1BQU0sQ0FBQ00sV0FBVyxDQUFDLENBQUM7RUFDM0IsT0FBT04sTUFBTTtBQUNqQjtBQUNBLFNBQVN1QixrQkFBa0JBLENBQUNwQixJQUFJLEVBQUVGLE9BQU8sRUFBRTtFQUN2QyxJQUFJLENBQUNFLElBQUksRUFDTCxPQUFPQSxJQUFJO0VBQ2YsSUFBSUEsSUFBSSxJQUFJQSxJQUFJLENBQUNNLFlBQVksS0FBSyxJQUFJLEVBQUU7SUFDcEMsTUFBTWUsWUFBWSxHQUFHLE9BQU9yQixJQUFJLENBQUNPLEdBQUcsS0FBSyxRQUFRLElBQzdDUCxJQUFJLENBQUNPLEdBQUcsSUFBSSxDQUFDLElBQ2JQLElBQUksQ0FBQ08sR0FBRyxHQUFHVCxPQUFPLENBQUNNLE1BQU07SUFDN0IsSUFBSWlCLFlBQVksRUFBRTtNQUNkLE9BQU92QixPQUFPLENBQUNFLElBQUksQ0FBQ08sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDLE1BQ0k7TUFDRCxNQUFNLElBQUllLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztJQUMxQztFQUNKLENBQUMsTUFDSSxJQUFJYixLQUFLLENBQUNDLE9BQU8sQ0FBQ1YsSUFBSSxDQUFDLEVBQUU7SUFDMUIsS0FBSyxJQUFJWSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdaLElBQUksQ0FBQ0ksTUFBTSxFQUFFUSxDQUFDLEVBQUUsRUFBRTtNQUNsQ1osSUFBSSxDQUFDWSxDQUFDLENBQUMsR0FBR1Esa0JBQWtCLENBQUNwQixJQUFJLENBQUNZLENBQUMsQ0FBQyxFQUFFZCxPQUFPLENBQUM7SUFDbEQ7RUFDSixDQUFDLE1BQ0ksSUFBSSxPQUFPRSxJQUFJLEtBQUssUUFBUSxFQUFFO0lBQy9CLEtBQUssTUFBTWMsR0FBRyxJQUFJZCxJQUFJLEVBQUU7TUFDcEIsSUFBSWUsTUFBTSxDQUFDQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDbEIsSUFBSSxFQUFFYyxHQUFHLENBQUMsRUFBRTtRQUNqRGQsSUFBSSxDQUFDYyxHQUFHLENBQUMsR0FBR00sa0JBQWtCLENBQUNwQixJQUFJLENBQUNjLEdBQUcsQ0FBQyxFQUFFaEIsT0FBTyxDQUFDO01BQ3REO0lBQ0o7RUFDSjtFQUNBLE9BQU9FLElBQUk7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLXBhcnNlci9idWlsZC9lc20vYmluYXJ5LmpzPzk1OWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCaW5hcnkgfSBmcm9tIFwiLi9pcy1iaW5hcnkuanNcIjtcbi8qKlxuICogUmVwbGFjZXMgZXZlcnkgQnVmZmVyIHwgQXJyYXlCdWZmZXIgfCBCbG9iIHwgRmlsZSBpbiBwYWNrZXQgd2l0aCBhIG51bWJlcmVkIHBsYWNlaG9sZGVyLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYWNrZXQgLSBzb2NrZXQuaW8gZXZlbnQgcGFja2V0XG4gKiBAcmV0dXJuIHtPYmplY3R9IHdpdGggZGVjb25zdHJ1Y3RlZCBwYWNrZXQgYW5kIGxpc3Qgb2YgYnVmZmVyc1xuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb25zdHJ1Y3RQYWNrZXQocGFja2V0KSB7XG4gICAgY29uc3QgYnVmZmVycyA9IFtdO1xuICAgIGNvbnN0IHBhY2tldERhdGEgPSBwYWNrZXQuZGF0YTtcbiAgICBjb25zdCBwYWNrID0gcGFja2V0O1xuICAgIHBhY2suZGF0YSA9IF9kZWNvbnN0cnVjdFBhY2tldChwYWNrZXREYXRhLCBidWZmZXJzKTtcbiAgICBwYWNrLmF0dGFjaG1lbnRzID0gYnVmZmVycy5sZW5ndGg7IC8vIG51bWJlciBvZiBiaW5hcnkgJ2F0dGFjaG1lbnRzJ1xuICAgIHJldHVybiB7IHBhY2tldDogcGFjaywgYnVmZmVyczogYnVmZmVycyB9O1xufVxuZnVuY3Rpb24gX2RlY29uc3RydWN0UGFja2V0KGRhdGEsIGJ1ZmZlcnMpIHtcbiAgICBpZiAoIWRhdGEpXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIGlmIChpc0JpbmFyeShkYXRhKSkge1xuICAgICAgICBjb25zdCBwbGFjZWhvbGRlciA9IHsgX3BsYWNlaG9sZGVyOiB0cnVlLCBudW06IGJ1ZmZlcnMubGVuZ3RoIH07XG4gICAgICAgIGJ1ZmZlcnMucHVzaChkYXRhKTtcbiAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgIGNvbnN0IG5ld0RhdGEgPSBuZXcgQXJyYXkoZGF0YS5sZW5ndGgpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIG5ld0RhdGFbaV0gPSBfZGVjb25zdHJ1Y3RQYWNrZXQoZGF0YVtpXSwgYnVmZmVycyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0RhdGE7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiICYmICEoZGF0YSBpbnN0YW5jZW9mIERhdGUpKSB7XG4gICAgICAgIGNvbnN0IG5ld0RhdGEgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgbmV3RGF0YVtrZXldID0gX2RlY29uc3RydWN0UGFja2V0KGRhdGFba2V5XSwgYnVmZmVycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0RhdGE7XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xufVxuLyoqXG4gKiBSZWNvbnN0cnVjdHMgYSBiaW5hcnkgcGFja2V0IGZyb20gaXRzIHBsYWNlaG9sZGVyIHBhY2tldCBhbmQgYnVmZmVyc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYWNrZXQgLSBldmVudCBwYWNrZXQgd2l0aCBwbGFjZWhvbGRlcnNcbiAqIEBwYXJhbSB7QXJyYXl9IGJ1ZmZlcnMgLSBiaW5hcnkgYnVmZmVycyB0byBwdXQgaW4gcGxhY2Vob2xkZXIgcG9zaXRpb25zXG4gKiBAcmV0dXJuIHtPYmplY3R9IHJlY29uc3RydWN0ZWQgcGFja2V0XG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWNvbnN0cnVjdFBhY2tldChwYWNrZXQsIGJ1ZmZlcnMpIHtcbiAgICBwYWNrZXQuZGF0YSA9IF9yZWNvbnN0cnVjdFBhY2tldChwYWNrZXQuZGF0YSwgYnVmZmVycyk7XG4gICAgZGVsZXRlIHBhY2tldC5hdHRhY2htZW50czsgLy8gbm8gbG9uZ2VyIHVzZWZ1bFxuICAgIHJldHVybiBwYWNrZXQ7XG59XG5mdW5jdGlvbiBfcmVjb25zdHJ1Y3RQYWNrZXQoZGF0YSwgYnVmZmVycykge1xuICAgIGlmICghZGF0YSlcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgaWYgKGRhdGEgJiYgZGF0YS5fcGxhY2Vob2xkZXIgPT09IHRydWUpIHtcbiAgICAgICAgY29uc3QgaXNJbmRleFZhbGlkID0gdHlwZW9mIGRhdGEubnVtID09PSBcIm51bWJlclwiICYmXG4gICAgICAgICAgICBkYXRhLm51bSA+PSAwICYmXG4gICAgICAgICAgICBkYXRhLm51bSA8IGJ1ZmZlcnMubGVuZ3RoO1xuICAgICAgICBpZiAoaXNJbmRleFZhbGlkKSB7XG4gICAgICAgICAgICByZXR1cm4gYnVmZmVyc1tkYXRhLm51bV07IC8vIGFwcHJvcHJpYXRlIGJ1ZmZlciAoc2hvdWxkIGJlIG5hdHVyYWwgb3JkZXIgYW55d2F5KVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBhdHRhY2htZW50c1wiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZGF0YVtpXSA9IF9yZWNvbnN0cnVjdFBhY2tldChkYXRhW2ldLCBidWZmZXJzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBkYXRhW2tleV0gPSBfcmVjb25zdHJ1Y3RQYWNrZXQoZGF0YVtrZXldLCBidWZmZXJzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbn1cbiJdLCJuYW1lcyI6WyJpc0JpbmFyeSIsImRlY29uc3RydWN0UGFja2V0IiwicGFja2V0IiwiYnVmZmVycyIsInBhY2tldERhdGEiLCJkYXRhIiwicGFjayIsIl9kZWNvbnN0cnVjdFBhY2tldCIsImF0dGFjaG1lbnRzIiwibGVuZ3RoIiwicGxhY2Vob2xkZXIiLCJfcGxhY2Vob2xkZXIiLCJudW0iLCJwdXNoIiwiQXJyYXkiLCJpc0FycmF5IiwibmV3RGF0YSIsImkiLCJEYXRlIiwia2V5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwicmVjb25zdHJ1Y3RQYWNrZXQiLCJfcmVjb25zdHJ1Y3RQYWNrZXQiLCJpc0luZGV4VmFsaWQiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-parser/build/esm/binary.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decoder: function() { return /* binding */ Decoder; },\n/* harmony export */   Encoder: function() { return /* binding */ Encoder; },\n/* harmony export */   PacketType: function() { return /* binding */ PacketType; },\n/* harmony export */   protocol: function() { return /* binding */ protocol; }\n/* harmony export */ });\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"./node_modules/socket.io-parser/build/esm/binary.js\");\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\n\n\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\"connect\", \"connect_error\", \"disconnect\", \"disconnecting\", \"newListener\", \"removeListener\" // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nconst protocol = 5;\nvar PacketType;\n(function (PacketType) {\n  PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n  PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n  PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n  PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n  PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n  PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n  PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n  /**\n   * Encoder constructor\n   *\n   * @param {function} replacer - custom replacer to pass down to JSON.parse\n   */\n  constructor(replacer) {\n    this.replacer = replacer;\n  }\n  /**\n   * Encode a packet as a single string if non-binary, or as a\n   * buffer sequence, depending on packet type.\n   *\n   * @param {Object} obj - packet object\n   */\n  encode(obj) {\n    if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n      if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.hasBinary)(obj)) {\n        return this.encodeAsBinary({\n          type: obj.type === PacketType.EVENT ? PacketType.BINARY_EVENT : PacketType.BINARY_ACK,\n          nsp: obj.nsp,\n          data: obj.data,\n          id: obj.id\n        });\n      }\n    }\n    return [this.encodeAsString(obj)];\n  }\n  /**\n   * Encode packet as string.\n   */\n  encodeAsString(obj) {\n    // first is type\n    let str = \"\" + obj.type;\n    // attachments if we have them\n    if (obj.type === PacketType.BINARY_EVENT || obj.type === PacketType.BINARY_ACK) {\n      str += obj.attachments + \"-\";\n    }\n    // if we have a namespace other than `/`\n    // we append it followed by a comma `,`\n    if (obj.nsp && \"/\" !== obj.nsp) {\n      str += obj.nsp + \",\";\n    }\n    // immediately followed by the id\n    if (null != obj.id) {\n      str += obj.id;\n    }\n    // json data\n    if (null != obj.data) {\n      str += JSON.stringify(obj.data, this.replacer);\n    }\n    return str;\n  }\n  /**\n   * Encode packet as 'buffer sequence' by removing blobs, and\n   * deconstructing packet into object with placeholders and\n   * a list of buffers.\n   */\n  encodeAsBinary(obj) {\n    const deconstruction = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.deconstructPacket)(obj);\n    const pack = this.encodeAsString(deconstruction.packet);\n    const buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n    return buffers; // write all the buffers\n  }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__.Emitter {\n  /**\n   * Decoder constructor\n   *\n   * @param {function} reviver - custom reviver to pass down to JSON.stringify\n   */\n  constructor(reviver) {\n    super();\n    this.reviver = reviver;\n  }\n  /**\n   * Decodes an encoded packet string into packet JSON.\n   *\n   * @param {String} obj - encoded packet\n   */\n  add(obj) {\n    let packet;\n    if (typeof obj === \"string\") {\n      if (this.reconstructor) {\n        throw new Error(\"got plaintext data when reconstructing a packet\");\n      }\n      packet = this.decodeString(obj);\n      const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n      if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n        packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n        // binary packet's json\n        this.reconstructor = new BinaryReconstructor(packet);\n        // no attachments, labeled binary but no binary data to follow\n        if (packet.attachments === 0) {\n          super.emitReserved(\"decoded\", packet);\n        }\n      } else {\n        // non-binary full packet\n        super.emitReserved(\"decoded\", packet);\n      }\n    } else if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.isBinary)(obj) || obj.base64) {\n      // raw binary data\n      if (!this.reconstructor) {\n        throw new Error(\"got binary data when not reconstructing a packet\");\n      } else {\n        packet = this.reconstructor.takeBinaryData(obj);\n        if (packet) {\n          // received final buffer\n          this.reconstructor = null;\n          super.emitReserved(\"decoded\", packet);\n        }\n      }\n    } else {\n      throw new Error(\"Unknown type: \" + obj);\n    }\n  }\n  /**\n   * Decode a packet String (JSON data)\n   *\n   * @param {String} str\n   * @return {Object} packet\n   */\n  decodeString(str) {\n    let i = 0;\n    // look up type\n    const p = {\n      type: Number(str.charAt(0))\n    };\n    if (PacketType[p.type] === undefined) {\n      throw new Error(\"unknown packet type \" + p.type);\n    }\n    // look up attachments if type binary\n    if (p.type === PacketType.BINARY_EVENT || p.type === PacketType.BINARY_ACK) {\n      const start = i + 1;\n      while (str.charAt(++i) !== \"-\" && i != str.length) {}\n      const buf = str.substring(start, i);\n      if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n        throw new Error(\"Illegal attachments\");\n      }\n      p.attachments = Number(buf);\n    }\n    // look up namespace (if any)\n    if (\"/\" === str.charAt(i + 1)) {\n      const start = i + 1;\n      while (++i) {\n        const c = str.charAt(i);\n        if (\",\" === c) break;\n        if (i === str.length) break;\n      }\n      p.nsp = str.substring(start, i);\n    } else {\n      p.nsp = \"/\";\n    }\n    // look up id\n    const next = str.charAt(i + 1);\n    if (\"\" !== next && Number(next) == next) {\n      const start = i + 1;\n      while (++i) {\n        const c = str.charAt(i);\n        if (null == c || Number(c) != c) {\n          --i;\n          break;\n        }\n        if (i === str.length) break;\n      }\n      p.id = Number(str.substring(start, i + 1));\n    }\n    // look up json data\n    if (str.charAt(++i)) {\n      const payload = this.tryParse(str.substr(i));\n      if (Decoder.isPayloadValid(p.type, payload)) {\n        p.data = payload;\n      } else {\n        throw new Error(\"invalid payload\");\n      }\n    }\n    return p;\n  }\n  tryParse(str) {\n    try {\n      return JSON.parse(str, this.reviver);\n    } catch (e) {\n      return false;\n    }\n  }\n  static isPayloadValid(type, payload) {\n    switch (type) {\n      case PacketType.CONNECT:\n        return isObject(payload);\n      case PacketType.DISCONNECT:\n        return payload === undefined;\n      case PacketType.CONNECT_ERROR:\n        return typeof payload === \"string\" || isObject(payload);\n      case PacketType.EVENT:\n      case PacketType.BINARY_EVENT:\n        return Array.isArray(payload) && (typeof payload[0] === \"number\" || typeof payload[0] === \"string\" && RESERVED_EVENTS.indexOf(payload[0]) === -1);\n      case PacketType.ACK:\n      case PacketType.BINARY_ACK:\n        return Array.isArray(payload);\n    }\n  }\n  /**\n   * Deallocates a parser's resources\n   */\n  destroy() {\n    if (this.reconstructor) {\n      this.reconstructor.finishedReconstruction();\n      this.reconstructor = null;\n    }\n  }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n  constructor(packet) {\n    this.packet = packet;\n    this.buffers = [];\n    this.reconPack = packet;\n  }\n  /**\n   * Method to be called when binary data received from connection\n   * after a BINARY_EVENT packet.\n   *\n   * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n   * @return {null | Object} returns null if more binary data is expected or\n   *   a reconstructed packet object if all buffers have been received.\n   */\n  takeBinaryData(binData) {\n    this.buffers.push(binData);\n    if (this.buffers.length === this.reconPack.attachments) {\n      // done with buffer list\n      const packet = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.reconstructPacket)(this.reconPack, this.buffers);\n      this.finishedReconstruction();\n      return packet;\n    }\n    return null;\n  }\n  /**\n   * Cleans up binary packet reconstruction variables.\n   */\n  finishedReconstruction() {\n    this.reconPack = null;\n    this.buffers = [];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socket.io-parser/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/is-binary.js":
/*!**************************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/is-binary.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBinary: function() { return /* binding */ hasBinary; },\n/* harmony export */   isBinary: function() { return /* binding */ isBinary; }\n/* harmony export */ });\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && toString.call(Blob) === \"[object BlobConstructor]\";\nconst withNativeFile = typeof File === \"function\" || typeof File !== \"undefined\" && toString.call(File) === \"[object FileConstructor]\";\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n  return withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File;\n}\nfunction hasBinary(obj, toJSON) {\n  if (!obj || typeof obj !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(obj)) {\n    for (let i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (isBinary(obj)) {\n    return true;\n  }\n  if (obj.toJSON && typeof obj.toJSON === \"function\" && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLXBhcnNlci9idWlsZC9lc20vaXMtYmluYXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEscUJBQXFCLEdBQUcsT0FBT0MsV0FBVyxLQUFLLFVBQVU7QUFDL0QsTUFBTUMsTUFBTSxHQUFJQyxHQUFHLElBQUs7RUFDcEIsT0FBTyxPQUFPRixXQUFXLENBQUNDLE1BQU0sS0FBSyxVQUFVLEdBQ3pDRCxXQUFXLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLEdBQ3ZCQSxHQUFHLENBQUNDLE1BQU0sWUFBWUgsV0FBVztBQUMzQyxDQUFDO0FBQ0QsTUFBTUksUUFBUSxHQUFHQyxNQUFNLENBQUNDLFNBQVMsQ0FBQ0YsUUFBUTtBQUMxQyxNQUFNRyxjQUFjLEdBQUcsT0FBT0MsSUFBSSxLQUFLLFVBQVUsSUFDNUMsT0FBT0EsSUFBSSxLQUFLLFdBQVcsSUFDeEJKLFFBQVEsQ0FBQ0ssSUFBSSxDQUFDRCxJQUFJLENBQUMsS0FBSywwQkFBMkI7QUFDM0QsTUFBTUUsY0FBYyxHQUFHLE9BQU9DLElBQUksS0FBSyxVQUFVLElBQzVDLE9BQU9BLElBQUksS0FBSyxXQUFXLElBQ3hCUCxRQUFRLENBQUNLLElBQUksQ0FBQ0UsSUFBSSxDQUFDLEtBQUssMEJBQTJCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxRQUFRQSxDQUFDVixHQUFHLEVBQUU7RUFDMUIsT0FBU0gscUJBQXFCLEtBQUtHLEdBQUcsWUFBWUYsV0FBVyxJQUFJQyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDLElBQ3hFSyxjQUFjLElBQUlMLEdBQUcsWUFBWU0sSUFBSyxJQUN0Q0UsY0FBYyxJQUFJUixHQUFHLFlBQVlTLElBQUs7QUFDL0M7QUFDTyxTQUFTRSxTQUFTQSxDQUFDWCxHQUFHLEVBQUVZLE1BQU0sRUFBRTtFQUNuQyxJQUFJLENBQUNaLEdBQUcsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxFQUFFO0lBQ2pDLE9BQU8sS0FBSztFQUNoQjtFQUNBLElBQUlhLEtBQUssQ0FBQ0MsT0FBTyxDQUFDZCxHQUFHLENBQUMsRUFBRTtJQUNwQixLQUFLLElBQUllLENBQUMsR0FBRyxDQUFDLEVBQUVDLENBQUMsR0FBR2hCLEdBQUcsQ0FBQ2lCLE1BQU0sRUFBRUYsQ0FBQyxHQUFHQyxDQUFDLEVBQUVELENBQUMsRUFBRSxFQUFFO01BQ3hDLElBQUlKLFNBQVMsQ0FBQ1gsR0FBRyxDQUFDZSxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ25CLE9BQU8sSUFBSTtNQUNmO0lBQ0o7SUFDQSxPQUFPLEtBQUs7RUFDaEI7RUFDQSxJQUFJTCxRQUFRLENBQUNWLEdBQUcsQ0FBQyxFQUFFO0lBQ2YsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxJQUFJQSxHQUFHLENBQUNZLE1BQU0sSUFDVixPQUFPWixHQUFHLENBQUNZLE1BQU0sS0FBSyxVQUFVLElBQ2hDTSxTQUFTLENBQUNELE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFDeEIsT0FBT04sU0FBUyxDQUFDWCxHQUFHLENBQUNZLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDO0VBQ3hDO0VBQ0EsS0FBSyxNQUFNTyxHQUFHLElBQUluQixHQUFHLEVBQUU7SUFDbkIsSUFBSUcsTUFBTSxDQUFDQyxTQUFTLENBQUNnQixjQUFjLENBQUNiLElBQUksQ0FBQ1AsR0FBRyxFQUFFbUIsR0FBRyxDQUFDLElBQUlSLFNBQVMsQ0FBQ1gsR0FBRyxDQUFDbUIsR0FBRyxDQUFDLENBQUMsRUFBRTtNQUN2RSxPQUFPLElBQUk7SUFDZjtFQUNKO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tcGFyc2VyL2J1aWxkL2VzbS9pcy1iaW5hcnkuanM/MzBkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3aXRoTmF0aXZlQXJyYXlCdWZmZXIgPSB0eXBlb2YgQXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIjtcbmNvbnN0IGlzVmlldyA9IChvYmopID0+IHtcbiAgICByZXR1cm4gdHlwZW9mIEFycmF5QnVmZmVyLmlzVmlldyA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgID8gQXJyYXlCdWZmZXIuaXNWaWV3KG9iailcbiAgICAgICAgOiBvYmouYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI7XG59O1xuY29uc3QgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuY29uc3Qgd2l0aE5hdGl2ZUJsb2IgPSB0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiIHx8XG4gICAgKHR5cGVvZiBCbG9iICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHRvU3RyaW5nLmNhbGwoQmxvYikgPT09IFwiW29iamVjdCBCbG9iQ29uc3RydWN0b3JdXCIpO1xuY29uc3Qgd2l0aE5hdGl2ZUZpbGUgPSB0eXBlb2YgRmlsZSA9PT0gXCJmdW5jdGlvblwiIHx8XG4gICAgKHR5cGVvZiBGaWxlICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHRvU3RyaW5nLmNhbGwoRmlsZSkgPT09IFwiW29iamVjdCBGaWxlQ29uc3RydWN0b3JdXCIpO1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgb2JqIGlzIGEgQnVmZmVyLCBhbiBBcnJheUJ1ZmZlciwgYSBCbG9iIG9yIGEgRmlsZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCaW5hcnkob2JqKSB7XG4gICAgcmV0dXJuICgod2l0aE5hdGl2ZUFycmF5QnVmZmVyICYmIChvYmogaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBpc1ZpZXcob2JqKSkpIHx8XG4gICAgICAgICh3aXRoTmF0aXZlQmxvYiAmJiBvYmogaW5zdGFuY2VvZiBCbG9iKSB8fFxuICAgICAgICAod2l0aE5hdGl2ZUZpbGUgJiYgb2JqIGluc3RhbmNlb2YgRmlsZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc0JpbmFyeShvYmosIHRvSlNPTikge1xuICAgIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgaWYgKGhhc0JpbmFyeShvYmpbaV0pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaXNCaW5hcnkob2JqKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKG9iai50b0pTT04gJiZcbiAgICAgICAgdHlwZW9mIG9iai50b0pTT04gPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICBhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiBoYXNCaW5hcnkob2JqLnRvSlNPTigpLCB0cnVlKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpICYmIGhhc0JpbmFyeShvYmpba2V5XSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6WyJ3aXRoTmF0aXZlQXJyYXlCdWZmZXIiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsIm9iaiIsImJ1ZmZlciIsInRvU3RyaW5nIiwiT2JqZWN0IiwicHJvdG90eXBlIiwid2l0aE5hdGl2ZUJsb2IiLCJCbG9iIiwiY2FsbCIsIndpdGhOYXRpdmVGaWxlIiwiRmlsZSIsImlzQmluYXJ5IiwiaGFzQmluYXJ5IiwidG9KU09OIiwiQXJyYXkiLCJpc0FycmF5IiwiaSIsImwiLCJsZW5ndGgiLCJhcmd1bWVudHMiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-parser/build/esm/is-binary.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=E%3A%5CAcademics%5CThird%20Year%5CSemester%202%5CCP192%5CDemo%5Ccollaborative-texteditor%5Cfrontend%5Csrc%5Cpages%5Croom.tsx&page=%2Froom!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);